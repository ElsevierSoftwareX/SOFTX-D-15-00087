#LyX 2.1 created this file. For more info see http://www.lyx.org/
\lyxformat 474
\begin_document
\begin_header
\textclass scrbook
\use_default_options false
\maintain_unincluded_children false
\language english
\language_package none
\inputencoding iso8859-15
\fontencoding T1
\font_roman default
\font_sans default
\font_typewriter default
\font_math auto
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\default_output_format default
\output_sync 1
\output_sync_macro "\synctex=-1"
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 0
\use_package cancel 0
\use_package esint 2
\use_package mathdots 0
\use_package mathtools 0
\use_package mhchem 0
\use_package stackrel 0
\use_package stmaryrd 0
\use_package undertilde 0
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 1
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 2
\paperpagestyle headings
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
xSPDE:
\emph on

\begin_inset space ~
\end_inset

extensible
\emph default
 
\begin_inset Newline newline
\end_inset

 Stochastic Partial Differential Equations
\end_layout

\begin_layout Author
P.
 D.
 Drummond
\end_layout

\begin_layout Address
\align center

\family sans
\series bold
xSPDE was developed at the
\series default
 
\series bold

\begin_inset Newline newline
\end_inset

Centre for Quantum and Optical Science, 
\series default
 
\series bold

\begin_inset Newline newline
\end_inset

Swinburne University of Technology, 
\begin_inset Newline newline
\end_inset

Melbourne, Victoria, AUSTRALIA.

\series default
 
\begin_inset Newline newline
\end_inset

Documented version: xSPDEv1.02 
\begin_inset Newline newline
\end_inset


\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset

Thanks for much valuable feedback and many useful suggestions from: 
\begin_inset Newline newline
\end_inset


\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset

 Bogdan Opanchuk, Rodney Polkinghorne, Simon Kiesewetter, Laura Rosales-Zarate,
 King Ng and Run Yan Teh.
\end_layout

\begin_layout Standard
\align center
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 1
use_makebox 0
width "100text%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Figures/Internationalist_Star.eps
	width 25col%

\end_inset

 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Chapter
Introduction
\end_layout

\begin_layout Section
xSPDE: a stochastic toolbox
\end_layout

\begin_layout Standard
The xSPDE code is an extensible Stochastic Partial Differential Equation
 solver.
 It is a 
\series bold
stochastic toolbox
\series default
 for constructing simulations, which is applicable to many stochastic problems
\begin_inset CommandInset citation
LatexCommand cite
key "Gardiner"

\end_inset

.
 It has a modular design which can be changed to suit different applications,
 and includes strategies for calculating errors.
 At a basic level just one or two lines of input are enough to specify the
 equation.
 For advanced users, the entire architecture is open and extensible in numerous
 ways.
\end_layout

\begin_layout Standard
Versions with an .m ending are written in Matlab, an interpreted scientific
 language of The Mathworks Inc.
 This version is best regarded as a prototyping platform.
 A code for new applications can be quickly developed and tested.
 This will not be quite as fast as a dedicated code but can be written easily
 and 
\emph on
understandably
\emph default
.
\end_layout

\begin_layout Standard
The xSPDE logo is a three-pointed star that symbolizes that the code is
 suitable for all three domains: ordinary, partial or stochastic equations.
 Coincidentally, the logo is also similar to the three-pointed star from
 a Mercedes 280SE, renowned for its advanced automotive engineering.
\end_layout

\begin_layout Standard
Readers of this document may also wish to try XMDS 
\begin_inset CommandInset citation
LatexCommand cite
key "xmds"

\end_inset

, and its successor, XMDS2 
\begin_inset CommandInset citation
LatexCommand cite
key "xmds2,xmds-source"

\end_inset

, which are similar programs using XML input files.
\end_layout

\begin_layout Section
Applications
\end_layout

\begin_layout Standard
Stochastic equations are equations with random noise terms 
\begin_inset CommandInset citation
LatexCommand cite
key "Gardiner"

\end_inset

.
 They occur in in many fields of science, engineering, economics and other
 disciplines.
 xSPDE can solve both ordinary and partial differential stochastic equations.
 These include partial spatial derivatives, like the Maxwell or Schr√∂dinger
 equations.
\end_layout

\begin_layout Standard
There are many equations of this type, and xSPDE can treat a wide range.
 It has a configurable functional design.
 The general structure permits drop-in replacements of the functions provided.
 Different simulations can be carried out sequentially, to simulate the
 various stages in an experiment or other process.
\end_layout

\begin_layout Standard
The code supports parallelism at both the vector instruction level and at
 the thread level, using Matlab matrix instructions and the parallel toolbox.
 It calculates averages of arbitrary functions of any number of complex
 or real fields.
 It uses sub-ensemble averaging and extrapolation to obtain accurate error
 estimates.
\end_layout

\begin_layout Standard

\emph on
Note: xSPDE is distributed without any guarantee, under the MIT open-source
 license.
 Please test it yourself before use.
\end_layout

\begin_layout Chapter
Interactive xSPDE
\begin_inset CommandInset label
LatexCommand label
name "chap:Interactive-xSPDE"

\end_inset


\end_layout

\begin_layout Standard
All xSPDE simulations require parameters stored in an input structure used
 by the xSPDE toolbox.
 Inputs have default values, which can be changed by typing parameters into
 the 
\emph on
in
\emph default
 structure.
 A complete list of parameters and their uses is given in Chapter 
\begin_inset CommandInset ref
LatexCommand ref
reference "chap:Inputs"

\end_inset

, with a summary table in the Appendix.
 
\end_layout

\begin_layout Standard
The xSPDE toolbox function introduced in this chapter is:
\end_layout

\begin_layout Itemize

\series bold
xspde(in)
\series default
, the combined simulation with graphics function.
\end_layout

\begin_layout Standard
Parameters used in this chapter are: 
\end_layout

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="7" columns="4">
<features rotate="0" tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Label 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Type 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Default value 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Description
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
fields
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
integer 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Number of stochastic variables
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
noises
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
integer 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
1 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Number of noises
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
olabels
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
string
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
'a_1'
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Observable labels
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
da
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
function 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
 0
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The stochastic derivative
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
initial
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
function 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
 0
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Function to initialize variables
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
observe
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
function
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
a(1,:)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Observable function 
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Section
Stochastic equations
\end_layout

\begin_layout Standard
An ordinary stochastic equations 
\begin_inset CommandInset citation
LatexCommand cite
key "DrummondMortimer,K=00003D00003D000026P"

\end_inset

 for a real or complex vector 
\begin_inset Formula $\mathbf{a}$
\end_inset

 is:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\frac{\partial\bm{a}}{\partial t}=\dot{\bm{a}}=\mathbf{A}\left(\bm{a}\right)+\underline{\mathbf{B}}\left(\bm{a}\right)\bm{\zeta}(t).
\end{equation}

\end_inset

Here
\begin_inset Formula $\mathbf{A}$
\end_inset

 is a vector, 
\begin_inset Formula $\underline{\mathbf{B}}$
\end_inset

 a matrix, and 
\begin_inset Formula $\mathbf{\bm{\zeta}}$
\end_inset

 is a real noise vector such that: 
\begin_inset Formula 
\begin{eqnarray*}
\left\langle \zeta_{i}\left(t\right)\zeta_{j}\left(t\right)\right\rangle  & = & \delta\left(t-t'\right)\delta_{ij}
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Subsection
Running xSPDE interactively
\end_layout

\begin_layout Standard
To simulate a stochastic equation interactively, make sure Matlab path is
 pointing to the xSPDE folder and type 
\begin_inset Formula $clear$
\end_inset

 to clear old data.
 
\end_layout

\begin_layout Standard
Next, enter the xSPDE inputs and functions into the command window, as follows:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray*}
in.label1 & = & parameter1\\
in.label2 & = & \ldots\\
in.da & = & @(a,z,r)\,\,(\dot{a})\\
data & = & xspde(in)
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Itemize
The notation 
\begin_inset Formula $in.label=parameter$
\end_inset

 defines metadata in the structure 
\begin_inset Formula $in$
\end_inset

.
\end_layout

\begin_layout Itemize
The notation 
\begin_inset Formula $@(..)$
\end_inset

 is the Matlab shorthand for a function.
 
\end_layout

\begin_layout Itemize
In xSPDE, 
\begin_inset Formula $a$
\end_inset

 is the stochastic variable, 
\begin_inset Formula $z$
\end_inset

 the random noise, and 
\begin_inset Formula $r$
\end_inset

 the parameters.
 
\end_layout

\begin_layout Subsection
The random walk
\end_layout

\begin_layout Standard
The first example is the simplest possible stochastic equation: 
\begin_inset Formula 
\begin{equation}
\dot{a}=\zeta(t)\,,
\end{equation}

\end_inset

with a complete xSPDE script in Matlab below, and output in Fig (
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:The-simplest-case: Wiener"

\end_inset

).
\end_layout

\begin_layout Standard
\align center
\begin_inset Box Doublebox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
in.da=@(a,z,r) z
\end_layout

\begin_layout Plain Layout

\family typewriter
data = xspde(in);
\end_layout

\end_inset

 
\end_layout

\begin_layout Itemize

\series bold
Here 
\begin_inset Formula $in.da$
\end_inset

 defines the derivative function, with 
\begin_inset Formula $z$
\end_inset

 the noise.

\series default
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
centering
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset


\begin_inset Graphics
	filename Figures/Wiener_1.eps
	width 75text%

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:The-simplest-case: Wiener"

\end_inset

The simplest case: a random walk.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Laser quantum noise
\end_layout

\begin_layout Standard
Next we treat a model for the quantum noise of a single mode laser:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\dot{a}=\left(1-\left|a\right|^{2}\right)a+b\zeta(t)
\end{equation}

\end_inset

where 
\begin_inset Formula $\zeta=\left(\zeta_{1}+i\zeta_{2}\right)$
\end_inset

, so that: 
\begin_inset Formula 
\begin{equation}
\left\langle \zeta(t)\zeta^{*}(t')\right\rangle =2\delta\left(t-t'\right)\,.
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
Here the coefficient 
\begin_inset Formula $b$
\end_inset

 describes the quantum noise of the laser, and is inversely proportional
 to the equilibrium photon number.
 An interactive xSPDE script in Matlab is given below, for the case of 
\begin_inset Formula $b=0.01$
\end_inset

, with an output graph in Fig (
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:The-laser"

\end_inset

).
\end_layout

\begin_layout Standard
\align center
\begin_inset Box Doublebox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
in.noises=2;
\end_layout

\begin_layout Plain Layout

\family typewriter
in.observe = @(a,r) abs(a)^2;
\end_layout

\begin_layout Plain Layout

\family typewriter
in.olabels = '|a|^2';
\end_layout

\begin_layout Plain Layout

\family typewriter
in.da=@(a,z,r) (1-abs(a)^2)*a+0.01*(z(1)+i*z(2));
\end_layout

\begin_layout Plain Layout

\family typewriter
xspde(in)
\end_layout

\end_inset

 
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
centering
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset


\begin_inset Graphics
	filename Figures/Laser.eps
	width 75text%

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:The-laser"

\end_inset

Simulation of the stochastic equation describing a laser turning on.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Note that: 
\end_layout

\begin_layout Itemize

\series bold
\begin_inset Formula $in.noises$
\end_inset

 is the number of noises, 
\series default
 
\end_layout

\begin_layout Itemize

\series bold
\begin_inset Formula $in.observe$
\end_inset

 is the graphed function,
\series default
 
\end_layout

\begin_layout Itemize

\series bold
\begin_inset Formula $in.olabels$
\end_inset

 gives the axis label.

\series default
 
\end_layout

\begin_layout Section
Ito and Stratonovich equations
\end_layout

\begin_layout Standard
The xSPDE toolbox is primarily designed to treat Stratonovich equations
 
\begin_inset CommandInset citation
LatexCommand cite
key "Gardiner"

\end_inset

, which are the broad-band limit of a finite band-width random noise equation,
 whose derivatives are evaluated at the midpoint in time of a time-step.
\end_layout

\begin_layout Standard
An equivalent type of of stochastic equation is the Ito form.
 This is written in a similar way to a Stratonovich equation, except that
 this corresponds to a limit where derivatives are evaluated at the start
 of each step.
 To avoid confusion, we can write an Ito equation as a difference equation:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
d\mathbf{a}=\mathbf{A}^{I}\left[\mathbf{a}\right]+\underline{\mathbf{B}}\left[\mathbf{a}\right]\cdot d\bm{w}(t).
\end{equation}

\end_inset

Here 
\begin_inset Formula $\left\langle dw_{i}\left(\bm{x}\right)dw_{j}\left(\bm{x}'\right)\right\rangle =\delta_{ij}dt$
\end_inset

.
 When 
\begin_inset Formula $\bm{\mathsf{B}}$
\end_inset

 is not a constant, the Ito drift term is different to the Stratonovich
 one.
 This difference occurs because the noise term is non-differentiable.
 The relationship is that 
\begin_inset Formula 
\begin{eqnarray}
A_{i} & = & A_{i}^{I}-\frac{1}{2}\sum_{j,m}\frac{\partial B_{ij}}{\partial a_{m}}B_{mj}\,.
\end{eqnarray}

\end_inset


\end_layout

\begin_layout Subsection
Financial calculus
\end_layout

\begin_layout Standard
A well-known Ito stochastic equation is the Black-Scholes equation, used
 to price financial options.
 It describes the fluctuations in a stock value: 
\begin_inset Formula 
\begin{equation}
da=\mu a\,dt+a\sigma\,dw,
\end{equation}

\end_inset

where 
\begin_inset Formula $\left\langle dw^{2}\right\rangle =dt$
\end_inset

.
 Since the noise is multiplicative, the equation is different in Ito and
 Stratonovich forms of stochastic calculus.
 The corresponding Stratonovich equation, as used in xSPDE is: 
\begin_inset Formula 
\begin{equation}
\dot{a}=\left(\mu-\sigma^{2}/2\right)a+a\sigma\zeta(t).
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
An interactive xSPDE script in Matlab is given below with an output graph
 in Fig (
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:The-Black-Scholes"

\end_inset

), for the case of a volatile stock with 
\begin_inset Formula $\mu=0.1,\,\sigma=1$
\end_inset

.
 Note the spiky behaviour, typical of multiplicative noise, and also of
 the risky stocks in the small capitalization portions of the stock market.
\end_layout

\begin_layout Standard
\align center
\begin_inset Box Doublebox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
in.initial=@(v,r) 1
\end_layout

\begin_layout Plain Layout

\family typewriter
in.da=@(a,z,r) -0.4*a+a*z
\end_layout

\begin_layout Plain Layout

\family typewriter
xspde(in)
\end_layout

\end_inset

 
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
centering
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset


\begin_inset Graphics
	filename Figures/Black-Scholes.eps
	width 75text%

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:The-Black-Scholes"

\end_inset

Simulation of the Black-Scholes equation describing stock prices.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Itemize

\series bold
Note that 
\begin_inset Formula $in.initial$
\end_inset

 describes the initialization function.
\end_layout

\begin_layout Itemize
The first argument of 
\begin_inset Formula $@(v,r)$
\end_inset

 is 
\begin_inset Formula $v$
\end_inset

, an initial random variable.
 
\end_layout

\begin_layout Itemize

\series bold
The error-bars are estimates of step-size error.
\end_layout

\begin_layout Itemize
Errors can be reduced by using more time-steps: see Chapter (
\begin_inset CommandInset ref
LatexCommand ref
reference "chap:Projects-xSPDE"

\end_inset

).
\end_layout

\begin_layout Section
Stochastic partial differential equations
\end_layout

\begin_layout Standard
More generally, xSPDE solves 
\begin_inset CommandInset citation
LatexCommand cite
key "WernerDrummond"

\end_inset

 a stochastic partial differential equation for a complex vector field defined
 in space-time dimension 
\begin_inset Formula $d=1-4$
\end_inset

, written in differential form as
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\frac{\partial\mathbf{a}}{\partial t}=\mathbf{A}\left[\mathbf{a}\right]+\underline{\mathbf{B}}\left[\mathbf{a}\right]\cdot\bm{\zeta}(t)+\underline{\mathbf{L}}\left[\bm{\nabla}\right]\cdot\mathbf{a}\,.
\end{equation}

\end_inset

Here 
\begin_inset Formula $\mathbf{a}$
\end_inset

 is a real or complex vector or vector field.
 The initial conditions are arbitrary functions.
 
\begin_inset Formula $\mathbf{A}\left[\mathbf{a}\right]$
\end_inset

 and 
\begin_inset Formula $\underline{\mathbf{B}}\left[\mathbf{a}\right]$
\end_inset

 are vector and matrix functions of 
\begin_inset Formula $\mathbf{a}$
\end_inset

, 
\begin_inset Formula $\underline{\mathbf{L}}\left[\bm{\nabla}\right]$
\end_inset

 is a matrix of linear terms and derivatives, diagonal in the vector indices,
 and 
\begin_inset Formula $\mathbf{\bm{\zeta}}=\left[\bm{\zeta}^{x},\bm{\zeta}^{k}\right]$
\end_inset

 are real delta-correlated noise fields such that: 
\begin_inset Formula 
\begin{eqnarray}
\left\langle \zeta_{i}^{x}\left(t,\bm{x}\right)\zeta_{j}^{x}\left(t,\bm{x}'\right)\right\rangle  & = & \delta\left(\bm{x}-\bm{x}'\right)\delta\left(t-t'\right)\delta_{ij}\nonumber \\
\left\langle \zeta_{i}^{k}\left(t,\bm{k}\right)\zeta_{j}^{k}\left(t,\bm{k}'\right)\right\rangle  & = & f(\mathbf{k})\delta\left(\bm{k}-\bm{k}'\right)\delta\left(t-t'\right)\delta_{ij}.
\end{eqnarray}

\end_inset


\end_layout

\begin_layout Standard
Transverse boundary conditions are assumed periodic.
 The term 
\begin_inset Formula $\underline{\mathbf{L}}\left[\bm{\nabla}\right]$
\end_inset

 may be omitted if 
\begin_inset Formula $d=1$
\end_inset

, as there are no space dimensions.
 Here 
\begin_inset Formula $f(\mathbf{k})$
\end_inset

 is an arbitrary momentum filter, for correlated noise.
\end_layout

\begin_layout Standard
To treat stochastic partial differential equations or SPDEs, the equations
 are divided into two separate parts.
 The first two terms are essentially an ordinary stochastic equation, while
 the last term gives an exactly soluble linear partial differential equation,
 so that: 
\begin_inset Formula 
\begin{equation}
\frac{\partial\mathbf{a}}{\partial t}=\underline{\mathbf{L}}\left[\bm{\nabla}\right]\cdot\mathbf{a}
\end{equation}

\end_inset

The
\emph on
 interaction picture
\emph default
 is a moving reference frame used to solve the linear part of the equation
 exactly, defined by an exponential transformation.
 This is carried out internally by matrix multiplications and Fourier transforms.
\end_layout

\begin_layout Standard
In more detail, in Fourier space, if 
\begin_inset Formula $\tilde{\mathbf{a}}\left(\mathbf{k}\right)=\mathcal{F}\left[\mathbf{a}\left(\mathbf{x}\right)\right]$
\end_inset

 is the Fourier transform of 
\begin_inset Formula $\mathbf{a}$
\end_inset

, we simply define: 
\begin_inset Formula 
\begin{equation}
\tilde{\mathbf{a}}(\mathbf{k},dt)=\mathcal{P}\left(\mathbf{k},dt\right)\mathbf{\tilde{a}}_{I}\left(\mathbf{k},dt\right)
\end{equation}

\end_inset

where the propagation function can be written intuitively as 
\begin_inset Formula $\mathcal{P}=\exp\left[\underline{\mathbf{L}}(\mathbf{D})dt\right]$
\end_inset

, where 
\begin_inset Formula $\mathbf{D}=i\mathbf{k}\sim\nabla$
\end_inset

.
 The function 
\begin_inset Formula $\underline{\mathbf{L}}(\mathbf{D})$
\end_inset

 is input using the xSPDE function 
\series bold
xlinear
\series default
.
 With this definition, at each step the equation that is solved can be re-writte
n in a more complicated looking, but actually more readily soluble form
 as: 
\begin_inset Formula 
\begin{equation}
\frac{\partial\mathbf{a}_{I}}{\partial t}=\mathcal{D}\left[\mathcal{F}^{-1}\mathcal{P}\left(\mathcal{F}\mathbf{a}_{I}\right)\right]
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
The total derivative in the interaction picture is the xSPDE function 
\series bold
xda:
\series default
 
\begin_inset Formula 
\begin{equation}
\dot{\mathbf{a}}_{I}=\mathbf{A}+\underline{\mathbf{B}}\bm{\zeta}
\end{equation}

\end_inset

where usually 
\begin_inset Formula $\mathbf{A},\underline{\mathbf{B}}$
\end_inset

 are evaluated at the midpoint which is the origin in the interaction picture.
 For convenience, the final output is calculated in the original picture,
 so there are interaction picture (IP) transformations at each time-step.
\end_layout

\begin_layout Subsection
Symmetry breaking
\end_layout

\begin_layout Standard
Including space-time dimensions with 
\begin_inset Formula $d=3$
\end_inset

, an example of a SPDE is the stochastic Ginzburg-Landau equation.
 This describes symmetry breaking, as the system develops a spontaneous
 phase which can vary spatially as well.
 The model is widely used in fields ranging from lasers to magnetism, supercondu
ctivity, superfluidity and even particle physics: 
\begin_inset Formula 
\begin{equation}
\dot{a}=\left(1-\left|a\right|^{2}\right)a+b\zeta(t)+ic\nabla^{2}a
\end{equation}

\end_inset

where 
\begin_inset Formula 
\begin{equation}
\left\langle \zeta(x)\zeta^{*}(x')\right\rangle =2\delta\left(t-t'\right)\delta\left(x-x'\right).
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
The full xSPDE script is given below, for parameter values of 
\begin_inset Formula $b=0.001$
\end_inset

 and 
\begin_inset Formula $c=0.01$
\end_inset

, with the output graphed in Fig (
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Symmetry-breaking"

\end_inset

) .
\end_layout

\begin_layout Standard
\align center
\begin_inset Box Doublebox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
in.noises=2;
\end_layout

\begin_layout Plain Layout

\family typewriter
in.dimension=3;
\end_layout

\begin_layout Plain Layout

\family typewriter
in.steps=10;
\end_layout

\begin_layout Plain Layout

\family typewriter
in.linear = @(D,r) i*0.01*(D.x.^2+D.y.^2);
\end_layout

\begin_layout Plain Layout

\family typewriter
in.observe = @(a,~) abs(a).^2;
\end_layout

\begin_layout Plain Layout

\family typewriter
in.olabels = '|a|^2';
\end_layout

\begin_layout Plain Layout

\family typewriter
in.da=@(a,z,~) (1-abs(a(1,:)).^2).*a+0.001*(z(1,:)+i*z(2,:));
\end_layout

\begin_layout Plain Layout

\family typewriter
xspde(in)
\end_layout

\end_inset

 
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
centering
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset


\begin_inset Graphics
	filename Figures/GinzLand.eps
	width 75text%

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Symmetry-breaking"

\end_inset

Simulation of the stochastic equation describing symmetry breaking in two
 dimensions.
 Spatial fluctuations are caused by the different phase-domains that interfere.
 The graph obtained here is projected onto the 
\begin_inset Formula $y=0$
\end_inset

 plane.
 
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Here: 
\end_layout

\begin_layout Itemize

\series bold
\begin_inset Formula $in.dimension$
\end_inset

 is the space-time dimension, with an 
\begin_inset Formula $x-t$
\end_inset

 plot given here.

\series default
 
\end_layout

\begin_layout Itemize

\series bold
\begin_inset Formula $in.steps$
\end_inset

 gives the integration steps per plot-point, for improved accuracy.

\series default
 
\end_layout

\begin_layout Itemize

\series bold
\begin_inset Formula $in.linear$
\end_inset

 is the linear operator - an imaginary laplacian - 
\series default
 
\end_layout

\begin_layout Itemize

\series bold
\begin_inset Formula $D.x$
\end_inset

 indicates a derivative operation, 
\begin_inset Formula $\partial/\partial x$
\end_inset

.

\series default
 
\end_layout

\begin_layout Itemize

\series bold
\begin_inset Formula $-5<x<5$
\end_inset

 is the default xSPDE coordinate range.

\series default
 
\end_layout

\begin_layout Itemize

\series bold
The .* notation is used, as fields require element-wise multiplication.

\series default
 
\end_layout

\begin_layout Chapter
xSPDE averaging and projects
\begin_inset CommandInset label
LatexCommand label
name "chap:Projects-xSPDE"

\end_inset


\end_layout

\begin_layout Standard
The xSPDE toolbox functions introduced in this chapter are:
\end_layout

\begin_layout Itemize

\series bold
xsim(in)
\series default
, the xSPDE simulation function.
\end_layout

\begin_layout Itemize

\series bold
xgraph(data, in)
\series default
, the SPDE graphics function.
\end_layout

\begin_layout Standard
New input parameters introduced in this chapter:
\end_layout

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="4">
<features rotate="0" tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Label 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Type 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Default value 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Description
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
ensembles
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
vector 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
[1 1 1]
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ensembles used for averaging
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
name
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
string 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
' ' 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Simulation name
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
file
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
string 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
'' 
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
File-name for HDF5 or Matlab data file
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
ranges
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
vector 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
10 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Range of coordinates in [t,x,y,z]
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
points
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
vector 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
51 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Output lattice points in [t,x,y,z]
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Section
Using xsim and xgraph
\end_layout

\begin_layout Standard
Suppose that you are not happy with the graphs in an interactive session,
 and want to alter them by adding a heading or some other change.
 For long simulations, it may be inconvenient to re-run everything.
 This is easy, provided the data is in the current workspace.
\end_layout

\begin_layout Standard
For example, suppose the Kubo simulation is run interactively, using an
 output specification so that the 
\begin_inset Formula $data$
\end_inset

 file is stored locally in your Matlab workspace.
 After editing some inputs, the job can be repeated, with data saved to
 the local workspace, by running 
\begin_inset Formula 
\[
[e,data]=xspde(in)\,.
\]

\end_inset


\end_layout

\begin_layout Standard
Alternatively, if you just want the data, and no graphs, use: 
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
[e,data]=xsim(in)\,.
\]

\end_inset


\end_layout

\begin_layout Standard
Next, you should know the object label you wish to change.
 Note that the 
\series bold
xsim
\series default
 and 
\series bold
xgraph
\series default
 program inputs are either structure objects containing data for one simulation,
 or else cell arrays of structures with many simulations in sequence, which
 are treated later.
 You can use either in 
\series bold
xSPDE
\series default
.
 
\end_layout

\begin_layout Standard
To change the project name for the graph headings, input: 
\begin_inset Formula 
\[
in.name='My\,new\,project',
\]

\end_inset

then replot the data using 
\begin_inset Formula 
\[
xgraph(data,in)\,.
\]

\end_inset


\end_layout

\begin_layout Standard
More graphics information can be added, for example using 
\begin_inset Formula 
\[
in.olabels='x'
\]

\end_inset

which inputs this additional graphics data to the 
\begin_inset Formula $in$
\end_inset

 structure to xSPDE.
 Just plot again, using the same instructions.
\end_layout

\begin_layout Section
Ensembles in xSPDE
\end_layout

\begin_layout Standard
Averages over stochastic ensembles are the specialty of xSPDE, which requires
 specification of the ensemble size.
 To get an average, an ensemble size is needed, to obtain more trajectories
 in parallel.
 
\end_layout

\begin_layout Standard
Ensembles are specified in three levels to allow maximum resource utilization,
 so that:
\begin_inset Formula 
\[
in.ensembles=[ensembles(1),ensembles(2),ensembles(3)]\,.
\]

\end_inset

The first, 
\begin_inset Formula $ensembles\left(1\right)$
\end_inset

, gives within-thread parallelism, allowing vector instruction use for single-co
re efficiency.
 The second, 
\begin_inset Formula $ensembles\left(2\right)$
\end_inset

, gives a number of independent trajectories calculated serially.
 
\end_layout

\begin_layout Standard
The third, 
\begin_inset Formula $ensembles\left(3\right)$
\end_inset

, gives multi-core parallelism, and requires the Matlab parallel toolbox.
 This improves speed when there are multiple cores, and one should optimally
 put 
\begin_inset Formula $ensembles\left(3\right)$
\end_inset

 equal to the available number of CPU cores.
\end_layout

\begin_layout Standard
The 
\emph on
total 
\emph default
number of stochastic trajectories or samples is 
\begin_inset Formula 
\[
ensembles(1)\times ensembles(2)\times ensembles(3)\,.
\]

\end_inset


\end_layout

\begin_layout Standard
However, either 
\begin_inset Formula $ensembles(2)$
\end_inset

 or 
\begin_inset Formula $ensembles(3)$
\end_inset

 are required if sampling error-bars are to be calculated, owing to the
 sub-ensemble averaging method used in xSPDE to calculate sampling errors
 accurately.
 
\end_layout

\begin_layout Subsection
Random walk with averaging
\end_layout

\begin_layout Standard
To demonstrate this, try adding some more trajectories, points and an output
 label to the 
\begin_inset Formula $in$
\end_inset

 parameters of the random walk example:
\end_layout

\begin_layout Standard
\align center
\begin_inset Box Doublebox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
in.da=@(a,z,r) z;
\end_layout

\begin_layout Plain Layout

\family typewriter
in.ensembles = [500,20];
\end_layout

\begin_layout Plain Layout

\family typewriter
in.points =101;
\end_layout

\begin_layout Plain Layout

\family typewriter
in.olabels = '<a_1>';
\end_layout

\begin_layout Plain Layout

\family typewriter
xspde(in)
\end_layout

\end_inset

 
\end_layout

\begin_layout Standard
You will see Fig (
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:The-next-simplest-case: Wiener-1a"

\end_inset

) appearing.
 
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
centering
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset


\begin_inset Graphics
	filename Figures/Wiener_1a.eps
	width 75text%

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:The-next-simplest-case: Wiener-1a"

\end_inset

The average random walk with 
\begin_inset Formula $10^{4}$
\end_inset

 trajectories.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
This looks like the earlier graph, but check the vertical scale.
 The 
\begin_inset Formula $in.ensembles=[100,100]$
\end_inset

 input gives an average over 
\begin_inset Formula $10^{4}$
\end_inset

 random trajectories.
 Therefore the sampling error is accordingly reduced by a factor of 
\begin_inset Formula $100$
\end_inset

.
 The two lines plotted are the upper and lower one standard deviation limits.
\end_layout

\begin_layout Standard
The more detailed structure of the random walk is due to having more time-points.
 Of course, 
\begin_inset Formula $\left\langle a\right\rangle =0$
\end_inset

 in the ideal limit.
\end_layout

\begin_layout Standard
Note that: 
\end_layout

\begin_layout Itemize

\series bold
\begin_inset Formula $in.ensembles$
\end_inset

 is the number of trajectories averaged over 
\end_layout

\begin_layout Itemize

\series bold
\begin_inset Formula $in.points$
\end_inset

 is the number of time-points integrated and graphed 
\end_layout

\begin_layout Section
xSPDE projects
\end_layout

\begin_layout Standard
An XPDE session can either run simulations interactively, described in Chapter
 
\begin_inset CommandInset ref
LatexCommand ref
reference "chap:Interactive-xSPDE"

\end_inset

, or else using a function file called a project file.
 This allows xSPDE to run in a batch mode, as needed for longer projects
 which involve large ensembles.
 In either case, the Matlab path must include the xSPDE folder.
\end_layout

\begin_layout Standard
A minimal xSPDE project function is as follows:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray*}
function & = & project.m\\
in.label1 & = & parameter1\\
in.label2 & = & parameter2\\
 & \ldots\\
xspde(in)\\
end
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Standard
For standard graph generation, the script input or project function should
 end with the combined function 
\series bold
xspde(in)
\series default
.
 Alternatively, to generate simulation data and graphs separately, the function
\series bold
 
\begin_inset Formula $xsim$
\end_inset


\series default
 runs the simulation, and 
\begin_inset Formula $xgraph$
\end_inset

 makes the graphs.
 The two-stage option is better for running batch jobs, which you can graph
 at a later time.
 See the next chapter for details.
\end_layout

\begin_layout Standard
After preparing a project, type the project name into the Matlab interface,
 or click on the Run arrow above the editor window.
 
\end_layout

\begin_layout Standard
In summary: 
\end_layout

\begin_layout Itemize
For medium length simulations with more control, use a function file whose
 last executable statement is 
\series bold
xspde(in).
\end_layout

\begin_layout Subsection
Kubo project
\end_layout

\begin_layout Standard
To get started on more complex stochastic programs, we next simulate the
 Kubo oscillator, which is a stochastic equation with multiplicative noise.
 It uses the Stratonovich stochastic calculus.
 It corresponds to an oscillator with a random frequency, with difference
 equation: 
\begin_inset Formula 
\begin{equation}
\dot{a}=ia\zeta
\end{equation}

\end_inset

To simulate this, one can use a file, 
\begin_inset Formula $Kubo.m$
\end_inset

, which also contains definitions of user functions.
\end_layout

\begin_layout Standard
\align center
\begin_inset Box Doublebox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
function [e] = Kubo() 
\end_layout

\begin_layout Plain Layout

\family typewriter
in.name = 'Kubo oscillator';
\end_layout

\begin_layout Plain Layout

\family typewriter
in.ensembles = [400,16]; 
\end_layout

\begin_layout Plain Layout

\family typewriter
in.initial = @(v,~) 1+0*v; 
\end_layout

\begin_layout Plain Layout

\family typewriter
in.da = @(a,z,r) i*a.*xi;
\end_layout

\begin_layout Plain Layout

\family typewriter
in.olabels = {'<a_1>'}; 
\end_layout

\begin_layout Plain Layout

\family typewriter
e = xspde(in); 
\end_layout

\begin_layout Plain Layout

\family typewriter
end
\end_layout

\end_inset

 
\end_layout

\begin_layout Standard
The resulting graph is given in Fig (
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:The-Kubo-example"

\end_inset

), including upper and lower one standard deviation sampling error limits
 to indicate the accuracy of the averages.
 This is obtained on inputting the second number in the ensembles vector,
 to allow sub-ensemble averaging and sampling error estimates.
 Note that 
\begin_inset Formula $.*$
\end_inset

multiplication must be used because the first ensemble is stored as a matrix,
 to improve speed.
\end_layout

\begin_layout Standard
The other input parameters are not specified explicitly.
 Default values are accessed from the 
\series bold
\emph on
inpreferences
\series default
\emph default
 function.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
centering
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset


\begin_inset Graphics
	filename Kubo/Kuboex1.eps
	width 75text%

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:The-Kubo-example"

\end_inset

The amplitude decay of a Kubo oscillator.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Here we note that; 
\end_layout

\begin_layout Description
Kubo defines the parameters and function handles, then runs the simulation.
 
\end_layout

\begin_layout Description
in.name gives a name to identify the project.
 
\end_layout

\begin_layout Description
in.ensembles specifies 400 samples in a parallel vector, repeated 16 times
 in series.
 
\end_layout

\begin_layout Description
in.initial initializes the input to ones; the noise 
\begin_inset Formula $v$
\end_inset

 is used as it has the same lattice dimension as the 
\begin_inset Formula $a$
\end_inset

 field.
 
\end_layout

\begin_layout Description
in.da is the function, 
\begin_inset Formula $da/dt=ia\zeta$
\end_inset

, that specifies the equation being integrated.
 
\end_layout

\begin_layout Description
in.olabels is a cell array with a label for the variable 
\begin_inset Formula $a$
\end_inset

 that is averaged.
 
\end_layout

\begin_layout Description
xspde(in) runs the simulation and graphics program using data from the 
\series bold
in
\series default
 structure.
 
\end_layout

\begin_layout Standard
The function names can point to external files instead of those in the project
 file itself.
 This is useful when dealing with complex projects, or if you just want
 to change one function at a time.
 As no points or ranges were specified, here, default values of 
\begin_inset Formula $51$
\end_inset

 points and a range of 
\begin_inset Formula $10$
\end_inset

 are used.
\end_layout

\begin_layout Section
Data files and batch jobs
\begin_inset CommandInset label
LatexCommand label
name "sec:Batch jobs"

\end_inset


\end_layout

\begin_layout Standard
It is often inconvenient to work interactively, especially for large simulations.
 To save data is very useful.
 This is not automatic: to create a data file, you must enter the filename
 - either interactively or a bath file - before running the simulation,
 using the 
\begin_inset Formula $in.file=filename$
\end_inset

 input.
\end_layout

\begin_layout Standard
The 
\series bold
xSPDE
\series default
 program allows you to specify a file name that stores data in either standard
 HDF5 format, or in Matlab format.
 It also gives multiple ways to edit data for either simulations or graphs.
 A simple interactive workflow is as follows:
\end_layout

\begin_layout Itemize
Create the metadata 
\begin_inset Formula $in$
\end_inset

, and include a file name.
 
\end_layout

\begin_layout Itemize
Run the simulation with
\series bold
 xsim(in).
\end_layout

\begin_layout Itemize
Run 
\series bold
xgraph('',in)
\series default
, and the data will be accessed and graphed.
 
\end_layout

\begin_layout Subsection
Saving data files
\end_layout

\begin_layout Standard
In greater detail, first make sure you have a writable working directory
 with the command 
\begin_inset Formula $cd\sim$
\end_inset

.
 Next, specify the filename using the 
\emph on
in.file='name.ext' 
\emph default
inputs, and run the simulation.
 All calculated 
\begin_inset Formula $data$
\end_inset

 as well as the input metadata from the 
\begin_inset Formula $in$
\end_inset

 object is stored.
 
\end_layout

\begin_layout Standard
For example, 
\begin_inset Formula 
\[
in.file=filename.mat
\]

\end_inset

gives a Matlab data file - which is the simplest to edit.
 
\end_layout

\begin_layout Standard
Alternatively, 
\begin_inset Formula 
\[
in.file=filename.h5
\]

\end_inset

gives an international standard HDF5 data file, useful for exchanging data
 with other programs.
 
\end_layout

\begin_layout Standard
To reload and reanalyze any previously saved Matlab simulation data, say
 
\begin_inset Formula $Kubo.mat$
\end_inset

, at a later time, there are two possible approaches, described below.
\end_layout

\begin_layout Subsection
Graphing saved data
\end_layout

\begin_layout Standard
If the 
\begin_inset Formula $in$
\end_inset

 metadata is still available in an interactive session, just type
\begin_inset Formula 
\[
xgraph('',in)\,,
\]

\end_inset

which tells 
\begin_inset Formula $xgraph$
\end_inset

 to use the file-name already present in 
\begin_inset Formula $in$
\end_inset

.
 
\end_layout

\begin_layout Standard
More generally, one can use a file name directly in 
\begin_inset Formula $xgraph$
\end_inset

, which works with any file type.
 Once the data is saved in a file by running 
\emph on
xsim
\emph default
 or 
\begin_inset Formula $xspde$
\end_inset

 with an input 
\begin_inset Formula $filename$
\end_inset

, just type: 
\begin_inset Formula 
\[
xgraph\,(filename.mat)\,
\]

\end_inset

or for HDF5 files, 
\begin_inset Formula 
\[
xgraph\,(filename.h5)\,
\]

\end_inset

to replot the resulting data.
\end_layout

\begin_layout Standard
Note that you can use 
\begin_inset Formula $xgraph$
\end_inset

 with either Matlab or HDF5 file data inputs, and without having to specify
 the 
\begin_inset Formula $in$
\end_inset

 structure.
 This metadata is automatically saved with the data in the output file.
 This approach has the advantage that many simulations can be saved and
 then graphed later.
\end_layout

\begin_layout Subsection
Editing saved data 
\end_layout

\begin_layout Standard
If the saved data was a Matlab file, one can load the simulated data and
 metadata by typing, for example, 
\begin_inset Formula 
\[
load\,Kubo\,.
\]

\end_inset

Results can easily be replotted interactively, with changed input and new
 graphics details, using this method.
 This approach loads all the relevant saved data into your work-space.
 
\end_layout

\begin_layout Standard
Hence one can easily edit and re-edit the graphics inputs in the 
\begin_inset Formula $in$
\end_inset

 structure, by using:
\begin_inset Formula 
\[
xgraph(data,in).
\]

\end_inset

 To change cell contents for a sequence, be aware that sequence inputs are
 stored in cell arrays with curly bracket indices.
 
\end_layout

\begin_layout Subsection
Combining saved data with new metadata
\end_layout

\begin_layout Standard
If the graphs generated from saved data files need changing, some new input
 specifications may be needed.
 
\end_layout

\begin_layout Standard
To combine an old, saved data file, say 
\begin_inset Formula $'Kubo.mat'$
\end_inset

 with a new input specification 
\begin_inset Formula $in$
\end_inset

 you have just created, type 
\begin_inset Formula 
\[
xgraph\,('Kubo.mat',in)\,,
\]

\end_inset

or if the data was saved in an 
\begin_inset Formula $HDF5$
\end_inset

 file, it is: 
\begin_inset Formula 
\[
xgraph\,('Kubo.h5',in)\,.
\]

\end_inset


\end_layout

\begin_layout Standard
Provided the 
\begin_inset Formula $in$
\end_inset

 structure is present, and includes a valid file-name, you can also use:
 
\begin_inset Formula 
\[
xgraph\,('',in)\,.
\]

\end_inset

With this input the 
\begin_inset Formula $xgraph$
\end_inset

 program automatically knows that it should look for the file-name in the
 
\begin_inset Formula $in$
\end_inset

 metadata.
\end_layout

\begin_layout Standard
In all cases the new 
\begin_inset Formula $in$
\end_inset

 metadata is combined with the old metadata.
 Any new input metadata takes precedence over old, filed metadata.
 
\end_layout

\begin_layout Standard

\series bold
This allows fonts and labels, for example, to be easily changed - without
 having to re-enter all the simulation input details.
\end_layout

\begin_layout Standard
Note that 
\begin_inset Formula $xgraph\,('')$
\end_inset

 is obviously invalid.
\end_layout

\begin_layout Section
Sequential integration
\begin_inset CommandInset label
LatexCommand label
name "sec:Sequential-integration"

\end_inset


\end_layout

\begin_layout Standard
Sequences of calculations are available simply by adding a sequence of inputs
 to xSPDE, representing changed conditions or input/output processing.
 These are combined in a single file for data storage, then graphed separately.
 The results are calculated over specified ranges, with it's own parameters
 and function handles.
 In the current version of xSPDE, the numbers of ensembles must be the same
 throughout.
 
\end_layout

\begin_layout Standard
The initialization routine for the first fields in the sequence is called
 
\series bold
initial
\series default
, while for subsequent initialization it is called 
\series bold
transfer.
 
\series default
The sequential initialization function has four input arguments, to allow
 noise to be combined with previous field values and input arguments, as
 may be required in some types of simulation.
 This is described in the next chapter.
\end_layout

\begin_layout Standard
In many cases, the default transfer value - which is to simply reuse the
 final output of the previous set of fields - is suitable.
 To help indicate the order of a sequence, a time origin can be included
 optionally with sequential plots, so that the new time is the end of the
 previous time, if this is required.
\end_layout

\begin_layout Standard
Suppose the project has a sequence of two simulations, with input structures
 of 
\begin_inset Formula $in1$
\end_inset

, 
\begin_inset Formula $in2$
\end_inset

.
 To run this and store the data locally, just type:
\begin_inset Formula 
\[
[e,data]=xspde(\{in1,in2\})\,.
\]

\end_inset

To change the file headers, at a later stage, type: 
\begin_inset Formula 
\begin{eqnarray*}
in1.name & = & 'My\,first\,simulation'\\
in2.name & = & 'My\,next\,simulation'.
\end{eqnarray*}

\end_inset

This method requires that the 
\begin_inset Formula $data$
\end_inset

 and 
\begin_inset Formula $in1,in2$
\end_inset

 are already loaded into your Matlab work space so they can be edited.
\end_layout

\begin_layout Standard
Next, simply replot the data using 
\begin_inset Formula 
\[
xgraph(data,\{in1,in2\})\,.
\]

\end_inset


\end_layout

\begin_layout Section
xSPDE hints
\end_layout

\begin_layout Itemize
When using xSPDE, it is a good idea to first run the batch test script,
 Batchtest.m.
 This will perform simulations of different types, and report an error score.
 The final error score ought to match the number in the script comments,
 to show your installation is working correctly.
\end_layout

\begin_layout Itemize
xSPDE also tests your parallel toolbox installation.
 If you have no license for this, just omit the third ensemble setting,
 so that the parallel option is not used.
\end_layout

\begin_layout Itemize
To create a project file, it is often easiest to start with an existing
 project function with a similar equation.
 There are a number of these distributed with xSPDE, and these are included
 in the Batchtest examples.
\end_layout

\begin_layout Itemize
Just as in interactive operation, the simulation parameters and functions
 for a batch job are defined in the structure 
\begin_inset Formula $\mathbf{in}$
\end_inset

.
 The parameters include 
\emph on
function handles
\emph default
 that point to user specified functions, which give the initial values,
 derivative terms and quantities measured.
 The function handles can point to any function declarations in the same
 file or Matlab path.
\end_layout

\begin_layout Itemize
Graphics parameters and a comparison function are also defined in the structure
 
\begin_inset Formula $\mathbf{in}$
\end_inset

.
 In each case there are default parameters in a preference file, but the
 user inputs will be used first if included.
\end_layout

\begin_layout Standard
The general workflow is as follows: 
\end_layout

\begin_layout Description
Create a project file, using an existing example as a template 
\end_layout

\begin_layout Description
Decide whether you want to generate graphs now (
\emph on
xSPDE
\emph default
) or later (
\emph on
xsim
\emph default
 and 
\emph on
xgraph
\emph default
).
 
\end_layout

\begin_layout Description
Edit the project file parameters and functions 
\end_layout

\begin_layout Description
Check that the Matlab path includes the xSPDE folder 
\end_layout

\begin_layout Description
Click 
\emph on
Run
\emph default
 
\end_layout

\begin_layout Description
Save the output graphs that you want to keep 
\end_layout

\begin_layout Standard
More details and examples will be given in later sections!
\end_layout

\begin_layout Chapter
Input parameters
\begin_inset CommandInset label
LatexCommand label
name "chap:Inputs"

\end_inset


\end_layout

\begin_layout Standard
This chapter summarizes the input parameters and functions.
\end_layout

\begin_layout Section
xSPDE functions
\end_layout

\begin_layout Subsection*
[e,data] = xspde(input)
\end_layout

\begin_layout Standard
This is the combined xSPDE function.
 It accepts a simulation sequence, 
\begin_inset Formula $input$
\end_inset

.
 As well as generating graphs, it returns a combined error 
\emph on
e,
\emph default
 and the 
\emph on
data
\emph default
 array.
 It calls the functions 
\series bold
xsim 
\series default
and
\series bold
 xgraph
\series default
, explained below.

\series bold
 
\end_layout

\begin_layout Subsection*
[e,data] = xsim(input)
\end_layout

\begin_layout Standard
This is the xSPDE simulation function.
 It accepts a simulation sequence in the 
\begin_inset Formula $input$
\end_inset

 cell array and returns error estimates, together with a cell array of simulated
 
\emph on

\begin_inset Formula $data$
\end_inset


\emph default
.
 The data are: mean values of functions, error bars and sampling errors.
 This can be run as a stand-alone function.
\end_layout

\begin_layout Subsection*
ec = xgraph(data,input)
\end_layout

\begin_layout Standard
This is the xSPDE graphics function.
 It takes computed simulation
\emph on
 
\emph default

\begin_inset Formula $data$
\end_inset

 and 
\begin_inset Formula $input$
\end_inset

 parameter specifications.
 It plots graphs, and returns the maximum difference 
\emph on
ec
\emph default
 from comparisons.
 The 
\begin_inset Formula $data$
\end_inset

 should have as many cells as 
\begin_inset Formula $input$
\end_inset

 cells, for sequences.
 If 
\begin_inset Formula $data=\{''\}$
\end_inset

, then an HDF5 data file will be read using the file-name specified in 
\begin_inset Formula $input$
\end_inset

.
 If 
\begin_inset Formula $data=\{'filename.h5'\}$
\end_inset

 or 
\begin_inset Formula $data=\{'filename.mat'\}$
\end_inset

 then the specified file is read as data.
 Note that 
\begin_inset Formula $.h5$
\end_inset

 indicates an 
\begin_inset Formula $HDF5$
\end_inset

 file format, and 
\begin_inset Formula $.mat$
\end_inset

 indicates a Matlab internal file format.
\end_layout

\begin_layout Subsection*
Simulation parameters
\end_layout

\begin_layout Standard
For each simulation in the 
\begin_inset Formula $input$
\end_inset

 sequence, the input and functions are specified as a data structure, 
\begin_inset Formula $in$
\end_inset

.
 These can be entered either interactively or as part of a simulation function
 file.
 The function file approach allows recycling and editing, so it is better
 for a large project.
\end_layout

\begin_layout Standard
There are extensive default preferences to simplify the inputs.
 If any inputs are omitted, there are default values which are set by inpreferen
ces in all cases.
 These defaults are changed by editing the inpreferences function.
 The 
\emph on
xgrpreferences
\emph default
 function is used to supply graphics default values.
\end_layout

\begin_layout Standard

\series bold
For vector or cell inputs, an input shorter than required is padded to the
 right using default values.
\end_layout

\begin_layout Section
Input parameters and user functions 
\end_layout

\begin_layout Standard
A sequence of simulations is obtained from inputs in a cell array, as 
\begin_inset Formula $input=\{in1,in2,..\}$
\end_inset

.
 The input parameters of each simulation in the sequence are specified in
 a Matlab structure.
 If there is one simulation, just one structure can be input, without the
 braces.
\end_layout

\begin_layout Standard
The standard form of each parameter value is: 
\begin_inset Formula 
\[
in.label=parameter\,
\]

\end_inset


\end_layout

\begin_layout Standard
The inputs are scalar or vector parameters or function handles.
 Quantities relating to graphed averages are cell arrays, indexed by the
 graph number.
 The available inputs, with their default values in brackets, are as follows.
\end_layout

\begin_layout Subsection
Parameters
\end_layout

\begin_layout Description

\emph on
in.name
\emph default
 (='
\begin_inset space ~
\end_inset

'): Name used to label simulation, usually corresponding to the equation
 or problem solved.
 This can be added or removed from graphs using the 
\series bold
\emph on
in.headers 
\series default
\emph default
Boolean variable, as explained in the section on graphics parameters.
 
\begin_inset Formula 
\[
in.name='your\,project\,name'
\]

\end_inset


\end_layout

\begin_layout Description

\emph on
in.dimension
\emph default
 
\emph on
(=1):
\emph default
 The total space-time dimension is labelled, unsurprisingly, 
\begin_inset Formula 
\[
in.dimension=1\ldots4.
\]

\end_inset


\end_layout

\begin_layout Description

\emph on
in.fields
\emph default
 
\emph on
(=1):
\emph default
 These are real or complex variables stored at each lattice point, and are
 the independent variables for integration.
 The fields are vectors that can have any dimension.
 
\begin_inset Formula 
\[
in.fields=1,2,\ldots
\]

\end_inset


\end_layout

\begin_layout Description

\emph on
in.randoms
\emph default
 
\emph on
(=fields
\emph default
): This gives the number of random fields generated per lattice point for
 the initial noise, in coordinate and momentum space.
 Set to zero (
\begin_inset Formula $in.randoms=0$
\end_inset

) for no random fields.
 Random fields can be correlated either in ordinary or momentum spaces.
 The second input is the dimension of random fields in momentum space.
 It can be left out if zero.
 Note that 
\begin_inset Formula $n.random=randoms(1)+randoms(2)$
\end_inset

: 
\begin_inset Formula 
\[
in.randoms=[randoms\left(1\right),randoms\left(2\right)]\ge0\,.
\]

\end_inset


\end_layout

\begin_layout Description

\emph on
in.noises
\emph default
 
\emph on
(=fields
\emph default
): This gives the number of stochastic noises generated per lattice point
 for both the initial noise and the integration noise, in coordinate and
 momentum space.
 Set to zero (
\begin_inset Formula $in.noises=0$
\end_inset

) for no noises.
 This is the number of 
\emph on
rows
\emph default
 in the noise-vector.
 Noises can be correlated either in ordinary or momentum spaces.
 The second input is the dimension of noises in k-space.
 It can be left out if zero.
 Note that 
\begin_inset Formula $n.noise=noises(1)+noises(2)$
\end_inset

: 
\begin_inset Formula 
\[
in.noises=[noises\left(1\right),noises\left(2\right)]\ge0\,.
\]

\end_inset


\end_layout

\begin_layout Description

\emph on
in.ranges
\emph default
 
\emph on
(=[10,10,..]):
\emph default
 Each lattice dimension has a coordinate range, given by: 
\begin_inset Formula 
\[
in.ranges=\left[ranges\left(1\right),\ldots,ranges\left(dimension\right)\right].
\]

\end_inset


\begin_inset Newline newline
\end_inset

 In the temporal graphs, the first coordinate is plotted over 
\begin_inset Formula $0:ranges(1)$
\end_inset

.
 All other coordinates are plotted over 
\begin_inset Formula $-ranges(n)/2:ranges(n)/2$
\end_inset

.
 The default value is 
\begin_inset Formula $10$
\end_inset

 in each dimension.
 
\end_layout

\begin_layout Description

\emph on
in.points
\emph default
 
\emph on
(=[49,35,...35]):
\emph default
 The rectangular lattice of points plotted for each dimension are defined
 by a vector giving the number of points in each dimension: 
\begin_inset Formula 
\[
in.points=\left[points\left(1\right),\ldots,points\left(dimension\right)\right].
\]

\end_inset

The default values are simply given as a rough guide for initial calculations.
 Large, high dimensional lattices take more time to integrate.
 Increasing 
\begin_inset Formula $in.points$
\end_inset

 improves graphics resolution, and gives better accuracy in each relevant
 dimension as well, but requires more memory.
 Speed is improved when the lattice points are a product of small prime
 factors.
 
\end_layout

\begin_layout Description

\emph on
in.step
\emph default
s (
\emph on
=1
\emph default
): Number of time-steps per plotted point.
 The total number of integration steps in a simulation is therefore 
\begin_inset Formula $steps\times(points(1)-1)$
\end_inset

.
 Thus, 
\begin_inset Formula $steps$
\end_inset

 can be increased to improve the accuracy, but gives no change in graphics
 resolution.
 
\series bold
Increase
\series default
 steps to give a 
\series bold
lower
\series default
 time-discretization error: 
\begin_inset Formula 
\[
in.steps=1,2,\ldots
\]

\end_inset


\end_layout

\begin_layout Description

\emph on
in.ensemble
\emph default
s (
\emph on
=[1,1,1]
\emph default
): Number of independent stochastic trajectories simulated.
 This is specified in three levels to allow maximum parallelism.
 The first gives within-thread parallelism, allowing vector instructions.
 The second gives a number of independent trajectories calculated serially.
 The third gives multi-core parallelism, and requires the Matlab parallel
 toolbox.
 Either 
\begin_inset Formula $ensembles(2)$
\end_inset

 or 
\begin_inset Formula $ensembles(3)$
\end_inset

 are required if sampling error-bars are to be calculated.
 
\begin_inset Formula 
\[
in.ensembles=\left[ensembles\left(1\right),ensembles\left(2\right),ensembles\left(3\right)\right]\ge1
\]

\end_inset

The 
\emph on
total 
\emph default
number of stochastic trajectories or samples is 
\begin_inset Formula $ensembles(1)\times ensembles(2)\times ensembles(3)$
\end_inset

.
 
\end_layout

\begin_layout Description

\emph on
in.transforms
\emph default
 (
\emph on
={
\emph default
0}): 
\series bold
Cell array
\series default
 that defines the different transform spaces used to calculate field observables.
 This has the structure 
\begin_inset Formula 
\[
in.transforms\{n\}=\left[t\left(1\right),\ldots t(4)\right]\ge0
\]

\end_inset

There is one transform vector per observable.
 The 
\begin_inset Formula $j-th$
\end_inset

 index, 
\begin_inset Formula $t(j)$
\end_inset

, indicates a Fourier transform on the j-th axis.
 The normalization of the Fourier transform is such that the 
\begin_inset Formula $k=0$
\end_inset

 value in momentum space corresponds to the integral over space, with an
 additional factor of 
\begin_inset Formula $1/\sqrt{2\pi}$
\end_inset

.
 This gives a Fourier integral which is symmetrically normalized in ordinary
 and momentum space.
 The Fourier transform is such that 
\begin_inset Formula $k=0$
\end_inset

 is the 
\emph on
central
\emph default
 value.
 
\end_layout

\begin_layout Description

\emph on
in.olabels
\emph default
 (={'a_1 ',..}): 
\series bold
Cell array
\series default
 of labels for the graph axis observable functions.
 These are text labels that are used on the graph axes.
 The default value is 
\begin_inset Formula $a_{1}$
\end_inset

 if the default observable is used, otherwise it is blank.
 This is overwritten by any subsequent label input when the graphics program
 is run: 
\begin_inset Formula 
\[
in.olabels\{n\}='string'
\]

\end_inset


\end_layout

\begin_layout Description

\emph on
in.c:
\emph default
 This starting letter is always reserved to store user-specified constants
 and parameters.
 All inputs - including 'c' data - are copied into the data files and also
 the lattice structure 
\begin_inset Formula $r$
\end_inset

.
 It is passed to user functions, and can be any data.
 
\begin_inset Formula 
\[
in.c=anything
\]

\end_inset


\end_layout

\begin_layout Subsection
Invariant inputs
\end_layout

\begin_layout Standard
The following can't be changed during a sequence in the current xSPDE version
 - the specified values for the first simulation will be used: 
\end_layout

\begin_layout Enumerate
The extrapolation order 
\end_layout

\begin_layout Enumerate
The number of ensembles (2) 
\end_layout

\begin_layout Enumerate
The number of ensembles (3) 
\end_layout

\begin_layout Subsection
Input functions
\end_layout

\begin_layout Standard
A stochastic equation solver requires the definition of an initial distribution
 and a time derivative.
 In xSPDE, the time derivatives is divided up into a linear term including
 space derivatives, used to define an interaction picture, and the remaining
 derivatives.
 In addition, one must define quantities to be averaged over during the
 simulation, called graphs in xSPDE.
 These are all defined as functions, specified below.
 
\end_layout

\begin_layout Description

\emph on
in.initial
\emph default
 (= @xinitial(v,r)) initializes the fields 
\begin_inset Formula $a$
\end_inset

 for the first simulation in a sequence.
 The initial Gaussian random field variable, 
\begin_inset Formula $v$
\end_inset

, has unit variance if 
\begin_inset Formula $dimension=1$
\end_inset

 or else is delta-correlated in space, with variance 
\begin_inset Formula $1/(dx_{2}..dx_{d})=1/r.dV$
\end_inset

 for 
\begin_inset Formula $d$
\end_inset

 space-time dimensions.
 If specified in the input, 
\begin_inset Formula $ra$
\end_inset

 has a first dimension of 
\begin_inset Formula $n.random$
\end_inset

, otherwise the default is 
\begin_inset Formula $fields$
\end_inset

.
 The default set by 
\begin_inset Formula $x.initial$
\end_inset

 is 
\begin_inset Formula $a=0$
\end_inset

.
 
\end_layout

\begin_layout Description

\emph on
in.transfer
\emph default
 (= @xtransfer(v,a0,r,r0)) initializes the fields 
\begin_inset Formula $a$
\end_inset

 for subsequent calculations in a sequence.
 Otherwise, this function behaves in a similar way to 
\begin_inset Formula $in.initial$
\end_inset

.
 The function includes the previous field 
\begin_inset Formula $a0$
\end_inset

 and lattice 
\begin_inset Formula $r0$
\end_inset

.
 The default set by 
\begin_inset Formula $xtransfer$
\end_inset

 is 
\begin_inset Formula $a=a0$
\end_inset

.
 
\end_layout

\begin_layout Description

\emph on
in.da
\emph default
 (= @xda(a,z,r)) calculates derivatives 
\begin_inset Formula $da$
\end_inset

 of the equation.
 The noise vector, 
\begin_inset Formula $\zeta$
\end_inset

, has variance 
\begin_inset Formula $1/(dx_{1}..dx_{d})$
\end_inset

, for dimension 
\begin_inset Formula $d\le4$
\end_inset

, and a first dimension of 
\begin_inset Formula $n.noise$
\end_inset

 whose default value is 
\begin_inset Formula $fields$
\end_inset

.
 If specified by the two elements of the 
\begin_inset Formula $noises$
\end_inset

 vector, 
\begin_inset Formula $\zeta$
\end_inset

 can have a different first dimension from 
\emph on

\begin_inset Formula $fields$
\end_inset


\emph default
.
 This can also include noise correlated in momentum space.
 
\end_layout

\begin_layout Description

\emph on
in.linear
\emph default
 (= @xlinear(D,r)) is a user-definable function which returns the linear
 coefficients 
\begin_inset Formula $L$
\end_inset

 in Fourier space.
 This is a function of the differential operator 
\begin_inset Formula $D$
\end_inset

.
 The default is zero.
 Here D is a structure with components 
\begin_inset Formula $D.x$
\end_inset

, 
\begin_inset Formula $D.y$
\end_inset

, 
\begin_inset Formula $D.z$
\end_inset

.
 Each component has an array dimension the same as the coordinate lattice.
 
\end_layout

\begin_layout Description

\emph on
in.observe
\emph default
 (= {@xobserve(a,r)}.
 
\series bold
Cell array
\series default
 of function handles that take the current field and returns a real observable
 
\begin_inset Formula $o$
\end_inset

 with dimension of 
\begin_inset Formula $(1\times n.lattice)$
\end_inset

.
 The default observable is the first real field amplitude.
 Note the use of braces for cell arrays! One can also input these individually
 as 
\begin_inset Formula $in.observe\{1\}=@(a,r)\,f(a,r)$
\end_inset

, using an inline anonymous function.
 The total number of observe functions is stored internally as 
\begin_inset Formula $in.graphs$
\end_inset

.
 The fields 
\begin_inset Formula $a$
\end_inset

 passed in the input are transformed according to the 
\begin_inset Formula $in.transforms$
\end_inset

 metadata.
\end_layout

\begin_layout Description

\emph on
in.rfilter(r)
\emph default
 (=@xrfilter) returns the momentum-space filters for the input random terms.
 Each component has an array dimension the same as the coordinate lattice,
 that is, the return dimension is [r.randoms(2),r.n.lattice].
\end_layout

\begin_layout Description

\emph on
in.nfilter(r)
\emph default
 (=@xnfilter) returns the momentum-space filters for the propagation noise
 terms.
 Each component has an array dimension the same as the coordinate lattice,
 that is, the return dimension is[r.noises(2),r.n.lattice].
\end_layout

\begin_layout Section
Lattice, coordinates and time
\end_layout

\begin_layout Subsection*
Time and space
\end_layout

\begin_layout Standard
The default lattice for plotted output data is rectangular, with periodic
 boundary conditions in space, and: 
\begin_inset Formula 
\[
dx(i)=\frac{in.ranges(i)}{in.points(i)-1}
\]

\end_inset

The time index is 
\begin_inset Formula $1$
\end_inset

, and the space index 
\begin_inset Formula $i$
\end_inset

 ranges from 
\begin_inset Formula $2$
\end_inset

 to 
\begin_inset Formula $in.dimension$
\end_inset

.
 The maximum space-time dimension is 
\begin_inset Formula $in.dimension=4$
\end_inset

, while 
\begin_inset Formula $in.ranges(i)$
\end_inset

 is the time and space duration of the simulation, and 
\begin_inset Formula $in.points(i)$
\end_inset

 is the total number of plotted points in the 
\begin_inset Formula $i$
\end_inset

-th direction.
\end_layout

\begin_layout Standard
Time is advanced in basic integration steps that are equal to or smaller
 than 
\begin_inset Formula $dx(1)$
\end_inset

, for purposes of controlling and reducing errors: 
\begin_inset Formula 
\[
dt=\frac{dx(1)}{in.steps\times nc}
\]

\end_inset


\end_layout

\begin_layout Standard
Here, 
\begin_inset Formula $in.steps$
\end_inset

 is the minimum number of steps used per plotted point, and 
\begin_inset Formula $nc=1,2$
\end_inset

 is the check number.
 If 
\begin_inset Formula $nc=1$
\end_inset

, the run uses coarse time-divisions.
 If 
\begin_inset Formula $nc=2$
\end_inset

 the steps are halved in size for error-checking.
 Error-checking can be turned off if not required.
\end_layout

\begin_layout Subsection*
Functions
\end_layout

\begin_layout Standard
The xSPDE program is function oriented: user specified functions define
 initial conditions, equations and observables, amongst other things.
\end_layout

\begin_layout Standard
Function arguments are always in the following order: 
\end_layout

\begin_layout Itemize
the field 
\begin_inset Formula $a$
\end_inset

 or initial random variable 
\begin_inset Formula $v$
\end_inset

.
 
\end_layout

\begin_layout Itemize
the stochastic noise 
\begin_inset Formula $\zeta$
\end_inset

 or other fields
\end_layout

\begin_layout Itemize
non-field arguments.
\end_layout

\begin_layout Itemize
the grid structure 
\begin_inset Formula $r$
\end_inset

 and any previous grid structure needed.
\end_layout

\begin_layout Standard
The first argument, 
\begin_inset Formula $a$
\end_inset

, is a real or complex vector field.
 This is a matrix whose first dimension is the field index.
 The second dimension is the lattice index.
\end_layout

\begin_layout Standard
The second argument, 
\begin_inset Formula $\zeta$
\end_inset

, if needed, is a real random noise, usually abbreviated as 
\begin_inset Formula $z$
\end_inset

 in the examples.
 This is a matrix whose first dimension is the noise index.
 The second dimension is the lattice index.
\end_layout

\begin_layout Standard
The last function argument is the current lattice structure, 
\begin_inset Formula $r$
\end_inset

.
 This contains data about the current integration lattice.
 The most important constants are 
\begin_inset Formula $r.t$
\end_inset

, the current time, and the space coordinates, 
\begin_inset Formula $r.x,\,r.y,\,r.z$
\end_inset

.
 Other data stored in the lattice structure is explained in later chapters.
\end_layout

\begin_layout Subsection*
Arrays
\end_layout

\begin_layout Standard
In all function calls, the variables used are matrices.
 The most important first dimension used is the field length 
\begin_inset Formula $fields$
\end_inset

.
 The second dimension in all arrays is the lattice index, with a length
 
\begin_inset Formula $n.lattice=ensembles(1)\times points(2)\times\ldots points(dimension)$
\end_inset

.
 Here 
\begin_inset Formula $ensembles(1)$
\end_inset

 is the number of stochastic samples integrated as an array.
\end_layout

\begin_layout Standard
For reference, the field dimensions are: 
\end_layout

\begin_layout Itemize
\begin_inset Formula $a,da,L=[fields,n.lattice]$
\end_inset

 
\end_layout

\begin_layout Itemize
\begin_inset Formula $v=[n.random,n.lattice]$
\end_inset

 
\end_layout

\begin_layout Itemize
\begin_inset Formula $z=[n.noise,n.lattice]$
\end_inset

 
\end_layout

\begin_layout Itemize
\begin_inset Formula $D.x,\,r.x,\,r.kx=[1,n.lattice]$
\end_inset

 
\end_layout

\begin_layout Itemize
\begin_inset Formula $o=[1,n.lattice]$
\end_inset

 
\end_layout

\begin_layout Standard
Each observable is defined by a function in a cell array with length 
\begin_inset Formula $n.graphs$
\end_inset

.
\end_layout

\begin_layout Section
Advanced parameters and functions
\end_layout

\begin_layout Subsection
Advanced input parameters
\end_layout

\begin_layout Standard
More advanced input parameters, which don't usually need to be changed from
 default values, are as follows: 
\end_layout

\begin_layout Description

\emph on
in.iterations
\emph default
 (
\emph on
=4
\emph default
): For iterative algorithms like the implicit midpoint method, the iteration
 count is set here, typically around 
\begin_inset Formula $3-4$
\end_inset

.
 Will increase the integration accuracy if set higher, but it may be better
 to increase 
\begin_inset Formula $steps$
\end_inset

 if this is needed.
 With non-iterated algorithms, this input is not used: 
\begin_inset Formula 
\[
in.iterations=1,2,\ldots
\]

\end_inset


\end_layout

\begin_layout Description

\emph on
in.
\emph default
errorchecks (
\emph on
=2
\emph default
): This defines how many times the integration is carried out for error-checking
 purposes.
 If 
\begin_inset Formula $errorchecks=1$
\end_inset

 there is one integration, but no checking at smaller time-steps.
 For error checking, set 
\begin_inset Formula $errorchecks=2$
\end_inset

, which repeats the calculation at a shorter time-step - but with identical
 noise - to obtain the error bars, taking three times longer overall: 
\begin_inset Formula 
\[
in.errorchecks=1,2
\]

\end_inset


\end_layout

\begin_layout Description

\emph on
in.order
\emph default
 
\emph on
(=1):
\emph default
 This is the extrapolation order, which is 
\series bold
only
\series default
 used if 
\begin_inset Formula $errorchecks=2$
\end_inset

.
 The program uses the estimated convergence order to extrapolate to zero
 step-size, with reduced estimated error-bars.
 If 
\begin_inset Formula $order=0$
\end_inset

, no extrapolation is used, which is the most conservative input.
 The default order is usually acceptable, especially when combined with
 the default midpoint algorithm, see next section.
 While any non-negative order can be input, the theoretical orders of the
 four preset methods used 
\emph on
without
\emph default
 stochastic noise terms are: xEuler = 1; xRK2 = 2; xMP = 2; xRK4 = 4.
 Allowed values are: 
\begin_inset Formula 
\[
in.order\ge0
\]

\end_inset


\end_layout

\begin_layout Description

\emph on
in.seed
\emph default
 (
\emph on
=0
\emph default
): Random noise generation seed, for obtaining reproducible noise sequences.
 Only needed if 
\begin_inset Formula $noises>0$
\end_inset

: 
\begin_inset Formula 
\[
in.seed\ge0
\]

\end_inset


\end_layout

\begin_layout Description

\emph on
in.graphs
\emph default
 
\emph on
(=
\emph default
number of observables): This gives the number of observables or graphs computed.
 The default is the length of the cell array of observable functions.
 Normally, this is not initialized, as the default is typically used.
 Can be used to suppress data averaging.
 
\begin_inset Formula 
\[
in.graphs\ge0
\]

\end_inset


\end_layout

\begin_layout Description

\emph on
in.print
\emph default
 (
\emph on
=
\emph default
1): Print flag for output information while running xSPDE.
 If 
\begin_inset Formula $print=0$
\end_inset

, most output is suppressed, while 
\begin_inset Formula $print=1$
\end_inset

 displays a progress report, and 
\begin_inset Formula $print=2$
\end_inset

 also generates a readable summary of the 
\begin_inset Formula $r$
\end_inset

 lattice and 
\begin_inset Formula $gr$
\end_inset

 graphics structures as a record.
 
\begin_inset Formula 
\[
in.print\ge0
\]

\end_inset


\end_layout

\begin_layout Description

\emph on
in.raw
\emph default
 (
\emph on
=
\emph default
0): Flag for storing raw trajectory data.
 If this flag is turned on, raw trajectories are stored in memory and written
 to a file on completion.
 To make use of these, a file-name should be included! 
\begin_inset Formula 
\[
in.raw\ge0
\]

\end_inset


\end_layout

\begin_layout Description

\emph on
in.origin
\emph default
 (= [0,-ranges/2]): This displaces the graph origin for each simulation
 to a user-defined value.
 If omitted, all initial times in a sequence are zero, and the space origin
 is set to 
\begin_inset Formula $-ranges/2$
\end_inset

 to give results that are symmetric about the origin: 
\begin_inset Formula 
\[
in.origin=\left[origin(1),\dots origin\left(4\right)\right]
\]

\end_inset


\end_layout

\begin_layout Description

\emph on
in.ipsteps
\emph default
 (=1 for Euler and RK2, =2 for MP and RK4): This specifies the number of
 interaction picture steps needed in a full propagation time-step.
 Preferred values are chosen according to the setting of 
\begin_inset Formula $in.step$
\end_inset

.
 Can be changed for custom integration methods.
 
\begin_inset Formula 
\[
in.ipsteps=1,2,3..
\]

\end_inset


\end_layout

\begin_layout Description

\emph on
in.file
\emph default
 (
\emph on
='
\begin_inset space ~
\end_inset

'
\emph default
): Matlab or 
\emph on
HDF5
\emph default
 file name for output data.
 Includes all data and parameter values, including raw trajectories if 
\begin_inset Formula $raw=1$
\end_inset

.
 If not needed just omit this.
 A Matlab filename should end in 
\begin_inset Formula $.mat$
\end_inset

, while an HDF5 file requires the filename to end in .h5.
 
\begin_inset Formula 
\[
in.file=\left[origin(1),\dots origin\left(4\right)\right]
\]

\end_inset


\end_layout

\begin_layout Subsection
Advanced input functions
\end_layout

\begin_layout Standard
Advanced input functions are user-definable functions which don't usually
 need to be changed from default values.
 They allow customization and extension of xSPDE.
 These are as follows: 
\end_layout

\begin_layout Description

\emph on
in.grid(r)
\emph default
 (=@xgrid) initializes the grid of coordinates in space.
 
\end_layout

\begin_layout Description

\emph on
in.noisegen(r)
\emph default
 (=@xnoisegen) generates arrays of noise terms 
\begin_inset Formula $xi$
\end_inset

 for each point in time.
 
\end_layout

\begin_layout Description

\emph on
in.randomgen(r)
\emph default
 (=@xrandomgen) generates a set of random fields 
\begin_inset Formula $rf$
\end_inset

 to initialize the fields simulated.
 
\end_layout

\begin_layout Description

\emph on
in.step(a,z,dt,r)
\emph default
 (= @xMP) specifies the stochastic integration routine for a step in time
 
\begin_inset Formula $dt$
\end_inset

 and noise 
\begin_inset Formula $xi$
\end_inset

.
 It returns the new field 
\series bold

\begin_inset Formula $\mathbf{a}$
\end_inset


\series default
 at space-time location 
\begin_inset Formula $\mathbf{r}$
\end_inset

, given the old field as input, and interaction-picture propagator 
\begin_inset Formula $r.propagator$
\end_inset

 which is part of the lattice structure.
 This can be set to any of the predefined stochastic integration routines
 provided with xSPDE, described in the Algorithms chapter.
 User-written functions can also be used.
 The standard method, xMP, is a midpoint integrator.
 
\end_layout

\begin_layout Description

\emph on
in.prop(a,r)
\emph default
 (=@xprop) returns the fields propagated in the interaction picture, depending
 on the propagator array 
\begin_inset Formula $r.propagator.$
\end_inset

 
\end_layout

\begin_layout Description

\emph on
in.propfactor(nc,r)
\emph default
 (=@xpropfactor) returns the transfer array 
\begin_inset Formula $r.propagator$
\end_inset

, used by the 
\begin_inset Formula $in.prop$
\end_inset

 function.
 The time propagated is a fraction of the integration time-step, 
\begin_inset Formula $r.dt$
\end_inset

.
 It is equal to 
\begin_inset Formula $1/in.ipsteps$
\end_inset

 of the integration time-step.
 
\end_layout

\begin_layout Section
Graphics inputs and functions
\end_layout

\begin_layout Standard
The graphics parameters are also stored in the cell array
\emph on
 input
\emph default
 as a sequence of structures 
\emph on
in
\emph default
.
 This only need to be input when the graphs are generated, and can be changed
 at a later time to alter the graphics output.
 A sequence of simulations is graphed from 
\emph on
input
\emph default
 specifications.
\end_layout

\begin_layout Standard
If there is one simulation, just one structure can be input, without the
 sequence braces.
 The standard form of each parameter value, which should have the 
\begin_inset Formula $in.$
\end_inset

 structure label added, is: 
\begin_inset Formula 
\[
in.label=parameter\,
\]

\end_inset

If any inputs are omitted, there are default values which are set by the
 
\emph on
xgrpreferences
\emph default
 function, in all cases except for the comparison function 
\series bold
\emph on
compare
\series default
\emph default
.
 The defaults can be changed by editing the 
\series bold
\emph on
xgrpreferences
\series default
\emph default
 function.
\end_layout

\begin_layout Standard
In the following descriptions, 
\begin_inset Formula $n.graph$
\end_inset

 is the total number of graphed variables of all types.
 The space coordinate, image, image-type and transverse data can be omitted
 if there is no spatial lattice, i.e, if the dimension variable is set to
 one.
\end_layout

\begin_layout Subsection
Graphics functions
\end_layout

\begin_layout Description

\emph on
in.compare(t,in)
\emph default
 This is a cell array of functions.
 Each takes the time or frequency vector and returns comparison results
 for a graphed observable, as a function of real values versus time or frequency.
 Comparison results are graphed with a dashed line, for the two-dimensional
 graphs versus time.
 There is no default function handle.
 
\end_layout

\begin_layout Subsection
Graphics parameters
\end_layout

\begin_layout Standard
For uniformity, the graphics parameters are cell arrays, indexed over the
 graph number using braces {}.
 If a different type of input is used, like a scalar or matrix, xSPDE will
 attempt to convert the type.
 The axis labels are cell arrays, indexed over dimension.
\end_layout

\begin_layout Standard
Together with default values, they are: 
\end_layout

\begin_layout Description

\emph on
in.font
\emph default
 (= {18,..}): This sets the default font size for the graph labels.
 
\begin_inset Formula 
\[
in.font\{n\}>0
\]

\end_inset


\end_layout

\begin_layout Description

\emph on
in.minbar
\emph default
 (= {0.01,..}): This is the minimum relative error-bar that is plotted.
 
\begin_inset Formula 
\[
in.minbar\{n\}\ge0
\]

\end_inset


\end_layout

\begin_layout Description

\emph on
in.imag
\emph default
es (={0,0,0,..}): This is the number of 3D, transverse o-x-y images plotted
 as discrete time slices.
 Only valid if 
\begin_inset Formula $dimension>2$
\end_inset

.
 Note that, if present, the z-coordinate is set to its central value of
 
\begin_inset Formula $z=0$
\end_inset

, when plotting the transverse images.
 This input should be from 
\begin_inset Formula $images(n)=0$
\end_inset

 up to a maximum value of the number of plotted time-points.
 It has a vector length equal to 
\emph on

\begin_inset Formula $n.graph$
\end_inset


\emph default
: 
\begin_inset Formula 
\[
in.images\{n\}=0\ldots points(1)
\]

\end_inset


\end_layout

\begin_layout Description

\emph on
in.imagetype
\emph default
 (={1,1..}): This is the 
\emph on
type
\emph default
 of transverse image plotted.
 If 
\begin_inset Formula $imagetype=1$
\end_inset

, a perspective surface plot is output, otherwise if 
\begin_inset Formula $imagetype=2$
\end_inset

 a gray plot with colours is output, or if if 
\begin_inset Formula $imagetype=3$
\end_inset

 contour plot with 
\begin_inset Formula $10$
\end_inset

 equally spaced contours is generated.
 This has a vector length equal to 
\emph on

\begin_inset Formula $n.graph$
\end_inset


\emph default
.
 
\begin_inset Formula 
\[
in.imagetype\{n\}=1,2,3
\]

\end_inset


\end_layout

\begin_layout Description

\emph on
in.transverse
\emph default
 (={0,0..}): This is the number of 2D, transverse o-x images plotted as discrete
 time slices.
 Only valid if 
\begin_inset Formula $dimension>2$
\end_inset

.
 Note that, if present, the y,z-coordinates are set to their central values,
 when plotting the transverse images.
 This input should be from 
\begin_inset Formula $transverse(n)=0$
\end_inset

 up to a maximum value of the number of plotted time-points.
 It has a vector length equal to 
\emph on

\begin_inset Formula $n.graph$
\end_inset


\emph default
: 
\begin_inset Formula 
\[
in.transverse\{n\}=0\ldots points(1)
\]

\end_inset


\end_layout

\begin_layout Description

\emph on
in.headers
\emph default
 (={1,1,..}): This is a Boolean variable with value 
\emph on
true or 
\begin_inset Formula $1$
\end_inset


\emph default
 if graphs require headers giving the simulation name, and 
\emph on
false
\emph default
 or 
\begin_inset Formula $0$
\end_inset

 with no headers.
 It is useful to include headings on graphs in preliminary stages, while
 they may not be needed in a published final result.
 
\begin_inset Formula 
\[
in.headers\{n\}=0,1
\]

\end_inset


\end_layout

\begin_layout Description

\emph on
in.pdimension
\emph default
 (={4,4,..}): This is the maximum plot dimension for each graphed quantity.
 The purpose is eliminate unwanted graphs.
 For example, it is useful to reduce the maximum dimension when averaging
 in space.
 Higher dimensional graphs are not needed, as the data is duplicated.
 Averaging can be useful for checking conservation laws, or for averaging
 over homogeneous data to reduce sampling errors.
 
\begin_inset Formula 
\[
in.pdimension\{n\}=1..4
\]

\end_inset


\end_layout

\begin_layout Description

\emph on
in.xlabels
\emph default
 (={'t','x','y','z'}): Labels for the graph axis independent variable labels,
 vector length of 
\emph on

\begin_inset Formula $dimension$
\end_inset

.
 Note, these are typeset in Latex mathematics mode!
\emph default
 
\begin_inset Formula 
\[
in.xlabels=\left\{ xlabels(1),\dots xlabels\left(dimension\right)\right\} 
\]

\end_inset


\end_layout

\begin_layout Description

\emph on
in.klabels
\emph default
 (={'
\backslash
omega','k_x','k_y','k_z'}): Labels for the graph axis Fourier transform
 labels, vector length of 
\emph on

\begin_inset Formula $dimension$
\end_inset

.
 Note, these are typeset in Latex mathematics mode!
\emph default
 
\begin_inset Formula 
\[
in.klabels=\left\{ klabels(1),\dots olabels\left(dimension\right)\right\} 
\]

\end_inset


\end_layout

\begin_layout Subsection
Graphics projections
\end_layout

\begin_layout Standard
If there is a spatial lattice, the graphics program automatically generates
 several graphs for each observable, depending on space dimension.
 The maximum dimension that is plotted as set by 
\begin_inset Formula $pdimension$
\end_inset

.
 In the plots, the lattice is projected down to successively lower dimensions.
\end_layout

\begin_layout Standard
For each observable, the projection sequence is as follows: 
\end_layout

\begin_layout Itemize
If 
\series bold
dimension=4
\series default
, a central 
\begin_inset Formula $z$
\end_inset

 point 
\begin_inset Formula $nz=1+floor(in.points(4)/2)$
\end_inset

 is picked.
 For example, with 
\begin_inset Formula $35$
\end_inset

 points, this gives the central point, 
\begin_inset Formula $nz=18$
\end_inset

.
 
\end_layout

\begin_layout Itemize
This gives a three dimensional space-time lattice, which is treated the
 same as if 
\begin_inset Formula $\mathbf{dimension=3}$
\end_inset

.
 
\end_layout

\begin_layout Itemize
If 
\series bold

\begin_inset Formula $\mathbf{images}$
\end_inset


\series default
 are specified, two dimensional 
\begin_inset Formula $x-y$
\end_inset

 plots are generated at equally spaced time intervals.
 If there is only one image, it is at the last time-point.
 Different plot-types are used depending on the setting of 
\begin_inset Formula $\mathbf{imagetype}$
\end_inset

.
 
\end_layout

\begin_layout Itemize
A central 
\begin_inset Formula $y$
\end_inset

 point 
\begin_inset Formula $ny=1+floor(in.points(3)/2)$
\end_inset

 is picked.
 This gives a two dimensional space-time lattice, which is treated the same
 as if 
\begin_inset Formula $\mathbf{dimension=2}$
\end_inset

.
 If 
\series bold

\begin_inset Formula $\mathbf{transverse}$
\end_inset


\series default
 is specified, one dimensional 
\begin_inset Formula $x$
\end_inset

 plots are generated at equally spaced time intervals, as before.
 
\end_layout

\begin_layout Itemize
A central 
\begin_inset Formula $x$
\end_inset

 point 
\begin_inset Formula $nx=1+floor(in.points(2)/2)$
\end_inset

 is picked.
 This gives a one dimensional time lattice, which is treated the same as
 if 
\begin_inset Formula $\mathbf{dimension=1}$
\end_inset

.
 
\end_layout

\begin_layout Itemize
Plots of observable vs time are obtained, including sampling errors and
 error bars.
 If comparison graphs are specified using 
\begin_inset Formula $compare$
\end_inset

 functions, they are plotted also, using a dotted line.
 A difference graph is also plotted when there is a comparison.
 
\end_layout

\begin_layout Section
Averages and integrals
\end_layout

\begin_layout Subsection
Averages
\end_layout

\begin_layout Standard
Lattice averages can allow one to extract stochastic results with reduced
 sampling errors.
 An average over the lattice is carried out using the 
\begin_inset Formula $xave$
\end_inset

 function, which is defined as follows: 
\end_layout

\begin_layout Description

\emph on
xave(o,dx,r)
\emph default
 This function takes a scalar observable 
\begin_inset Formula $o=[1,lattice]$
\end_inset

, defined on the xSPDE lattice, and returns a space average with dimension
 
\begin_inset Formula $[1,lattice]$
\end_inset

.
 The input is an observable 
\begin_inset Formula $o$
\end_inset

, and an optional lattices structure and vector switch 
\series bold

\begin_inset Formula $dx$
\end_inset


\series default
.
 If 
\begin_inset Formula $dx(j)>0$
\end_inset

 an average is taken over dimension 
\begin_inset Formula $j$
\end_inset

.
 Dimensions are labelled from 
\begin_inset Formula $j=1,\ldots4$
\end_inset

 as elsewhere.
 Time averages are ignored at present.
 Averages are returned at all lattice locations.
 To average over samples and all space dimensions, just use 
\series bold
\emph on
xave(o)
\series default
.

\emph default
 
\end_layout

\begin_layout Standard
Higher dimensional graphs of lattice averages are generally not useful,
 as they are simply flat.
 The xSPDE program allows the user to remove unwanted higher dimensional
 graphs of average variables.
 This is achieved by setting the corresponding element of 
\emph on
pdimension
\emph default
 to the highest dimension required, which of course depends on which dimensions
 are averaged.
\end_layout

\begin_layout Standard
For example, to average over the entire space lattice and indicate that
 only time-dependent graphs are required, set 
\begin_inset Formula $dx=in.dx$
\end_inset

 and: 
\begin_inset Formula 
\[
in.pdimension=1
\]

\end_inset

Note that 
\begin_inset Formula $xave$
\end_inset

 does not perform any average over ensembles, although this is done elsewhere
 for results calculated in any of the 
\begin_inset Formula $observe$
\end_inset

 functions.
\end_layout

\begin_layout Subsection
Integrals
\end_layout

\begin_layout Standard
Integrals over the spatial lattice allow calculation of conserved or other
 global quantities.
 The code to take an integral over the lattice is carried out using the
 xSPDE 
\begin_inset Formula $xint$
\end_inset

 function: 
\end_layout

\begin_layout Description

\emph on
xint(o,dx,r)
\emph default
 This function takes a scalar 
\begin_inset Formula $o$
\end_inset

, and returns a space integral over selected dimensions with vector measure
 
\begin_inset Formula $dx$
\end_inset

.
 If 
\begin_inset Formula $dx(j)>0$
\end_inset

 an integral is taken over dimension 
\begin_inset Formula $j$
\end_inset

.
 Dimensions are labelled from 
\begin_inset Formula $j=1,\ldots4$
\end_inset

 as in all xspde standards.
 Time integrals are ignored at present.
 Integrals are returned at all lattice locations.
 To integrate over an entire lattice, set 
\begin_inset Formula $dx=r.dx$
\end_inset

, otherwise set 
\begin_inset Formula $dx(j)=r.dx(j)$
\end_inset

 for selected dimensions 
\begin_inset Formula $j$
\end_inset

.
 
\end_layout

\begin_layout Standard
As with averages, the xSPDE program allows the user to remove unwanted higher
 dimensional graphs when the integrated variable is used as an observable.
 For example, in a four dimensional simulation with integrals taken over
 the 
\begin_inset Formula $y$
\end_inset

 and 
\begin_inset Formula $z$
\end_inset

 coordinates, only 
\begin_inset Formula $t$
\end_inset

 and 
\begin_inset Formula $x$
\end_inset

 dependent graphs are required.
 Hence, set 
\begin_inset Formula $dx=[0,0,r.dx(3),r.dx(4)]$
\end_inset

, and: 
\begin_inset Formula 
\[
in.pdimension=2
\]

\end_inset


\end_layout

\begin_layout Standard
If momentum-space integrals are needed, use the transform switch to make
 sure that the field is Fourier transformed, and input 
\begin_inset Formula $r.dk$
\end_inset

 instead of 
\begin_inset Formula $r.dx$
\end_inset

.
 Note that 
\begin_inset Formula $xint$
\end_inset

 returns a lattice observable, as required when used in the 
\begin_inset Formula $observe$
\end_inset

 function.
 If the integral is used in another function, note that it returns a matrix
 of dimension 
\begin_inset Formula $[1,lattice].$
\end_inset


\end_layout

\begin_layout Section
Frequently asked questions
\end_layout

\begin_layout Standard
Answers to some frequent questions, and reminders of points in this chapter
 are: 
\end_layout

\begin_layout Itemize
Can you average other stochastic quantities apart from the field?
\end_layout

\begin_deeper
\begin_layout Itemize
Yes: just specify this using the user function 
\begin_inset Formula $\mathbf{in.observe}$
\end_inset

.
 
\end_layout

\end_deeper
\begin_layout Itemize
Can you have functions of the current time and space coordinate?
\end_layout

\begin_deeper
\begin_layout Itemize
Yes: xSPDE functions support this using the structure 
\begin_inset Formula $r$
\end_inset

, as 
\begin_inset Formula $r.t$
\end_inset

,
\begin_inset Formula $r.x$
\end_inset

,
\begin_inset Formula $r.y$
\end_inset

,
\begin_inset Formula $r.z$
\end_inset

.
 
\end_layout

\end_deeper
\begin_layout Itemize
Can you have several variables?
\end_layout

\begin_deeper
\begin_layout Itemize
Yes, input this using 
\begin_inset Formula $\mathbf{in.fields>1}$
\end_inset

.
 
\end_layout

\end_deeper
\begin_layout Itemize
Are higher dimensional differential equations possible?
\end_layout

\begin_deeper
\begin_layout Itemize
Yes, this requires setting 
\begin_inset Formula $\mathbf{in.dimension>1}$
\end_inset

.
 
\end_layout

\end_deeper
\begin_layout Itemize
Can you have spatial partial derivatives?
\end_layout

\begin_deeper
\begin_layout Itemize
Yes, provided they are linear in the fields; these are obtainable using
 the function 
\begin_inset Formula $\mathbf{in.linear}$
\end_inset

.
 
\end_layout

\end_deeper
\begin_layout Itemize
Can you delete the graph heading?
\end_layout

\begin_deeper
\begin_layout Itemize
Yes, this is turned off if you set 
\series bold

\begin_inset Formula $\mathbf{in.headers=0}$
\end_inset


\series default
.
 
\end_layout

\end_deeper
\begin_layout Itemize
Why are there two lines in the graphs sometimes?
\end_layout

\begin_deeper
\begin_layout Itemize
These are the one standard deviation sampling error limits, generated when
 
\series bold

\begin_inset Formula $\mathbf{in.ensembles(2,3)>1}$
\end_inset


\series default
.
 
\end_layout

\end_deeper
\begin_layout Itemize
Why is there just one line in some graphs, with no sampling errors indicated?
\end_layout

\begin_deeper
\begin_layout Itemize
You need ensembles(2) or (3) for this; see previous question.
 
\end_layout

\end_deeper
\begin_layout Itemize
What are the error bars for?
\end_layout

\begin_deeper
\begin_layout Itemize
These are the estimated maximum errors due to finite step-sizes in time.
 
\end_layout

\end_deeper
\begin_layout Standard
Details of how to use the parameters and functions, and a tutorial are given
 in the following chapters.
\end_layout

\begin_layout Chapter
Tutorial 
\end_layout

\begin_layout Standard
This chapter is a a tutorial in xSPDE functionality, giving a number of
 examples, and exercises.
 Not all the graphs generated by the scripts are included here, for space
 reasons.
 One can obtain many more graphs if desired, by generating more observables.
\end_layout

\begin_layout Standard
Vertical bars in the graphs are the step-size errors in time, calculated
 from setting 
\begin_inset Formula $in.errorchecks=2$
\end_inset

.
 These are automatically omitted when the relative errors are too small
 to be visible.
 In most cases, the default ranges and step-sizes are used to keep things
 simple.
 One can improve this accuracy by using more points, as shown in the first
 example, or by using more steps per point.
\end_layout

\begin_layout Standard
Upper and lower solid lines are due to sampling errors.
 This occurs where there is statistical noise, and requires a finite number
 of serial 
\emph on
(in.ensembles(2)) 
\emph default
or parallel
\emph on
 (in.ensembles(3)) ensembles
\emph default
 to calculate it.
 One can improve this by using more ensembles.
 Sub-ensemble averaging with multiple sub-ensembles is used to improve the
 accuracy of error estimates.
\end_layout

\begin_layout Standard
There are preset preferences for all the input parameters except the derivative
 function, which defines the equation that is simulated.
 Each example in the tutorial has exercises, which are very simple.
 However, they help to understand xSPDE conventions, and it is recommended
 to try them.
\end_layout

\begin_layout Standard

\series bold
All the exercises, and some bonus examples, are given in the xSPDE Examples
 folder.
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Section
Wiener process
\end_layout

\begin_layout Standard
Try increasing the time resolution and adding a heading to the random walk
 example in Chapter 3.
 This requires specifying the number of points using 
\begin_inset Formula $in.points$
\end_inset

.
 To name the simulation, use 
\begin_inset Formula $in.name$
\end_inset

, which is stored with your simulation data.
 The default option is to add this heading to each graph.
 If no header is wanted, type 
\begin_inset Formula $in.headers=0$
\end_inset

.
\end_layout

\begin_layout Standard
\align center
\begin_inset Box Doublebox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
in.name = 'Wiener process';
\end_layout

\begin_layout Plain Layout

\family typewriter
 in.points = 501;
\end_layout

\begin_layout Plain Layout

\family typewriter
in.da = @(~,z,~) z; 
\end_layout

\begin_layout Plain Layout

\family typewriter
 xspde(in); 
\end_layout

\end_inset

 
\end_layout

\begin_layout Standard
To run the xSPDE program after adding these inputs, just press the 
\emph on
Run
\emph default
 icon on the Matlab editor bar.
 This will run the xSPDE program, with default parameters where they are
 not specified in the inputs.
 You will see the following figure:
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
centering
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset


\begin_inset Graphics
	filename Figures/Wiener_2.eps
	width 65text%

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Increasing the Wiener process resolution and adding a header.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection*
Exercise:
\end_layout

\begin_layout Standard
Add 100 samples and 100 serial ensemble trajectories.
 Does the mean equal zero within the sampling error bars?
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Section
Harmonic oscillator
\end_layout

\begin_layout Standard
The next example is the stochastic harmonic oscillator with the initial
 condition that 
\begin_inset Formula 
\[
a(0)=1+w\,,
\]

\end_inset

where 
\begin_inset Formula 
\[
\left\langle w^{2}\right\rangle =1
\]

\end_inset

and the differential equation: 
\begin_inset Formula 
\[
\dot{a}=ia+\zeta\,.
\]

\end_inset


\end_layout

\begin_layout Subsection
Initial conditions and derivative
\end_layout

\begin_layout Standard
First, make sure you type 'clear' to clear the previous example.
 This is good practice for all the examples.
 The following parameters are needed to specify the harmonic oscillator
 with noise.
 By specifying return values in square brackets, the data is made available
 in the user data space:
\end_layout

\begin_layout Standard
\align center
\begin_inset Box Doublebox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
in.initial = @(v,~) 1+v; 
\end_layout

\begin_layout Plain Layout

\family typewriter
in.ensembles = [20,20]; 
\end_layout

\begin_layout Plain Layout

\family typewriter
in.da = @(a,z,~) i*a + z;
\end_layout

\begin_layout Plain Layout

\family typewriter
in.olabels = {'<a_1>'}; 
\end_layout

\begin_layout Plain Layout

\family typewriter
xspde(in);
\end_layout

\end_inset

 
\end_layout

\begin_layout Standard
\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset

 Here '~' indicates an unused input to a function, while 'i' is the Matlab
 codes for the unit imaginary number, 
\begin_inset Formula $i$
\end_inset

.
 The following graph is produced:
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
centering
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset


\begin_inset Graphics
	filename Figures/NoisySHO.eps
	width 75text%

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Simple harmonic oscillator amplitude
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
The plotted error-bars are suppressed, as they are too small to see, nor
 is there any header, since none was specified.
 The 
\series bold
xsim
\series default
 program reports the following error summary, using the default number of
 points (
\begin_inset Formula $51$
\end_inset

): 
\end_layout

\begin_layout Itemize
Max sampling error = 1.193890e-01 
\end_layout

\begin_layout Itemize
Max step error = 1.270917e-02 
\end_layout

\begin_layout Standard
This is an approximate upper bound on the overall integration error of the
 specified observable.
 It is calculated from comparing two solutions.
 In this case, the default estimates are obtained by comparing a coarse
 and fine step calculation at half the specified step-size.
 This is used to extrapolate to zero step-size.
 The difference between the fine result and the extrapolated result gives
 the error estimate.
\end_layout

\begin_layout Subsection
Comparisons with exact results
\end_layout

\begin_layout Standard
The stochastic equation has the mean solution: 
\begin_inset Formula 
\begin{eqnarray*}
\left\langle a\left(t\right)\right\rangle  & = & e^{it}\\
 & = & \cos\left(t\right)+i\sin\left(t\right)
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Standard
To compare the calculated solution with this exact result, just tell the
 graphics program that you want a comparison, by editing the project file,
 and adding a comparison function.
\end_layout

\begin_layout Standard
This example uses the previous inputs, together with the comparison function
 itself (
\emph on
in.compare
\emph default
).
 All functions and data relating to observables are cell arrays, hence the
 curly brackets: 
\begin_inset Formula $gr.compare\{1\}$
\end_inset

 is the first element of an array of comparison functions that might be
 needed if there are many observables.
\end_layout

\begin_layout Standard
\align center
\begin_inset Box Doublebox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
in.compare{1} = @(t,~) cos(t); 
\end_layout

\begin_layout Plain Layout

\family typewriter
xspde(in);
\end_layout

\end_inset

 
\end_layout

\begin_layout Standard
With this input, xgraph gives the difference in the comparison as: 
\end_layout

\begin_layout Itemize
Maximum comparison differences = 1.950535e-01 
\end_layout

\begin_layout Standard
The actual error in this case is smaller than the error estimated using
 the sampling error estimates.
 However, the error-bars are very small.
 This is because in this case, the specified fine step-size is small enough
 to give excellent convergence.
\end_layout

\begin_layout Standard
Comparison graphs are also produced, including one of the relative errors:
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
centering
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset


\begin_inset Graphics
	filename Figures/NoisySHOCompareErrors.eps
	width 65text%

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Simple harmonic oscillator comparison graph: exact vs computed, with error-bars.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
The reported summary data is consistent with the graphs, as expected.
 Note that one can obtain exactly the same result in the interaction picture,
 by using an imaginary linear coupling of 
\begin_inset Formula $i$
\end_inset

, and a derivative term of zero.
 The code then reports a maximum step-size error of around 
\begin_inset Formula $\sim10^{-15}$
\end_inset

, equal to the limit of IEEE arithmetic.
\end_layout

\begin_layout Subsection*
Exercise:
\end_layout

\begin_layout Standard
Add a linear decay of 
\begin_inset Formula $-a$
\end_inset

 to the differential equation, and modify the exact solution to suit, then
 replot.
 Is it exactly as you expected?
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Section
Kubo oscillator
\end_layout

\begin_layout Standard
The next example is more interesting.
 It is the Kubo oscillator, an oscillator with a random frequency.
 In Stratonovich stochastic calculus, its equation is: 
\begin_inset Formula 
\[
da=ia.dw
\]

\end_inset


\end_layout

\begin_layout Standard
Given the initial condition that 
\begin_inset Formula $a(0)=1$
\end_inset

, each trajectory has the solution: 
\begin_inset Formula 
\[
a\left(t\right)=e^{iw(t)}
\]

\end_inset

where 
\begin_inset Formula 
\[
w(t)=\int_{0}^{t}dw
\]

\end_inset


\end_layout

\begin_layout Standard
The corresponding mean value is different to the instantaneous trajectory,
 owing to dephasing: 
\begin_inset Formula 
\[
\left\langle a\left(t\right)\right\rangle =e^{-\left\langle w^{2}(t)\right\rangle /2}=e^{-t/2}.
\]

\end_inset


\end_layout

\begin_layout Subsection
Kubo initial conditions and derivative
\end_layout

\begin_layout Standard
Here more parameters are needed.
 One real noise term is required per integration point, specified using
 
\begin_inset Formula $in.noises$
\end_inset

.
 Next, the ensemble numbers are required.
 Here we use 
\begin_inset Formula $100$
\end_inset

 vector-level trajectories, and 
\begin_inset Formula $16$
\end_inset

 sets at a higher level.
 In these calculations, the mean amplitude is calculated, and compared against
 a comparison function.
\end_layout

\begin_layout Standard
\align center
\begin_inset Box Doublebox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
function e = Kubo() 
\end_layout

\begin_layout Plain Layout

\family typewriter
in.name = 'Kubo oscillator';
\end_layout

\begin_layout Plain Layout

\family typewriter
in.ensembles = [400,16,1]; 
\end_layout

\begin_layout Plain Layout

\family typewriter
in.initial = @(v,r) 1+0*v; 
\end_layout

\begin_layout Plain Layout

\family typewriter
in.da = @(a,z,r) i*z.*a; 
\end_layout

\begin_layout Plain Layout

\family typewriter
in.olabels = {'<a_1>'}; 
\end_layout

\begin_layout Plain Layout

\family typewriter
in.compare{1}= @(t,~) exp(-t/2); 
\end_layout

\begin_layout Plain Layout

\family typewriter
e = xspde(in); 
\end_layout

\begin_layout Plain Layout

\family typewriter
end
\end_layout

\end_inset

 
\end_layout

\begin_layout Standard
Kubo error results are reported as: 
\end_layout

\begin_layout Itemize
Max sampling error = 1.043423e-02 
\end_layout

\begin_layout Itemize
Max step error = 2.258936e-02 
\end_layout

\begin_layout Standard
Note that these are generally consistent with the graphs below, as they
 should be.
\end_layout

\begin_layout Standard
Is the actual error always less than the reported maximum standard deviation?
 This is not always the case, for statistical reasons.
 The statistical estimates given are best estimates of the standard deviations
 of the plotted means.
 However, given a large enough number of means at different times, some
 
\series bold
must
\series default
 fall outside the range of a unit standard deviation.
\end_layout

\begin_layout Standard
The different time points in the Kubo oscillator trajectories become uncorrelate
d after a time of order one.
 Hence an occasional excursion with an error of 
\begin_inset Formula $2\sigma$
\end_inset

 can occur.
 In other words, the expected maximum sampling error is a multiple of the
 standard deviation, which should therefore be treated with some caution
 as a guide to statistical errors.
\end_layout

\begin_layout Standard
We see evidence here the sampling errors often exceed the step-size errors,
 unless large sample numbers are used.
\end_layout

\begin_layout Subsection
Kubo graphs
\end_layout

\begin_layout Standard
The Graphics program reports the following errors when making the comparisons:
 
\end_layout

\begin_layout Itemize
Max difference in 1 = 1.294696e-02 
\end_layout

\begin_layout Standard
With this choice of algorithm and step-size, the results of a simulation
 run are plotted below.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
centering
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset


\begin_inset Graphics
	filename Kubo/Kubo1.eps
	width 75text%

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Kubo oscillator mean amplitude
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
centering
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset


\begin_inset Graphics
	filename Kubo/Kubo2.eps
	width 75text%

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Kubo oscillator amplitude errors
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
There are some interesting features here.
 The two solid lines indicate the sampling error.
 The error bars indicate the step-size error.
 This affects both results, but is only visible in the error graphs, which
 have an expanded scale.
\end_layout

\begin_layout Subsection*
Exercise:
\end_layout

\begin_layout Standard
Add a detuning of 
\begin_inset Formula $ia$
\end_inset

 to the differential equation, modify the exact solution to suit, then replot.
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Section
Soliton
\end_layout

\begin_layout Standard
The third example is the soliton equation for the nonlinear Schr√∂dinger
 equation, with: 
\begin_inset Formula 
\[
\frac{da}{dt}=\frac{i}{2}\left[\nabla^{2}a-a\right]+ia\left|a\right|^{2}
\]

\end_inset


\end_layout

\begin_layout Standard
Together with the initial condition that 
\begin_inset Formula $a(0,x)=sech(x)$
\end_inset

, this has an exact solution that doesn't change in time: 
\begin_inset Formula 
\begin{eqnarray*}
a(t,x) & = & sech(x)
\end{eqnarray*}

\end_inset

The Fourier transform at 
\begin_inset Formula $k=0$
\end_inset

 is simply: 
\begin_inset Formula 
\begin{eqnarray*}
\tilde{a}(t,0) & = & \frac{1}{\sqrt{2\pi}}\int sech(x)dx=\sqrt{\frac{\pi}{2}}
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Subsection
Soliton parameters and functions
\end_layout

\begin_layout Standard
The important parameters and functions in this case are:
\end_layout

\begin_layout Standard
\align center
\begin_inset Box Doublebox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout
f
\family typewriter
unction [e] = Soliton() 
\end_layout

\begin_layout Plain Layout

\family typewriter
in.name = 'NLS soliton';
\end_layout

\begin_layout Plain Layout

\family typewriter
in.dimension = 2; 
\end_layout

\begin_layout Plain Layout

\family typewriter
in.initial = @(v,r) sech(r.x); 
\end_layout

\begin_layout Plain Layout

\family typewriter
in.da = @(a,~,r) i*a.*(conj(a).*a); 
\end_layout

\begin_layout Plain Layout

\family typewriter
in.linear = @(D,r) 0.5*i*(D.x.^2-1.0);
\end_layout

\begin_layout Plain Layout

\family typewriter
in.olabels = {'a_1(x)'}; 
\end_layout

\begin_layout Plain Layout

\family typewriter
in.compare{1}= @(t,~) 1; 
\end_layout

\begin_layout Plain Layout

\family typewriter
e = xspde(in); 
\end_layout

\begin_layout Plain Layout

\family typewriter
end
\end_layout

\end_inset

 
\end_layout

\begin_layout Standard
The xspde program reports the following maximum errors: 
\end_layout

\begin_layout Itemize
Max step error = 1.976729e-02 
\end_layout

\begin_layout Standard
The output reflects the known analytic result.
\end_layout

\begin_layout Subsection
Soliton graphs and errors
\end_layout

\begin_layout Standard
Graphs of results are given below.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
centering
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset


\begin_inset Graphics
	filename Soliton/Soliton1.eps
	width 75text%

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Soliton amplitude versus space and time
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
centering
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset


\begin_inset Graphics
	filename Soliton/Soliton2.eps
	width 60text%

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Soliton amplitude errors at center
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
The xgraph program reports that comparison errors are slightly less than
 the step error: 
\end_layout

\begin_layout Itemize
Max difference in 1 = 1.761991e-02 
\end_layout

\begin_layout Standard
This is not always the case, because the error checking does not check errors
 due to the lattice sizes.
 In general this needs to be carried out manually.
\end_layout

\begin_layout Subsection*
Exercise:
\end_layout

\begin_layout Standard
Add an additive complex noise of 
\begin_inset Formula $0.01(dw_{1}+idw_{2}$
\end_inset

) to the differential equation, then replot with an average over 
\begin_inset Formula $1000$
\end_inset

 samples.
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Section
Gaussian with HDF5 files
\end_layout

\begin_layout Standard
The fifth example is free diffraction of a Gaussian wave-function in three
 dimensions, given by 
\begin_inset Formula 
\[
\frac{da}{dt}=\frac{i}{2}\nabla^{2}a
\]

\end_inset


\end_layout

\begin_layout Standard
Together with the initial condition that 
\begin_inset Formula $a(0,x)=exp(-\left|\mathbf{x}\right|^{2}/2)$
\end_inset

, this has an exact solution for the diffracted intensity in either ordinary
 space or momentum space: 
\begin_inset Formula 
\begin{eqnarray*}
\left|a\left(t,\mathbf{x}\right)\right|^{2} & = & \frac{1}{\left(1+t^{2}\right)^{3/2}}exp(-\left|\mathbf{x}\right|^{2}/\left(1+t^{2}\right))\\
\left|\tilde{a}\left(t,\mathbf{k}\right)\right|^{2} & = & exp(-\left|\mathbf{k}\right|^{2})
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Subsection
Gaussian inputs
\end_layout

\begin_layout Standard
A possible user set of parameters to simulate this is:
\end_layout

\begin_layout Standard
\align center
\begin_inset Box Doublebox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
function [e] = Gaussian() 
\end_layout

\begin_layout Plain Layout

\family typewriter
in.dimension = 4; 
\end_layout

\begin_layout Plain Layout

\family typewriter
in.initial = @(v,r) exp(-0.5*(r.x.^2+r.y.^2+r.z.^2));
\end_layout

\begin_layout Plain Layout

\family typewriter
in.da = @(a,~,~) zeros(size(a)); 
\end_layout

\begin_layout Plain Layout

\family typewriter
in.linear = @(D,r) 1i*0.05*(D.x.^2+D.y.^2+D.z.^2); 
\end_layout

\begin_layout Plain Layout

\family typewriter
in.observe = {@(a,~) a.*conj(a)}; 
\end_layout

\begin_layout Plain Layout

\family typewriter
in.olabels = {'|a(x)|^2'}; 
\end_layout

\begin_layout Plain Layout

\family typewriter
in.HDF5file = {'Gaussian.f5'};
\end_layout

\begin_layout Plain Layout

\family typewriter
in.images = 4; 
\end_layout

\begin_layout Plain Layout

\family typewriter
in.imagetype = 1; 
\end_layout

\begin_layout Plain Layout

\family typewriter
in.transverse = 2; 
\end_layout

\begin_layout Plain Layout

\family typewriter
in.headers = 1; 
\end_layout

\begin_layout Plain Layout

\family typewriter
in.compare{1} = @(t,~) [1+(t/10).^2].^(-3/2); 
\end_layout

\begin_layout Plain Layout

\family typewriter
e = xsim(in); 
\end_layout

\begin_layout Plain Layout

\family typewriter
e = xgraph(
\begin_inset Quotes erd
\end_inset

,in); 
\end_layout

\begin_layout Plain Layout

\family typewriter
end 
\family default
 
\end_layout

\end_inset

 
\end_layout

\begin_layout Standard
Here the program writes an HDF5 data file using 
\begin_inset Formula $xsim$
\end_inset

, and then reads it in with the stored file-name, using 
\emph on
xgraph
\emph default
.
 The program reports the following maximum step-size errors, which in this
 case are negligible, as they are purely due to the interaction picture
 transformations: 
\end_layout

\begin_layout Itemize
Max step error = 4.107825e-15 
\end_layout

\begin_layout Standard
However, the finite spatial lattice size introduces errors in the on axis
 intensity, in coordinate space.
 This shows up in the comparisons: 
\end_layout

\begin_layout Itemize
Max difference in 1 = 5.590272e-07 
\end_layout

\begin_layout Subsection
Gaussian graphs
\end_layout

\begin_layout Standard
With this choice of algorithm and step-size, the results of a simulation
 run are plotted below.
 The errors, of order 
\begin_inset Formula $10^{-7}$
\end_inset

, are simply due to interference of diffracted waves caused by the periodic
 boundary conditions.
 This is sometimes called aliasing error.
 One can think of this physically as being a simulation of an infinite array
 or periodically repeated Gaussian inputs, which can diffract and interfere.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
centering
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset


\begin_inset Graphics
	filename Gaussian/Gaussian1.eps
	width 65text%

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Image of transverse gaussian intensity at 
\begin_inset Formula $t=0$
\end_inset

.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
centering
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset


\begin_inset Graphics
	filename Gaussian/Gaussian2.eps
	width 75text%

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Gaussian intensity diffraction
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
centering
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset


\begin_inset Graphics
	filename Gaussian/Gaussian4.eps
	width 65text%

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Gaussian intensity at 
\begin_inset Formula $\bm{r}=0$
\end_inset

.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
centering
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset


\begin_inset Graphics
	filename Gaussian/Gaussian5.eps
	width 65text%

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Gaussian, modulus-squared errors at 
\begin_inset Formula $\bm{r}=0$
\end_inset

 .
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection*
Exercise:
\end_layout

\begin_layout Standard
Add an additive complex noise of 
\begin_inset Formula $0.01(dw_{1}+idw_{2}$
\end_inset

) to the Gaussian differential equation, then replot with an average over
 
\begin_inset Formula $10$
\end_inset

 samples.
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Section
Planar noise
\end_layout

\begin_layout Standard
The fifth example is growth of thermal noise of a two-component complex
 field in a plane, given by the equation 
\begin_inset Formula 
\[
\frac{d\bm{a}}{dt}=\frac{i}{2}\nabla^{2}\bm{a}+\bm{\zeta}(t,x)
\]

\end_inset

where 
\begin_inset Formula $\bm{\zeta}$
\end_inset

 is a delta-correlated complex noise vector field: 
\begin_inset Formula 
\[
\zeta_{j}(t,\mathbf{x})=\left[\zeta_{j}^{re}(t,\mathbf{x})+i\zeta_{j}^{im}(t,\mathbf{x})\right]/\sqrt{2},
\]

\end_inset

with the initial condition that the initial noise is delta-correlated in
 position space 
\begin_inset Formula 
\[
a(0,\mathbf{x})=\bm{\zeta}^{(in)}(\bm{x})
\]

\end_inset

where: 
\begin_inset Formula 
\[
\bm{\zeta}^{(in)}(\bm{x})=\left[\bm{\zeta}^{re(in)}(\mathbf{x})+i\bm{\zeta}^{im(in)}(\mathbf{x})\right]/\sqrt{2}
\]

\end_inset


\end_layout

\begin_layout Standard
This has an exact solution for the noise intensity in either ordinary space
 or momentum space: 
\begin_inset Formula 
\begin{eqnarray*}
\left\langle \left|a_{j}\left(t,\mathbf{x}\right)\right|^{2}\right\rangle  & = & (1+t)/\Delta V\\
\left\langle \left|\tilde{a}_{j}\left(t,\mathbf{k}\right)\right|^{2}\right\rangle  & = & (1+t)/\Delta V_{k}\\
\left\langle \tilde{a}_{1}\left(t,\mathbf{k}\right)\tilde{a}_{2}^{*}\left(t,\mathbf{k}\right)\right\rangle  & = & 0
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Standard
Here, the noise is delta-correlated, and 
\begin_inset Formula $\Delta V$
\end_inset

, 
\begin_inset Formula $\Delta V_{k}$
\end_inset

 are the cartesian space and momentum space lattice cell volumes respectively.
 Suppose that 
\begin_inset Formula $N=N_{x}N_{y}$
\end_inset

 is the total number of spatial points, and 
\begin_inset Formula $V=R_{x}R_{y}$
\end_inset

, where there are 
\begin_inset Formula $N_{x(y)}$
\end_inset

 points in the x(y)-direction, with a total range of 
\begin_inset Formula $R_{x(y)}$
\end_inset

.
 Then, 
\begin_inset Formula $\Delta x=R_{x}/N_{x}$
\end_inset

 ,
\begin_inset Formula $\Delta k_{x}=2\pi/R_{x}$
\end_inset

 , so that: 
\begin_inset Formula 
\begin{eqnarray*}
\Delta V & = & \Delta x\Delta y=\frac{V}{N}\\
\Delta V_{k} & = & \Delta k_{x}\Delta k_{y}=\frac{(2\pi)^{2}}{V}.
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Standard
In the simulations, two planar noise fields are propagated, one using noise
 generated in position space, the other with noise generated in momentum
 space.
 This example shows that, provided no filters are applied, both types of
 noise are identical in their effects.
 However, momentum space noise requires an N-dimensional inverse FFT before
 being added, which is slower, so this method is not recommended unless
 needed.
\end_layout

\begin_layout Subsection
Planar inputs
\end_layout

\begin_layout Standard
\align center
\begin_inset Box Doublebox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
function [e] = Planar() 
\end_layout

\begin_layout Plain Layout

\family typewriter
in.name = 'Planar noise growth'; 
\end_layout

\begin_layout Plain Layout

\family typewriter
in.dimension = 3; 
\end_layout

\begin_layout Plain Layout

\family typewriter
in.fields = 2; 
\end_layout

\begin_layout Plain Layout

\family typewriter
in.ranges = [1,5,5]; 
\end_layout

\begin_layout Plain Layout

\family typewriter
in.steps = 2; 
\end_layout

\begin_layout Plain Layout

\family typewriter
in.noises = [2,2]; 
\end_layout

\begin_layout Plain Layout

\family typewriter
in.ensembles = [10,4,4]; 
\end_layout

\begin_layout Plain Layout

\family typewriter
in.initial = @Initial; 
\end_layout

\begin_layout Plain Layout

\family typewriter
in.da = @Da; 
\end_layout

\begin_layout Plain Layout

\family typewriter
in.linear = @Linear; 
\end_layout

\begin_layout Plain Layout

\family typewriter
in.observe{1} = @(a,~) a(1,:).*conj(a(1,:)); 
\end_layout

\begin_layout Plain Layout

\family typewriter
in.observe{2} = @(a,~) xave(a(1,:).*conj(a(1,:)));
\end_layout

\begin_layout Plain Layout

\family typewriter
in.observe{3} = @(a,~) xave(a(2,:).*conj(a(2,:)));
\end_layout

\begin_layout Plain Layout

\family typewriter
in.observe{4} = @(a,~) xave(a(1,:).*conj(a(2,:)));
\end_layout

\begin_layout Plain Layout

\family typewriter
in.transforms = {[0,0,0],[0,0,0],[0,1,1],[0,1,1]};
\end_layout

\begin_layout Plain Layout

\family typewriter
in.olabels{1} = '<|a_1(x)|^2>'; 
\end_layout

\begin_layout Plain Layout

\family typewriter
in.olabels{2} = '<\SpecialChar \textcompwordmark{}
<|a_1(x)|^2>\SpecialChar \textcompwordmark{}
>'; 
\end_layout

\begin_layout Plain Layout

\family typewriter
in.olabels{3} = '<\SpecialChar \textcompwordmark{}
<|a_2(k)|^2>\SpecialChar \textcompwordmark{}
>'; 
\end_layout

\begin_layout Plain Layout

\family typewriter
in.olabels{4} = '<\SpecialChar \textcompwordmark{}
<a_1(k)a^*_2(k)>\SpecialChar \textcompwordmark{}
>'; 
\end_layout

\begin_layout Plain Layout

\family typewriter
in.compare{1} = @(t,in) [1+t]/in.dV;
\end_layout

\begin_layout Plain Layout

\family typewriter
in.compare{2} = @(t,in) [1+t]/in.dV;
\end_layout

\begin_layout Plain Layout

\family typewriter
in.compare{3} = @(t,in) [1+t]/in.dK;
\end_layout

\begin_layout Plain Layout

\family typewriter
in.compare{4} = @(t,in) 0;
\end_layout

\begin_layout Plain Layout

\family typewriter
in.images = [4,2,0,0]; 
\end_layout

\begin_layout Plain Layout

\family typewriter
in.transverse = [2,2,0,0]; 
\end_layout

\begin_layout Plain Layout

\family typewriter
in.pdimension = [4,1,1,1]; 
\end_layout

\begin_layout Plain Layout

\family typewriter
e = xspde(in); 
\end_layout

\begin_layout Plain Layout

\family typewriter
end 
\family default

\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset

 
\family typewriter
 
\end_layout

\begin_layout Plain Layout

\family typewriter
function a0 = Initial(v,r) 
\end_layout

\begin_layout Plain Layout

\family typewriter
a0(1,:) = (v(1,:)+1i*v(2,:))/sqrt(2); 
\end_layout

\begin_layout Plain Layout

\family typewriter
a0(2,:) = (v(3,:)+1i*v(4,:))/sqrt(2); 
\end_layout

\begin_layout Plain Layout

\family typewriter
end 
\family default

\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset

 
\family typewriter
 
\end_layout

\begin_layout Plain Layout

\family typewriter
function da = Da(a,z,r) 
\end_layout

\begin_layout Plain Layout

\family typewriter
da(1,:) = (xi(1,:)+1i*xi(2,:))/sqrt(2); 
\end_layout

\begin_layout Plain Layout

\family typewriter
da(2,:) = (xi(3,:)+1i*xi(4,:))/sqrt(2); 
\end_layout

\begin_layout Plain Layout

\family typewriter
end 
\family default

\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset

 
\family typewriter
 
\end_layout

\begin_layout Plain Layout

\family typewriter
function L = Linear(D,r) 
\end_layout

\begin_layout Plain Layout

\family typewriter
lap = D.x.^2+D.y.^2; 
\end_layout

\begin_layout Plain Layout

\family typewriter
L(1,:) = 1i*0.5*lap(:); 
\end_layout

\begin_layout Plain Layout

\family typewriter
L(2,:) = 1i*0.5*lap(:); 
\end_layout

\begin_layout Plain Layout

\family typewriter
end
\end_layout

\end_inset

 
\end_layout

\begin_layout Subsection
Planar graphs
\end_layout

\begin_layout Standard
With this choice of algorithm and step-size, the results are plotted below.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
centering
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset


\begin_inset Graphics
	filename Planar/Planar1.eps
	width 70text%

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Planar-noise-intensity-image"

\end_inset

Planar noise intensity as a transverse slice in the 
\begin_inset Formula $t=1,y=0$
\end_inset

 plane.
 The relatively large sampling error is because there are not many samples.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
centering
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset


\begin_inset Graphics
	filename Planar/Planar2.eps
	width 70text%

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Growth in noise intensity with time vs.
 
\begin_inset Formula $x$
\end_inset

, at 
\begin_inset Formula $y=0$
\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
centering
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset


\begin_inset Graphics
	filename Planar/Planar3.eps
	width 70text%

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Growth in planar noise intensity at 
\begin_inset Formula $x=y=0$
\end_inset

, vs.
 exact results
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
centering
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset


\begin_inset Graphics
	filename Planar/Planar4.eps
	width 70text%

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Errors in planar noise intensity at 
\begin_inset Formula $x=y=0$
\end_inset

, vs.
 exact results.
 These results are averaged across the plane, as well as being ensemble
 averaged.
 
\begin_inset CommandInset label
LatexCommand label
name "fig:Errors-in-planar"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
centering
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset


\begin_inset Graphics
	filename Planar/Planar5.eps
	width 70text%

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Growth in planar noise intensity in momentum space, for the second field,
 at 
\begin_inset Formula $k_{x}=k_{y}=0$
\end_inset

.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
centering
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset


\begin_inset Graphics
	filename Planar/Planar6.eps
	width 70text%

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Lattice averaged errors in cross-correlations in momentum space, vs.
 exact results.
 
\begin_inset CommandInset label
LatexCommand label
name "fig:Errors-in-planar-1"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection*
Exercise:
\end_layout

\begin_layout Standard
Add a decay rate of 
\begin_inset Formula $-a$
\end_inset

 to the Planar differential equation, then replot.
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Section
Extensible simulations
\end_layout

\begin_layout Standard
Next, an extensible simulation: first a noisy absorber, then a noisy amplifier.
 The second part has a different differential equation, and larger graphical
 scales.
\end_layout

\begin_layout Standard
This is handled with the extensibility feature of xSPDE.
 Just enter a sequence of inputs, in the form 
\emph on
{in1,in2,in3..} 
\emph default
with a corresponding sequence of graphs, 
\emph on
{g1,g2,g3..}
\emph default
.
 Here, the first equation is: 
\begin_inset Formula 
\[
\frac{da}{dt}=-a+\zeta_{1}(t)+i\zeta_{2}(t)
\]

\end_inset

with an initial condition of 
\begin_inset Formula $a=1$
\end_inset

.
 The mean intensity is constant: 
\begin_inset Formula 
\[
\left\langle \left|a(t)\right|^{2}\right\rangle =1\,.
\]

\end_inset


\end_layout

\begin_layout Subsection
Input file
\end_layout

\begin_layout Standard
The full input file is given below.
\end_layout

\begin_layout Standard
\align center
\begin_inset Box Doublebox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
function [e] = Gain() 
\end_layout

\begin_layout Plain Layout

\family typewriter
in.name = 'Loss with noise'; 
\end_layout

\begin_layout Plain Layout

\family typewriter
in.ranges = 4; 
\end_layout

\begin_layout Plain Layout

\family typewriter
in.noises = [2,0]; 
\end_layout

\begin_layout Plain Layout

\family typewriter
in.ensembles = [100,16,1]; 
\end_layout

\begin_layout Plain Layout

\family typewriter
in.initial = @(v,~) (v(1,:)+1i*v(2,:))/sqrt(2); 
\end_layout

\begin_layout Plain Layout

\family typewriter
in.da = @(a,z,r) -a + z(1,:)+1i*z(2,:); 
\end_layout

\begin_layout Plain Layout

\family typewriter
in.observe{1} = @(a,~,~) a.*conj(a); 
\end_layout

\begin_layout Plain Layout

\family typewriter
in.olabels = {'|a|^2'}; 
\end_layout

\begin_layout Plain Layout

\family typewriter
in.compare = {@(t,~) 1+0*t}; 
\end_layout

\begin_layout Plain Layout

\family typewriter
in2 = in; 
\end_layout

\begin_layout Plain Layout

\family typewriter
in2.steps = 4; 
\end_layout

\begin_layout Plain Layout

\family typewriter
in2.origin = in.ranges; 
\end_layout

\begin_layout Plain Layout

\family typewriter
in2.name = 'Gain with noise'; 
\end_layout

\begin_layout Plain Layout

\family typewriter
in2.da = @(a,z,r) a + z(1,:)+1i*z(2,:); 
\end_layout

\begin_layout Plain Layout

\family typewriter
in2.compare = {@(t,~) 2*exp(2*(t-4))-1}; 
\end_layout

\begin_layout Plain Layout

\family typewriter
e = xspde({in,in2}); 
\end_layout

\begin_layout Plain Layout

\family typewriter
end 
\end_layout

\end_inset

 
\end_layout

\begin_layout Standard
Note that the code defines 
\begin_inset Formula $in2=in$
\end_inset

 and 
\begin_inset Formula $gr2=gr$
\end_inset

 before making any changes, so that only a few additional inputs are needed.
 The number of 
\begin_inset Formula $steps$
\end_inset

 is increased to improve the accuracy of the second integration, and the
 second time origin is chosen so that it starts from the time the first
 simulation is completed.
\end_layout

\begin_layout Standard
Results are graphed below.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
centering
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset


\begin_inset Graphics
	filename Gain/Gain1.eps
	width 65text%

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Absorber intensity
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Comparison graphs are also produced for the relative errors.
 In the graph given here,
\end_layout

\begin_layout Subsection
Extended simulations
\end_layout

\begin_layout Standard
The second differential equation has an initial condition corresponding
 to the solution of the first equation at 
\begin_inset Formula $t=4$
\end_inset

, and the derivative: 
\begin_inset Formula 
\[
\frac{da}{dt}=a+\zeta_{1}(t)+i\zeta_{2}(t)
\]

\end_inset


\end_layout

\begin_layout Standard
The mean intensity grows exponentially: 
\begin_inset Formula 
\[
\left\langle \left|a\right|^{2}\right\rangle =1\,.
\]

\end_inset


\begin_inset Formula 
\[
\left\langle \left|a(t)\right|^{2}\right\rangle =2e^{2(t-4)}-1
\]

\end_inset

where 
\begin_inset Formula 
\[
w(t)=\int_{0}^{t}\zeta(t')dt'
\]

\end_inset


\end_layout

\begin_layout Standard
To compare the calculated solution with this exact result, there are two
 Compares functions in the project file.
 Note that the code defines 
\begin_inset Formula $in2=in$
\end_inset

 and 
\begin_inset Formula $g=g2$
\end_inset

 before making any changes, so that only a few additional inputs are needed.
 The number of 
\begin_inset Formula $steps$
\end_inset

 is increased to improve the accuracy of the second integration.
 The time axis in the second graph has the origin reset to zero.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
centering
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset


\begin_inset Graphics
	filename Gain/Gain3.eps
	width 65text%

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Noisy amplifier intensity
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Comparison graphs of the relative errors are also produced here as well.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
centering
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset


\begin_inset Graphics
	filename Gain/Gain4.eps
	width 65text%

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Noisy amplifier intensity errors, showing how the sampling errors increase
 in time.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection*
Exercise: 
\end_layout

\begin_layout Standard
Reverse the order of gain and loss.
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Section
Characteristic
\end_layout

\begin_layout Standard
The next example is the characteristic equation for a traveling wave at
 constant velocity, 
\begin_inset Formula 
\[
\frac{da}{dt}+\frac{da}{dx}=0
\]

\end_inset


\end_layout

\begin_layout Standard
Together with the initial condition that 
\begin_inset Formula $a(0,x)=sech(2x+5)$
\end_inset

, this has an exact solution that propagates at a constant velocity: 
\begin_inset Formula 
\begin{eqnarray*}
a(t,x) & = & sech(2(x-t)+5)
\end{eqnarray*}

\end_inset

The time evolution at 
\begin_inset Formula $x=0$
\end_inset

 is simply: 
\begin_inset Formula 
\begin{eqnarray*}
a(t,0) & = & sech(2(t-5/2))
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Subsection
Characteristic inputs
\end_layout

\begin_layout Standard
The important parameters and functions in this case are:
\end_layout

\begin_layout Standard
\align center
\begin_inset Box Doublebox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
function [e] = Characteristic() 
\end_layout

\begin_layout Plain Layout

\family typewriter
in.name = 'Characteristic'
\end_layout

\begin_layout Plain Layout

\family typewriter
in.dimension = 2; 
\end_layout

\begin_layout Plain Layout

\family typewriter
in.initial = @(v,r) sech(2.*(r.x+2.5)); 
\end_layout

\begin_layout Plain Layout

\family typewriter
in.da = @(a,z,r) 0*a; 
\end_layout

\begin_layout Plain Layout

\family typewriter
in.linear = @(D,r) -D.x; 
\end_layout

\begin_layout Plain Layout

\family typewriter
in.olabels = {'a_1(x)'}; 
\end_layout

\begin_layout Plain Layout

\family typewriter
in.compare = {@(t,in) sech(2.*(t-2.5))}; 
\end_layout

\begin_layout Plain Layout

\family typewriter
e = xspde(in); 
\end_layout

\begin_layout Plain Layout

\family typewriter
end 
\end_layout

\end_inset

 
\end_layout

\begin_layout Standard
The simulation program reports the following maximum errors: 
\end_layout

\begin_layout Itemize
Max step error = 5.773160e-15 
\end_layout

\begin_layout Standard
This is slightly misleading, since while the interaction picture is essentially
 exact, it is solving a finite lattice problem exactly.
 The transverse lattice discretization does introduce errors of course,
 and these are seen in the comparisons with the exact results: 
\end_layout

\begin_layout Itemize
Maximum comparison differences = 7.581817e-03 
\end_layout

\begin_layout Standard
Graphs of results are given below.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
centering
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset


\begin_inset Graphics
	filename Characteristic/Characteristic1.eps
	width 75text%

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Characteristic traveling wave versus space and time
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
centering
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset


\begin_inset Graphics
	filename Characteristic/Characteristic2.eps
	width 60text%

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Characteristic errors at center
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection*
Exercise:
\end_layout

\begin_layout Standard
Recalculate with the opposite velocity, and a new exact solution.
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Section
Equilibrium
\end_layout

\begin_layout Standard
We now move on to frequency space simulations.
 The equation is the same as the earlier loss equation i.e.
 
\begin_inset Formula 
\[
\frac{da}{dt}=-a+\zeta(t)
\]

\end_inset

where 
\begin_inset Formula $\zeta(t)=\zeta_{1}(t)+i\zeta_{2}(t)$
\end_inset

, with an initial condition of 
\begin_inset Formula $a=(w_{1}+iw_{2})/\sqrt{2}$
\end_inset

.
 For sufficiently long time-intervals, the solution is given by: 
\begin_inset Formula 
\[
\tilde{a}\left(\omega\right)=\frac{\tilde{\zeta}(\omega)}{1-i\omega}
\]

\end_inset

The expectation value of the noise Fourier transform modulus squared, in
 the large 
\begin_inset Formula $T$
\end_inset

 limit, is therefore: 
\begin_inset Formula 
\begin{eqnarray*}
\left\langle \left|\tilde{a}(\omega)\right|^{2}\right\rangle  & = & \frac{1}{2\pi\left(1+\omega^{2}\right)}\int\int e^{i\omega(t-t')}\left\langle \zeta(t)\zeta^{*}(t')\right\rangle dtdt'\,.\\
 & = & \frac{T}{\pi\left(1+\omega^{2}\right)}
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Subsection
Program inputs
\end_layout

\begin_layout Standard
The full input file is given below.
\end_layout

\begin_layout Standard
\align center
\begin_inset Box Doublebox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
function e = Equilibrium() 
\end_layout

\begin_layout Plain Layout

\family typewriter
in.name = 'Equilibrium spectrum'; 
\end_layout

\begin_layout Plain Layout

\family typewriter
in.points = 640;
\end_layout

\begin_layout Plain Layout

\family typewriter
in.ranges = 100;
\end_layout

\begin_layout Plain Layout

\family typewriter
in.noises = [2,0]; 
\end_layout

\begin_layout Plain Layout

\family typewriter
in.ensembles = [1000,10,1]; 
\end_layout

\begin_layout Plain Layout

\family typewriter
in.initial = @(v,~) (v(1,:)+1i*v(2,:))/sqrt(2); 
\end_layout

\begin_layout Plain Layout

\family typewriter
in.da = @(a,z,r) -a + z(1,:)+1i*xi(2,:); 
\end_layout

\begin_layout Plain Layout

\family typewriter
in.observe{1} =@(a,~) a.*conj(a); 
\end_layout

\begin_layout Plain Layout

\family typewriter
in.observe{2} =@(a,~) a.*conj(a); 
\end_layout

\begin_layout Plain Layout

\family typewriter
in.transforms ={0,1};
\end_layout

\begin_layout Plain Layout

\family typewriter
in.olabels = {'|a(t)|^2','|a(w)|^2'}; 
\end_layout

\begin_layout Plain Layout

\family typewriter
in.compare = {@(t,~) 1.+0*t, @(w,~)100./(pi*(1+w.^2))};
\end_layout

\begin_layout Plain Layout

\family typewriter
e = xspde(in); 
\end_layout

\begin_layout Plain Layout

\family typewriter
end 
\family default
 
\end_layout

\end_inset

 
\end_layout

\begin_layout Standard
Results are graphed below.
 The calculated spectrum is indistinguishable from the exact result.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
centering
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{}
\end_layout

\end_inset


\begin_inset Graphics
	filename Equilibrium/Equilibrium1.eps
	width 75text%

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Equilibrium spectral intensity
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
The xsim program reports the following error summary: 
\end_layout

\begin_layout Itemize
Max step error =5.856892e-02 
\end_layout

\begin_layout Itemize
Max sampling error = 4.234763e-01 
\end_layout

\begin_layout Itemize
Maximum comparison differences = 6.194415e-01 
\end_layout

\begin_layout Standard
Here, the comparison differences indicate that the maximum error reported
 is actually about 
\begin_inset Formula $1.5$
\end_inset

 standard deviations of the maximum sampling error.
 Given the large number of data points, this is a reasonable result.
\end_layout

\begin_layout Subsection*
Exercise: 
\end_layout

\begin_layout Standard
Add a second field coupled to the first, so that: 
\begin_inset Formula 
\begin{eqnarray*}
\frac{da}{dt} & = & -a+\zeta(t)\\
\frac{db}{dt} & = & -b+a
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Standard
Compare the two spectra, and calculate what the second one should look like.
\end_layout

\begin_layout Chapter
Logic and data
\end_layout

\begin_layout Standard
The simulation program logic is straightforward.
 It is a very compact function called 
\begin_inset Formula $\mathbf{xspde}$
\end_inset

.
 This calls 
\series bold

\begin_inset Formula $\mathbf{xsim}$
\end_inset


\series default
, for the simulation, then 
\begin_inset Formula $\mathbf{xgraph}$
\end_inset

 for the graphics.
 Most of the work is done by other specialized functions.
 Input parameters come from an 
\begin_inset Formula ${\bf input}$
\end_inset

 array, output is saved either in a 
\begin_inset Formula ${\bf data}$
\end_inset

 array, or else in a specified file.
 When completed, timing and error results are printed.
\end_layout

\begin_layout Section
How it works
\end_layout

\begin_layout Standard
To summarize the previous chapters, xSPDE will solve stochastic partial
 different equations for a vector field 
\begin_inset Formula $\mathbf{a}(t,\bm{x})$
\end_inset

 and vector noise 
\begin_inset Formula $\bm{\zeta}(t,\bm{x})$
\end_inset

, of form: 
\begin_inset Formula 
\begin{equation}
\frac{\partial}{\partial t}\mathbf{a}(t,\bm{x})=\mathbf{A}\left[\mathbf{a}\right]+\underline{\mathbf{B}}\left[\mathbf{a}\right]\cdot\bm{\zeta}(t,\bm{x})+\underline{\mathbf{L}}\left[\bm{\nabla}\right]\cdot\mathbf{a}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
It can also solve ordinary stochastic equations, or partial differential
 equations without noise.
 Extensive error checking outputs are available.
 Both initial stochastic conditions and noise can have nonlocal spatial
 filters applied.
 All inputs are entered as part of an object-oriented structure.
 This includes the functions used to specify the equations and the quantities
 to average.
 The outputs can be either stored, or graphed interactively.
 xSPDE includes built-in multidimensional graphics tools.
\end_layout

\begin_layout Subsection
Input and data arrays
\end_layout

\begin_layout Standard
To explain xSPDE in full detail, 
\end_layout

\begin_layout Itemize
Simulation inputs are stored in the 
\series bold
input
\series default
 cell array.
 
\end_layout

\begin_layout Itemize
This describes a 
\emph on
sequence
\emph default
 of simulations, so that 
\series bold
input={in1,in2,...}
\series default
.
 
\end_layout

\begin_layout Itemize
Each structure 
\series bold
in
\series default
 describes a simulation, whose output is the input of the next.
 
\end_layout

\begin_layout Itemize
The main function is called using 
\begin_inset Formula ${\bf data=}\mathbf{xspde(input)}$
\end_inset

.
 
\end_layout

\begin_layout Itemize
Averages are recorded sequentially in the 
\series bold
data
\series default
 cell array.
 
\end_layout

\begin_layout Itemize
Raw trajectory data is stored in the 
\series bold
raw
\series default
 cell array if required.
 
\end_layout

\begin_layout Standard
The sequence 
\begin_inset Formula $\mathbf{input}$
\end_inset

 has a number of individual simulation objects 
\begin_inset Formula $\mathbf{in}$
\end_inset

.
 Each includes parameters that specify the simulation, with functions that
 give the equations and observables.
 If there is only one simulation, just one individual specification 
\begin_inset Formula $\mathbf{in}$
\end_inset

 is needed.
 In addition, xSPDE generates graphs with its own graphics program.
\end_layout

\begin_layout Subsection
Customization options
\end_layout

\begin_layout Standard
There are a wide range of customization options available for those who
 wish to have the very own xSPDE version.
\end_layout

\begin_layout Standard
Customization options include functions the allow user definition of: 
\end_layout

\begin_layout Description
inputs 
\begin_inset space ~
\end_inset

 
\end_layout

\begin_layout Description
interfaces 
\begin_inset space ~
\end_inset

 
\end_layout

\begin_layout Description
stochastic
\begin_inset space ~
\end_inset

equations 
\begin_inset space ~
\end_inset

 
\end_layout

\begin_layout Description
mean
\begin_inset space ~
\end_inset

observables 
\begin_inset space ~
\end_inset

 
\end_layout

\begin_layout Description
linear
\begin_inset space ~
\end_inset

propagators 
\begin_inset space ~
\end_inset

 
\end_layout

\begin_layout Description
coordinate
\begin_inset space ~
\end_inset

grids 
\begin_inset space ~
\end_inset

 
\end_layout

\begin_layout Description
noise
\begin_inset space ~
\end_inset

correlations 
\begin_inset space ~
\end_inset

 
\end_layout

\begin_layout Description
integration
\begin_inset space ~
\end_inset

methods 
\begin_inset space ~
\end_inset

 
\end_layout

\begin_layout Standard

\series bold
There are four internal options for stochastic integration methods, but
 arbitrary user specification is also possible.
\end_layout

\begin_layout Standard
The program will print out a record of its progress, then generate the specified
 graphs.
\end_layout

\begin_layout Section
Stochastic flowchart 
\end_layout

\begin_layout Standard
The main program logic is nearly self-explanatory.
 It has four functions and two main arrays that store results.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename Figures/Flowchart.tiff
	width 90text%

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:X-SPDE-flowchart"

\end_inset

xSPDE flowchart, showing the data, lattice and field processing.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
There are also two important computational routines behind the scenes, which
 need to be kept in mind.
 These are 
\series bold
da
\series default
, which is short for difference in a.
 This is completely user specified, and gives a local step in time.
 The next workhorse routine is 
\series bold
xprop
\series default
.
 This is not a beefy Rugby forward, but calculates spatial propagation.
\end_layout

\begin_layout Standard
The logical order is as follows:
\end_layout

\begin_layout Subsection*
System functions
\end_layout

\begin_layout Description
xsim decides the overall workflow, and parallel operation at a high level.
 Here, 
\emph on
in.ensembles(3)
\emph default
 is used to specify parallel integration, with a 
\emph on
parfor
\emph default
 loop.
 The random seeds include data from the loop index to make sure the noise
 is independent for each ensemble member, including parallel ensembles.
 
\end_layout

\begin_layout Description
xlattice creates a space-time lattice from the input data, which is a data-struc
ture.
 This also initializes the actual 
\series bold
\emph on
data
\series default
\emph default
 array for averaging purposes.
 Next, a loop is initiated over an ensemble of fields for checking and ensemble
 averaging.
 The calculations inside the loop can all be carried our in parallel, if
 necessary.
 These internal steps are actually relatively simple.
 
\end_layout

\begin_layout Description
xinpreferences is called by xlattice to set the defaults that are not already
 entered.
 
\end_layout

\begin_layout Description
xensemble repeats each stochastic path for the check/ensemble loop.
 It is important to notice that the random seed is reset at the start of
 each ensemble loop.
 The seed has a unique value that is different for each ensemble member.
 Note that for successive simulations that are 
\series bold
not
\series default
 stored in the same data array, the seed should ideally be manually chosen
 differently for inputs to successive integration blocks, in order to guarantee
 independent noise sequences.
 The check variable can be set to 
\begin_inset Formula $errorchecks=1,2$
\end_inset

.
 This is the total number of integrations carried out.
 The integration is executed once with 
\begin_inset Formula $errorchecks=1$
\end_inset

.
 With 
\begin_inset Formula $errorchecks=2$
\end_inset

, there are two integrations, using half the step-size the second time.
 This takes three times as long overall.
 The matrices used to define the interaction picture transformations are
 stored
\emph on
 
\emph default
for each check loop,
\emph on
 
\emph default
as they vary with step-size.
 
\end_layout

\begin_layout Description
xpath propagates the field 
\series bold
\emph on
a
\series default
\emph default
 over a path in time.
 There are 
\begin_inset Formula $in.steps$
\end_inset

 time-steps for each point stored in time, to allow for greater accuracy
 without excessive data storage, where needed.
 This integrates the equations for a predetermined time duration.
 Note that the random seed has the same value for 
\series bold
both
\series default
 the check loops.
 This is because the same number of random variates must be generated in
 the same order to allow accurate extrapolation.
 The two loops must use the same random numbers, or else the check is not
 accurate.
 For random numbers generated during the integration, the coarse step will
 add two fine step random noises together, to achieve the goal of identical
 noise behavior.
 Results of any required averages, variances and checks are accumulated
 in the 
\series bold
\emph on
data
\series default
\emph default
 array.
 
\end_layout

\begin_layout Description
xprop uses Fourier space to calculate a step in the interaction picture,
 using linear transformations that are pre-calculated.
 There are both linear transformations and momentum dependent terms available.
 These are pre-calculated by the 
\series bold
xlattice
\series default
 function, and stored in the 
\begin_inset Formula $prop$
\end_inset

 arrays.
 
\end_layout

\begin_layout Subsection*
User functions
\end_layout

\begin_layout Description
initial is used to initialize each integration in time.
 This is a user-defined function, which can involve random numbers if there
 is an initial probability distribution.
 This creates a stochastic field on the lattice, called 
\series bold
\emph on
a.

\series default
\emph default
 The default is 
\begin_inset Formula $\mathbf{xinitialise}$
\end_inset

, which sets fields to zero.
 For sequential simulations, 
\series bold
initials 
\series default
is used.
 
\end_layout

\begin_layout Description
step is the algorithm or method computes each space-time point in the lattice.
 This also generates the random numbers fields at each time-step.
 It can be user-modified by setting the handle in.step.
 The default is 
\begin_inset Formula $\mathbf{xstep}$
\end_inset

, which uses a central-difference technique.
 
\end_layout

\begin_layout Description
observe is the observation function whose output is averaged over the ensembles,
 called from 
\series bold
xpath
\series default
.
 The default, 
\begin_inset Formula $\mathbf{xobserve}$
\end_inset

, returns the real amplitudes.
 
\end_layout

\begin_layout Description
linear is the linear response, including transverse derivatives in space.
 The default, 
\begin_inset Formula $\mathbf{xlinear}$
\end_inset

, sets this to zero.
 
\end_layout

\begin_layout Description
da is called by 
\series bold
step
\series default
 to calculate derivatives at every step in the process, including the stochastic
 terms.
 
\end_layout

\begin_layout Standard
Details of the different parts of the program are given below.
 Note that the functions 
\begin_inset Formula $\mathbf{tic}()$
\end_inset

 and 
\series bold
toc()
\series default
 are called to time each simulation.
\end_layout

\begin_layout Section
Graphics function
\end_layout

\begin_layout Standard
At the end of the loop, global averages and error-bars are calculated.
 The main functions involved are: 
\end_layout

\begin_layout Description
xgraph is called by xSPDE when the ensemble loops finished.
 The results are graphed and output if required.
 
\end_layout

\begin_layout Description
xgrpreferences is called by 
\series bold
xgraph
\series default
 to set the graphics defaults that are not already entered.
 
\end_layout

\begin_layout Standard
Comparison results are calculated if available from the user-specified 
\series bold
in.compare
\series default
, an error summary is printed, and the results plotted using the 
\series bold
xgraph
\series default
 routine, which is a function that graphs the observables.
 It is prewritten to cover a range of useful graphs, but can be modified
 to suit the user.
 The code is intended to cascade down from higher to lower dimension, generating
 different types of user-defined graphs.
 Each type of graph is generated once for each specified graphics function.
\end_layout

\begin_layout Standard
Results depend on the dimension: 
\end_layout

\begin_layout Description

\emph on
dimension=4
\emph default
 For the highest space dimension, only a slice through 
\begin_inset Formula $z=0$
\end_inset

 is available.
 This is then graphed as if it was in three dimensions.
 
\end_layout

\begin_layout Description

\emph on
dimension=3
\emph default
 For two dimensions, distinct graphic images of observable
\emph on
 vs x,y
\emph default
 are plotted at 
\begin_inset Formula $images$
\end_inset

 time slices.
 Otherwise, only a slice through 
\begin_inset Formula $y=0$
\end_inset

 is available.
 This is then treated as if it was in two dimensions.
 
\end_layout

\begin_layout Description

\emph on
dimension=2
\emph default
 For two dimensions, one three-dimensional image of observable
\emph on
 vs x,t
\emph default
 is plotted.
 Otherwise, only a slice through 
\begin_inset Formula $x=0$
\end_inset

 is available.
 This is otherwise treated as in one dimension.
 
\end_layout

\begin_layout Description

\emph on
dimension=1
\emph default
 For one dimensions, one image of observable
\emph on
 vs t
\emph default
 is plotted, with data at each lattice point in time.
 Exact results, error bars and sampling error bounds are included if available.
 
\end_layout

\begin_layout Standard
In addition to time-dependent graphs, the 
\series bold
xgraph
\series default
 function can generate 
\emph on
images 
\emph default
(3D)
\emph on
 
\emph default
and 
\emph on
transverse
\emph default
 (2D) plots at specified points in time, up to a maximum given by the number
 of time points specified.
 The number of these can be individually specified for each graphics output.
 The images available are specified in 
\emph on
imagetype
\emph default
: 3D perspective plots, grey-scale colour plots and contour plots.
\end_layout

\begin_layout Section
Error control 
\end_layout

\begin_layout Standard
The final 2D output graphs will have error-bars if 
\begin_inset Formula $in.errorchecks=2$
\end_inset

 was specified, which is also the default parameter setting.
 This is to make sure the final results are accurate.
 Error-bars below a minimum relative size compared to the vertical range
 of the plot, specified by the graphics variable 
\begin_inset Formula $minbar$
\end_inset

, are not plotted.
 There is a clear strategy if the errors are too large.
\end_layout

\begin_layout Standard
Either increase the 
\emph on
points
\emph default
, which gives more plotted points and lower errors, or increase the 
\emph on
steps, 
\emph default
which reduces the step size without changing the graphical resolution.
 The default algorithm and extrapolation order can be changed, read the
 xSPDE manual when doing this.
 Error bars on the graphs can be removed by setting 
\begin_inset Formula $errorchecks=1$
\end_inset

 or increasing 
\begin_inset Formula $minbar$
\end_inset

 in final graphs.
\end_layout

\begin_layout Standard
If 
\begin_inset Formula $ensembles(2)>1$
\end_inset

 or 
\begin_inset Formula $ensembles(3)>1$
\end_inset

, which allows xSPDE to calculate sampling errors, it will plot upper and
 lower limits of one standard deviation.
 If the sampling errors are too large, try increasing 
\begin_inset Formula $ensembles(1)$
\end_inset


\emph on
, 
\emph default
which increases the trajectories in a single thread.
 An alternative is to increase 
\begin_inset Formula $ensembles(2)$
\end_inset

.
 This is slower, but is only limited by the compute time, or else to increase
 
\begin_inset Formula $ensembles(3)$
\end_inset

, which gives higher level parallelization.
 Each is limited in different ways; the first by memory, and the second
 by time, the third by the number of available cores.
 Sampling error control helps ensures accuracy.
\end_layout

\begin_layout Standard
Note that error bars and sampling errors are only graphed for 2D graphs
 of results vs time.
 The error-bars are not plotted when they are below a user-specified size,
 to improve graphics quality.
 Higher dimensional graphs do not include this, for visibility reasons,
 but they are still recorded in the data files.
 Errors caused by the spatial lattice are not checked automatically in the
 xSPDE code.
 They must be checked by manually, by comparing results with different transvers
e lattice ranges and step-size.
\end_layout

\begin_layout Chapter
Arrays
\end_layout

\begin_layout Standard
The two important internal types of data that are user accessible are: 
\begin_inset Formula $a,r$
\end_inset

.
\end_layout

\begin_layout Standard
The fields 
\begin_inset Formula $a$
\end_inset

 are complex arrays defined on spatial or momentum grids.
 Internally, the fields 
\begin_inset Formula $a$
\end_inset

 are just matrices stored on a flattened space lattice, except for temporary
 transformations to the Fourier domain for calculating interaction picture
 propagation 
\begin_inset CommandInset citation
LatexCommand cite
key "Caradoc-Davies"

\end_inset

.
 Two different types of Fourier representations are used, depending on whether
 the transformations are for propagation, which requires the fastest possible
 methods, or whether the transformation is for graphing, which uses a convention
al index ordering.
\end_layout

\begin_layout Standard
If required, 
\begin_inset Formula $raw$
\end_inset

 ensemble data consisting of all the trajectories 
\begin_inset Formula $a$
\end_inset

 developing in time can be stored and output.
 This is memory intensive, and is only done if the 
\begin_inset Formula $in.raw=1$
\end_inset

 option is set.
\end_layout

\begin_layout Standard
The lattice data is a structure called, simply, 
\begin_inset Formula $r$
\end_inset

.
 It is available to all user-definable routines.
 The label 
\begin_inset Formula $r$
\end_inset

 is chosen because the lattice parameters have the important function of
 storing the grid coordinates in space and time.
 These structures reside in a static internal cell array of inputs and lattice
 parameters, including the interaction picture transformations, called 
\begin_inset Formula $\bm{latt}$
\end_inset

.
 The data in
\series bold
\emph on
 
\series default
\emph default

\begin_inset Formula $\bm{latt}$
\end_inset

 is different for each simulation in a sequence.
\end_layout

\begin_layout Standard
Averaged results for each sequence are stored in either space or Fourier
 domains, in the array 
\begin_inset Formula $data$
\end_inset

, as determined by the 
\begin_inset Formula $in.transforms$
\end_inset

 vector for the observable.
 The 
\begin_inset Formula $data$
\end_inset

 arrays obtained in the program as calculations progress are stored in cell
 arrays, 
\begin_inset Formula $cdata$
\end_inset

 , indexed by a sequence index.
\end_layout

\begin_layout Standard
The internal spatial grid definitions are as follows:
\end_layout

\begin_layout Section
Grids in x and k
\end_layout

\begin_layout Standard
The algorithms all use a sequence of interaction pictures.
 Each successive interaction picture is referenced to 
\begin_inset Formula $t=t_{n}$
\end_inset

, for the n-th step starting at 
\begin_inset Formula $t=t_{n}$
\end_inset

, so 
\begin_inset Formula $\mathbf{a}_{I}(t_{n})=\mathbf{a}(t_{n})\equiv\mathbf{a}_{n}$
\end_inset

.
 To understand the interaction picture, we first must understand the xSPDE
 lattice.
\end_layout

\begin_layout Subsection
Space lattice
\end_layout

\begin_layout Standard
We define the lattice cell size 
\begin_inset Formula $dx_{j}$
\end_inset

 in the 
\begin_inset Formula $j-th$
\end_inset

 dimension in terms of maximum range 
\begin_inset Formula $R_{j}$
\end_inset

 and the number of points 
\begin_inset Formula $N_{j}:$
\end_inset

 
\begin_inset Formula 
\[
dx_{j}=\frac{R_{j}}{N_{j}-1}\,.
\]

\end_inset


\end_layout

\begin_layout Standard
Each lattice starts at a value defined by the vector 
\begin_inset Formula $in.origin.$
\end_inset

 Using the default values, the time lattice starts at 
\begin_inset Formula $t=0$
\end_inset

 and ends at 
\begin_inset Formula $t=T=r_{1}$
\end_inset

, for 
\begin_inset Formula $n=1,\ldots N_{j}$
\end_inset

: 
\begin_inset Formula 
\[
t\left(n\right)=(n-1)dt\,.
\]

\end_inset

The 
\begin_inset Formula $j$
\end_inset

-th coordinate lattice starts at 
\begin_inset Formula $-r_{j}/2$
\end_inset

 and ends at 
\begin_inset Formula $r_{j}/2$
\end_inset

 , so that, for 
\begin_inset Formula $n=1,\ldots N_{j}$
\end_inset

: 
\begin_inset Formula 
\[
x_{j}\left(n\right)=-R_{j}/2+(n-1)dx_{j}\,.
\]

\end_inset


\end_layout

\begin_layout Subsection
Momentum lattice
\end_layout

\begin_layout Standard
The momentum space graphs use a Fourier transform definition so that, for
 
\begin_inset Formula $d$
\end_inset

 dimensions: 
\begin_inset Formula 
\[
\tilde{\mathbf{a}}\left(\mathbf{k},\omega\right)=\frac{1}{\left(2\pi\right)^{d/2}}\int d\mathbf{x}e^{i(\omega t-\mathbf{k}\cdot\mathbf{x})}\mathbf{a}\left(\mathbf{x},t\right)
\]

\end_inset


\end_layout

\begin_layout Standard
In order to match this to the standard definition of a discrete FFT, the
 
\begin_inset Formula $j$
\end_inset

-th momentum lattice cell size 
\begin_inset Formula $dk_{j}$
\end_inset

 in the 
\begin_inset Formula $j-th$
\end_inset

 dimension is defined in terms of the number of points 
\begin_inset Formula $N_{j}:$
\end_inset

 
\begin_inset Formula 
\[
dk_{j}=\frac{2\pi}{dx_{j}N_{j}}\,.
\]

\end_inset

The momentum range is therefore 
\begin_inset Formula 
\[
K_{j}=\left(N_{j}-1\right)dk_{j},
\]

\end_inset

while the momentum lattice starts at 
\begin_inset Formula $-k_{j}/2$
\end_inset

 and ends at 
\begin_inset Formula $k_{j}/2$
\end_inset

 , so that: 
\begin_inset Formula 
\[
k_{j}\left(n\right)=-K_{j}/2+(n-1)dk_{j}\,.
\]

\end_inset


\end_layout

\begin_layout Section
Computational Fourier transforms
\end_layout

\begin_layout Standard
A conventional fast Fourier transform (FFT) is used for the interaction
 picture (IP) transformations used in computations, as this is fast and
 simple.
 In one dimension, this is given by a sum over indices starting with zero,
 rather than the Matlab convention of one.
 Hence, if 
\begin_inset Formula $\tilde{m}=m-1$
\end_inset

: 
\begin_inset Formula 
\begin{equation}
\tilde{a}_{\tilde{n}}=\mathcal{F}\left(a\right)=\sum_{\tilde{m}=0}^{N-1}a_{\tilde{m}}\exp\left[-2\pi i\tilde{m}\tilde{n}/N\right]
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
Suppose the lattice spacing is 
\begin_inset Formula $dx$
\end_inset

, and the number of lattice points is 
\begin_inset Formula $N$
\end_inset

, then the maximum range from the first to last point is: 
\begin_inset Formula 
\[
R=(N-1)dx
\]

\end_inset

We note that the momentum lattice spacing is 
\begin_inset Formula 
\begin{equation}
dk=\frac{2\pi}{Ndx}
\end{equation}

\end_inset

The IP Fourier transform can be written in terms of an FFT as 
\begin_inset Formula 
\begin{equation}
\tilde{\mathbf{a}}\left(\mathbf{k}_{\mathbf{n}}\right)=\prod_{j}\left[\sum_{\tilde{m}_{j}}\exp\left[-i\left(dk_{j}dx_{j}\right)\tilde{m}_{j}\tilde{n}_{j}\right]\right]
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
The inverse FFT Fourier transforms automatically divide by the correct factors
 of 
\begin_inset Formula $\prod_{j}N_{j}$
\end_inset

 to ensure invertibility.
 Note also that due to the periodicity of the exponential function, negative
 momenta are obtained if we consider an ordered lattice such that: 
\begin_inset Formula 
\begin{eqnarray*}
k_{j} & = & (j-1)dk\,\,\,(j\le N/2)\\
k_{j} & = & (j-1-N)dk\,\,(j>N/2)
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Standard
For calculating derivatives and propagating in the interaction picture,
 the notation 
\begin_inset Formula $D$
\end_inset

 indicates a derivative.
 To explain, one integrates by parts: 
\begin_inset Formula 
\begin{equation}
D^{p}\tilde{\mathbf{a}}\left(\mathbf{k}\right)=\left[ik_{x}\right]^{p}\tilde{\mathbf{a}}\left(\mathbf{k}\right)=\frac{1}{\left(2\pi\right)^{d/2}}\int d\mathbf{x}e^{-i\mathbf{k}\cdot\mathbf{x}}\left[\frac{\partial}{\partial x}\right]^{p}\mathbf{a}\left(\mathbf{x}\right)\label{eq:Fourier derivative}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
This means, for example, that to calculate a one dimensional space derivative
 in the Linear routine, one uses: 
\end_layout

\begin_layout Itemize
\begin_inset Formula $\nabla_{x}\rightarrow$
\end_inset

D.x 
\end_layout

\begin_layout Standard
Here 
\begin_inset Formula $D.x$
\end_inset

 returns an array of momenta in cyclic order in dimension 
\begin_inset Formula $d$
\end_inset

 as defined above, suitable for an FFT calculation.
 The imaginary `i' is not needed to give the correct sign, from Eq (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:Fourier derivative"

\end_inset

).
 Instead, it is include in the D array.
 In two dimensions, the code to return a full two-dimensional Laplacian
 is: 
\end_layout

\begin_layout Itemize
\begin_inset Formula $\bm{\nabla}^{2}=\nabla_{x}^{2}+\nabla_{y}^{2}\rightarrow$
\end_inset

D.x.^2+D.y.^2 
\end_layout

\begin_layout Standard
Note that the dot in the notation of '.^' is needed to take the square of
 each element in the array.
\end_layout

\begin_layout Section
Graphics transforms
\end_layout

\begin_layout Standard
The index ordering and normalization used in the standard discrete FFT approach
 is efficient for interaction picture propagation, but not useful for graphing,
 since graphics routines prefer the momenta to be monotonic, i.e.
 in the order: 
\begin_inset Formula 
\begin{equation}
k_{j}\left(n\right)=-K_{j}/2+(n-1)dk_{j}.
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
All transforms defined in the observables are obtained from a vector called
 
\begin_inset Formula $in.transforms$
\end_inset

, which determines if a given coordinate axis is transformed prior to a
 given observable being measured.
 This can be turned on and off independently for each observable.
 The space and time transforms are defined in the next sub-sections.
\end_layout

\begin_layout Subsection
Time transforms
\end_layout

\begin_layout Standard
We define a Fourier transform in time as: 
\begin_inset Formula 
\begin{eqnarray}
\tilde{\mathbf{a}}\left(\omega\right) & = & \int_{0}^{T}\frac{dt}{\left(2\pi\right)^{1/2}}\bm{a}\left(t\right)\exp\left[i\omega t\right]
\end{eqnarray}

\end_inset

To achieve this in one dimension, note that: 
\begin_inset Formula 
\[
dtd\omega=\frac{2\pi}{N}.
\]

\end_inset

Defining 
\begin_inset Formula $\kappa=\omega^{max}/2$
\end_inset

: 
\begin_inset Formula 
\begin{eqnarray}
\tilde{\mathbf{a}}\left(\omega_{\tilde{n}}\right) & = & \frac{dt}{\sqrt{2\pi}}\sum_{\tilde{m}=0}^{N-1}\exp\left[i\left(\tilde{n}d\omega-\kappa\right)\left(\tilde{m}dt\right)\right]a_{\tilde{m}}\nonumber \\
 & = & \frac{dt}{\sqrt{2\pi}}\sum_{\tilde{m}=0}^{N-1}\exp\left[i\left(\tilde{n}\tilde{m}dtd\omega-\kappa\tilde{m}dt\right)\right]a_{\tilde{m}}\nonumber \\
 & = & \frac{dt}{\sqrt{2\pi}}\sum_{\tilde{m}=0}^{N-1}\exp\left[2\pi i\tilde{m}\tilde{n}/N\right]e^{-i\kappa\tilde{m}dt}a_{\tilde{m}}\nonumber \\
 & = & \frac{\sqrt{2\pi}}{d\omega}\times\frac{1}{N}\sum_{\tilde{m}=0}^{N-1}\exp\left[2\pi i\tilde{m}\tilde{n}/N\right]e^{-i\kappa t}a_{\tilde{m}}
\end{eqnarray}

\end_inset


\end_layout

\begin_layout Standard
Hence to get an ordered Fourier transform for graphing data, with the usual
 physics and mathematics definitions, we must 
\series bold
premultiply
\series default
 by 
\begin_inset Formula $e^{-i\kappa t}Ndt/\sqrt{2\pi}$
\end_inset

, then take a discrete IFFT.
 This is taken care of internally in the xSPDE transform routines.
\end_layout

\begin_layout Subsection
Space transforms
\end_layout

\begin_layout Standard
We define a Fourier transform in space as: 
\begin_inset Formula 
\begin{eqnarray}
\tilde{\mathbf{a}}\left(\mathbf{k}\right) & = & \int\frac{dV}{\left(2\pi\right)^{d/2}}\bm{a}\left(\mathbf{x}\right)\exp\left[-i\mathbf{k}\cdot\mathbf{x}\right]
\end{eqnarray}

\end_inset

To achieve this with an FFT in one dimension, let 
\begin_inset Formula $\kappa=K/2$
\end_inset

, and 
\begin_inset Formula $\rho=R/2$
\end_inset

, and define: 
\begin_inset Formula 
\begin{eqnarray}
\tilde{\mathbf{a}}\left(k_{\tilde{n}}\right) & = & \frac{dx}{\sqrt{2\pi}}\sum_{\tilde{m}=0}^{N-1}\exp\left[-i\left(\tilde{n}dk-K/2\right)\left(\tilde{m}dx-R/2\right)\right]a_{\tilde{m}}\nonumber \\
 & = & \frac{dx}{\sqrt{2\pi}}\sum_{\tilde{m}=0}^{N-1}\exp\left[-i\left(\tilde{n}\tilde{m}dxdk-K\tilde{m}dx/2-R\tilde{n}dk/2+KR/4\right)\right]a_{\tilde{m}}\nonumber \\
 & = & e^{-iR\left(K/2-\tilde{n}dk\right)/2}\frac{dx}{\sqrt{2\pi}}\sum_{\tilde{m}=0}^{N-1}\exp\left[-2\pi i\tilde{m}\tilde{n}/N\right]e^{iK\tilde{m}dx/2}a_{\tilde{m}}\nonumber \\
 & = & e^{-iRk/2}\frac{dx}{\sqrt{2\pi}}\sum_{\tilde{m}=0}^{N-1}\exp\left[-2\pi i\tilde{m}\tilde{n}/N\right]e^{iKx/2+iKR/4}a_{\tilde{m}}
\end{eqnarray}

\end_inset


\end_layout

\begin_layout Standard
Hence to get an ordered Fourier transform for graphing data, with the usual
 mathematical definitions, we must 
\series bold
premultiply
\series default
 by a phase factor, take a discrete FFT, then 
\series bold
post-multiply
\series default
 by 
\begin_inset Formula $another$
\end_inset

 phase factor.
 This is taken care of internally in the xSPDE transform routines.
\end_layout

\begin_layout Section
Fields
\end_layout

\begin_layout Standard
In the xSPDE code, the complex vector field 
\begin_inset Formula $a$
\end_inset

 is stored as a complex matrix with dimensions 
\begin_inset Formula $[fields,lattice]$
\end_inset

.
 Here 
\begin_inset Formula $lattice$
\end_inset

 is the total number of lattice points including an ensemble dimension,
 to increase computational efficiency: 
\begin_inset Formula 
\[
lattice=ensembles(1)\times n.space\,.
\]

\end_inset

The total number of space points 
\begin_inset Formula $n.space$
\end_inset

 is given by: 
\begin_inset Formula 
\[
n.space=points\left(2\right)\times\ldots\times points(dimension)\,.
\]

\end_inset

The use of a matrix for the fields is convenient in that fast matrix operations
 are possible in a high-level language.
\end_layout

\begin_layout Standard
The 
\begin_inset Formula $ensembles(1)$
\end_inset

 trajectories are used for array-based parallel ensemble averaging.
 These trajectories are stored in parallel in one array, to allow fast on-chip
 parallel processing.
 Distinct stochastic trajectories are also organized at a higher level into
 a set of 
\begin_inset Formula $ensembles(2)$
\end_inset

 ensembles for statistical purposes, which allows a more precise estimate
 of sampling error bars.
 These can also be integrated in parallel using 
\emph on
ensembles(3)
\emph default
 parallel threads.
\end_layout

\begin_layout Standard
This hierarchical organization allows allows flexibility in allocating memory
 and optimizing parallel processing.
 It is usually faster to have larger values of 
\begin_inset Formula $ensembles(1)$
\end_inset

, but more memory intensive.
 Using larger values of 
\begin_inset Formula $ensembles(2)$
\end_inset

 is slower, but requires less memory.
\end_layout

\begin_layout Standard
In different subroutines it maybe necessary to expand out this array to
 more easily reference the array structure.
 The expanded structure is as follows 
\end_layout

\begin_layout Description
Array
\begin_inset space ~
\end_inset


\begin_inset Formula $a$
\end_inset

 has dimension: 
\begin_inset Formula $(fields,ensembles(1),points(2),\ldots points(dimension))$
\end_inset

.
 
\end_layout

\begin_layout Standard
Note: Here, 
\begin_inset Formula $fields$
\end_inset

 is the number of field components and 
\begin_inset Formula $ensembles(1)$
\end_inset

 is the number of statistical samples processed as a parallel vector.
 This can be set to one to save data space, or increased to improve parallel
 efficiency.
 Provided no frequency information is needed, the time dimension 
\begin_inset Formula $points(1)$
\end_inset

 is compressed to one during calculations.
 During spectral calculations, the full length of the time lattice, 
\begin_inset Formula $points(1)$
\end_inset

, is stored, which increases memory requirements.
 
\end_layout

\begin_layout Description
latt: This includes a propagation array 
\begin_inset Formula $propagator$
\end_inset

, used in the interaction picture calculations.
 There are two momentum space propagators, for coarse and fine steps respectivel
y, which are computed when they are needed.
 
\end_layout

\begin_layout Section
Data 
\end_layout

\begin_layout Paragraph
Observables: 
\emph on
data
\end_layout

\begin_layout Standard
During the calculation, observables are calculated and averaged over the
 
\emph on

\begin_inset Formula $ensembles(1)$
\end_inset


\emph default
 parallel trajectories in the 
\series bold
xpath
\series default
 function.
 The results are added to the earlier results in the array 
\begin_inset Formula $\mathbf{data}$
\end_inset

, to create graphs for each observable.
 At this stage, both the first and second moment is stored, in order to
 allow calculation of the sampling error in each quantity.
\end_layout

\begin_layout Standard
There are 
\begin_inset Formula $graphs$
\end_inset

 real observables, which are determined by the number of functions defined
 in the 
\begin_inset Formula $observe$
\end_inset

 cell array.
 The number of 
\begin_inset Formula $graphs$
\end_inset

 may be smaller or larger than the number of vector fields.
 The observable field includes all the necessary averages over the ensembles.
\end_layout

\begin_layout Standard
When step-size checking is turned on using the 
\begin_inset Formula $errorchecks=2$
\end_inset

 flag, a low resolution field
\series bold
\emph on
 
\series default
\emph default
is stored for comparison with a high-resolution field of half the step-size,
 to obtain the time-step error.
\end_layout

\begin_layout Standard
The observable 
\begin_inset Formula $data$
\end_inset

 which is stored therefore involves three arrays which are all included
 in the data array.
 These are the high resolution means, together with error-bars due to time-steps
, and estimates of high-resolution standard deviations due to sampling statistic
s.
\end_layout

\begin_layout Standard
The observable 
\begin_inset Formula $data$
\end_inset

 which is plotted therefore includes step-size error bars and plotted lines
 for the two estimated upper and lower standard deviations, obtained from
 the statistical moments.
\end_layout

\begin_layout Standard
In summary, data from each simulation is stored internally in an array of
 size 
\begin_inset Formula 
\[
errors\times points\left(1\right)\times n.space\times graphs\,.
\]

\end_inset

This is a flattened version of the full data dimension, which is logically
 
\begin_inset Formula 
\[
errors\times points\left(1\right)\times\ldots\times points(dimension)\times graphs\,.
\]

\end_inset

This is necessary in order to generate outputs at each of the 
\begin_inset Formula $points(1)$
\end_inset

 time slices.
 Here 
\begin_inset Formula $errors=1,2,3$
\end_inset

 is used to index over the 
\end_layout

\begin_layout Enumerate
mean value, 
\end_layout

\begin_layout Enumerate
time-step error-bars and 
\end_layout

\begin_layout Enumerate
sampling errors 
\end_layout

\begin_layout Standard
respectively for each space-time point and each graphed function.
\end_layout

\begin_layout Standard
Data from each simulation in a sequence is packed into successive cells
 of an overall cell array 
\begin_inset Formula $cdata$
\end_inset

.
 This is used to store the total data in a sequence of simulations.
\end_layout

\begin_layout Standard
All these fields are resident in memory.
 They can be re-accessed and replotted, using the 
\series bold
xgraph
\series default
 function, if required.
 In summary: 
\end_layout

\begin_layout Description
Cell
\begin_inset space ~
\end_inset

Array
\begin_inset space ~
\end_inset


\begin_inset Formula $cdata$
\end_inset

 has dimension: 
\begin_inset Formula $cdata\{sequence\}$
\end_inset

.
 
\end_layout

\begin_layout Description
Array
\begin_inset space ~
\end_inset


\begin_inset Formula $data$
\end_inset

 has dimension: 
\begin_inset Formula $(errors,points(1),\ldots points(dimension),graphs$
\end_inset

).
 
\end_layout

\begin_layout Standard
The cell index enumerates the sequence number.
 The first array index 
\begin_inset Formula $(=1,2,3)$
\end_inset

 give the error-checking status of the data.
 If there is no error-bar checking, the second data array is zero.
 If there is no sampling error checking, the third data array is zero.
\end_layout

\begin_layout Section
Raw data
\end_layout

\begin_layout Standard
Although the quantity of data generated can be overwhelming, xSPDE can store
 every trajectory generated if asked to do so.
\end_layout

\begin_layout Standard
This raw data is stored in a cell array 
\begin_inset Formula $raw$
\end_inset

.
 The array is written to disk using the Matlab file-name, on completion,
 provided a file name is input.
\end_layout

\begin_layout Standard
The cell indices are: the ensemble index, the error-checking index and the
 sequence index.
 
\end_layout

\begin_layout Description
Cell
\begin_inset space ~
\end_inset

Array
\begin_inset space ~
\end_inset


\begin_inset Formula $raw$
\end_inset

 has dimension: 
\begin_inset Formula $raw\{ensemble,err,seq\}$
\end_inset

 
\end_layout

\begin_layout Standard
Inside each cell is at least one complete space-time 
\begin_inset Formula $field$
\end_inset

 stored as a complex array, with indices for the field index, the sample-space
 lattice, and the time index.
 The sample-space lattice structure internal to xSPDE means that a subensemble
 of individual stochastic fields is integrated in parallel.
 These are defined as a real or complex array: 
\end_layout

\begin_layout Description
Array
\begin_inset space ~
\end_inset


\begin_inset Formula $field$
\end_inset

 has dimension:
\begin_inset Formula $(fields,lattice,points(1))$
\end_inset

 
\end_layout

\begin_layout Standard
While this is a lengthy description, and an even larger array, it is also
 necessary if all the raw data needs to be extracted.
\end_layout

\begin_layout Standard
The main utility of the raw data is to provide a platform for further developmen
t of analytic tools for third party developers, to treat statistical features
 not included in the functional tools provided.
 For example, the basic xSPDE package does not provide histograms of distributio
ns.
\end_layout

\begin_layout Chapter
Algorithms 
\end_layout

\begin_layout Standard
Stochastic, partial and ordinary differential equations are central to numerical
 mathematics.
 Certainly, ordinary differential equations have been known in some form
 ever since calculus was invented.
 There are a truly extraordinary number of algorithms used to solve these
 equations.
 One program cannot possibly provide all of them.
\end_layout

\begin_layout Standard
xSPDE currently provides four built-in choices of algorithm.
 All built-in methods are defined in an interaction picture.
 All can be used with any space dimension, including 
\begin_inset Formula $dimension=1$
\end_inset

, which gives an ordinary stochastic equation.
 All can be used either with stochastic or with non-stochastic equations.
 When applied to stochastic equations, the Euler method requires an Ito
 form of stochastic equation, while the others should be used with the Stratonov
ich form of these equations.
 Each uses the interaction picture to take care of exactly soluble linear
 terms.
\end_layout

\begin_layout Standard
If you have a favorite integration method that isn't here, don't panic.
 User-defined algorithms can be added freely.
 You can easily add your own.
 The existing methods are listed below, and the corresponding 
\begin_inset Formula $m$
\end_inset

-files can be used as a model.
 Call the routine, for example 
\begin_inset Formula $'myalgorithm.m',$
\end_inset

 set 
\begin_inset Formula $'in.step=@myalgorithm'$
\end_inset

, then adjust the value of 
\begin_inset Formula $'in.ipsteps'$
\end_inset

 if the interaction-picture transform length must be changed to a new value.
\end_layout

\begin_layout Standard
Similarly, the interaction-picture transformation, 
\begin_inset Formula $in.prop$
\end_inset

, can also be changed if the built-in choice is not adequate for your needs.
\end_layout

\begin_layout Section
xSPDE algorithms
\end_layout

\begin_layout Standard
The four built-in algorithms provided are: 
\end_layout

\begin_layout Description
in.step=@xEuler: the first-order Euler method, a simple first-order explicit
 approach.
 
\end_layout

\begin_layout Description
in.step=@xRK2: a second order Runge-Kutta method.
 
\end_layout

\begin_layout Description
in.step=@xMP: the midpoint method: a semi-implicit, second order algorithm.
 
\end_layout

\begin_layout Description
in.step=@xRK4: a fourth order Runge-Kutta method, which is a popular ODE
 solver .
 
\end_layout

\begin_layout Standard
The reader is referred to the literature
\begin_inset CommandInset citation
LatexCommand cite
key "DrummondMortimer,K=00003D00003D000026P,WernerDrummond,Higham"

\end_inset

 for more details.
\end_layout

\begin_layout Standard
However, a word of caution is in order.
 For stochastic equations, which are non-differentiable, the classifications
 of convergence order should be taken 
\emph on
cum grano salis.
 
\emph default
In other words, don't believe it
\emph on
.
 
\emph default
Stochastic convergence is a complex issue, and the usual rules of calculus
 don't apply.
 This is because stochastic noise is non-differentiable.
 It has relative fluctuations proportional to 
\begin_inset Formula $1/\sqrt{dtdV}$
\end_inset

, for noise defined on a lattice with temporal cell-size 
\begin_inset Formula $dt$
\end_inset

 and spatial cell-size 
\begin_inset Formula $dV$
\end_inset

.
 Hence the usual differentiability and smoothness properties required to
 give high-order convergence for standard Runge-Kutta methods are simply
 not present.
\end_layout

\begin_layout Standard
All is not completely lost however, since xSPDE will attempt to estimate
 both the step-size and the sampling error, so you can check convergence
 yourself.
\end_layout

\begin_layout Section
Euler 
\end_layout

\begin_layout Standard
This is an explicit Ito-Euler method using an interaction picture.
 While very traditional, it is not generally recommended except for testing
 purposes.
 If it is used, very small step-sizes will generally be necessary to reduce
 errors to a usable level.
\end_layout

\begin_layout Standard
This is because it is is only convergent to first order, and therefore tends
 to have large errors.
 It is designed for use with an Ito form of stochastic equation.
 It requires one IP transform per step (
\begin_inset Formula $ipsteps=1$
\end_inset

).
 To get the next time point, one calculates:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray}
\Delta\mathbf{a}_{n} & = & \Delta t\mathbf{D}\left[\mathbf{a}_{n}\right]\nonumber \\
\mathbf{a}_{n+1} & = & \mathbf{P}\left(\Delta t\right)\cdot\left[\mathbf{a}_{n}+\Delta\mathbf{a}_{n}\right]
\end{eqnarray}

\end_inset


\end_layout

\begin_layout Section
Second order Runge-Kutta 
\end_layout

\begin_layout Standard
This is a second order Runge-Kutta method using an interaction picture 
\begin_inset CommandInset citation
LatexCommand cite
key "Caradoc-Davies"

\end_inset

.
 It is convergent to second order in time for non-stochastic equations,
 but for stochastic equations it can be more slowly convergent than the
 midpoint method.
 It requires two IP transforms per step, but each is a full time-step long
 (
\begin_inset Formula $ipsteps=1$
\end_inset

).
\end_layout

\begin_layout Standard
To get the next time point, one calculates:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray}
\bar{\mathbf{a}} & = & \mathbf{P}\left(\Delta t\right)\cdot\left[\mathbf{a}_{n}\right]\nonumber \\
\mathbf{d}^{(1)} & = & \Delta t\mathbf{P}\left(\Delta t\right)\cdot\mathbf{D}\left[\mathbf{a}_{n}\right]\nonumber \\
\mathbf{d}^{(2)} & = & \Delta t\mathbf{D}\left[\bar{\mathbf{a}}+\mathbf{d}^{(1)}\right]\nonumber \\
\mathbf{a}_{n+1} & = & \bar{\mathbf{a}}+\left(\mathbf{d}^{(1)}+\mathbf{d}^{(2)}\right)/2
\end{eqnarray}

\end_inset


\end_layout

\begin_layout Section
Midpoint
\end_layout

\begin_layout Standard
This is an implicit midpoint method using an interaction picture.
 It gives good results for stochastic 
\begin_inset CommandInset citation
LatexCommand cite
key "DrummondMortimer"

\end_inset

 and stochastic partial differential equations 
\begin_inset CommandInset citation
LatexCommand cite
key "WernerDrummond"

\end_inset

.
 While it is only convergent to second order in time for non-stochastic
 equations, it is strongly convergent and robust.
 It requires two half-length IP transforms per step (
\begin_inset Formula $ipsteps=2$
\end_inset

).
\end_layout

\begin_layout Standard
To get the next time point, one calculates a midpoint derivative iteratively
 at 
\begin_inset Formula $\bar{\mathbf{a}}^{(i)}$
\end_inset

, usually with three iterations:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray}
\bar{\mathbf{a}}^{(0)} & = & \mathbf{P}\left(\frac{\Delta t}{2}\right)\cdot\left[\mathbf{a}_{n}\right]\nonumber \\
\bar{\mathbf{a}}^{(i)} & = & \bar{\mathbf{a}}^{(0)}+\frac{\Delta t}{2}\mathbf{D}\left[\bar{\mathbf{a}}^{(i-1)}\right]\nonumber \\
\mathbf{a}_{n+1} & = & \mathbf{P}\left(\frac{\Delta t}{2}\right)\cdot\left[2\bar{\mathbf{a}}^{(i)}-\bar{\mathbf{a}}^{(0)}\right]
\end{eqnarray}

\end_inset


\end_layout

\begin_layout Section
Fourth order Runge-Kutta
\end_layout

\begin_layout Standard
This is a fourth order Runge-Kutta method using an interaction picture 
\begin_inset CommandInset citation
LatexCommand cite
key "Caradoc-Davies"

\end_inset

.
 It is convergent to fourth order in time for non-stochastic equations,
 but for stochastic equations it can be more slowly convergent than the
 midpoint method.
 It requires four half-length IP transforms per step (
\begin_inset Formula $ipsteps=2$
\end_inset

).
 To get the next time point, one calculates four derivatives sequentially:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray}
\bar{\mathbf{a}} & = & \mathbf{P}\left(\frac{\Delta t}{2}\right)\cdot\left[\mathbf{a}_{n}\right]\nonumber \\
\mathbf{d}^{(1)} & = & \frac{\Delta t}{2}\mathbf{P}\left(\frac{\Delta t}{2}\right)\cdot\mathbf{D}\left[\mathbf{a}_{n}\right]\nonumber \\
\mathbf{d}^{(2)} & = & \frac{\Delta t}{2}\mathbf{D}\left[\bar{\mathbf{a}}+\mathbf{d}^{(1)}\right]\nonumber \\
\mathbf{d}^{(3)} & = & \frac{\Delta t}{2}\mathbf{D}\left[\bar{\mathbf{a}}+\mathbf{d}^{(2)}\right]\nonumber \\
\mathbf{d}^{(4)} & = & \frac{\Delta t}{2}\mathbf{D}\left[\mathbf{P}\left(\frac{\Delta t}{2}\right)\left[\bar{\mathbf{a}}+2\mathbf{d}^{(3)}\right]\right]\nonumber \\
\mathbf{a}_{n+1} & = & \mathbf{P}\left(\frac{\Delta t}{2}\right)\cdot\left[\bar{\mathbf{a}}+\left(\mathbf{d}^{(1)}+2\left(\mathbf{d}^{(2)}+\mathbf{d}^{(3)}\right)\right)/3\right]+\mathbf{d}^{(4)}/3
\end{eqnarray}

\end_inset


\end_layout

\begin_layout Standard
This might seem like the obvious choice, having the highest order.
 However, it can actually converge at a range of apparent rates, depending
 on the relative importance of stochastic and non-stochastic terms.
 Due to its reliance on differentiability, it may converge more slowly than
 the midpoint method with stochastic terms present.
\end_layout

\begin_layout Standard
The actual error is best judged by measuring it, as explained next.
\end_layout

\begin_layout Section
Convergence checks
\end_layout

\begin_layout Standard
To check convergence, xSPDE repeats the calculations at least twice for
 checking step-sizes, and many times more in stochastic cases.
 
\emph on
If you think this is too boring and slow, turn it off.

\emph default
 However, you won't know your errors!
\end_layout

\begin_layout Standard
Whatever the application, you will find the error-estimates useful.
 If the errors are too large, and this is relative to the application, you
 should decrease the time-steps or increase the number of samples.
 Which to do entirely depends on the type of error.
 In xSPDE, the step-size error due to finite time-step sizes is called the
 `step' error.
 The sampling error due to finite samples of trajectories is called the
 `sample' error.
 The maximum value of each of these, calculated over the set of all computed
 observables, is printed out at the end of the run.
\end_layout

\begin_layout Standard
Where there is 2D graphical output, the error bars give the step-size error,
 if you have 
\begin_inset Formula $check=2$
\end_inset

.
 To distinguish the error types, two lines are graphed for an upper and
 lower standard deviation departure from the mean, indicating the sampling
 error.
 This is only plotted if 
\begin_inset Formula $ensemble$
\end_inset

 is greater than one, preferably at least 
\begin_inset Formula $10-20$
\end_inset

 to give reliable estimates.
\end_layout

\begin_layout Standard
Note that the sample error is usually reasonably accurate.
 It occasionally may underestimate errors for pathological distributions.
 The step error is generally the more cautious of the two, and tends to
 overestimate errors.
 Neither should be relied as more than a rough guide.
\end_layout

\begin_layout Standard
As a check, the code allows users to graph a defined 2D exact result, if
 known, for comparison and testing purposes.
 These are graphed using dashed lines.
 This facility can be turned on or off for each observable using Boolean
 variables.
 This can be useful even if no exact result is known, but there is a known
 conservation law.
\end_layout

\begin_layout Standard
In summary, there are three types of convergence checks, all of which appear
 in the output as printed maximum values and projected two-dimensional graphs:
 
\end_layout

\begin_layout Itemize
Error bars indicate the error due to finite step-size 
\end_layout

\begin_layout Itemize
Upper and lower solid lines indicate the 
\begin_inset Formula $\pm\sigma$
\end_inset

 sampling error bounds 
\end_layout

\begin_layout Itemize
Dashed lines indicate comparison values, which are useful when there are
 exact results for testing 
\end_layout

\begin_layout Section
Extrapolation order and error bars
\end_layout

\begin_layout Standard
For checking step-size errors, xSPDE allows the user to specify 
\begin_inset Formula $errorchecks=2$
\end_inset

, which is the default option.
 This gives one integration at the specified step-size, and one at half
 the specified step-size.
 The data is plotted at the fine step-size.
 The standard error-bar, with no extrapolation, has a half-size equal to
 the difference of fine and coarse step graphed results.
\end_layout

\begin_layout Standard
To allow for extrapolation, xSPDE allows user input of an assumed extrapolation
 order called 
\begin_inset Formula $order$
\end_inset

.
 If this is done, and errorchecks are set to 2 to allow successive integration
 with two different step-sizes, the output of all data graphed will be extrapola
ted to the specified order.
 In this case, the error bar half-size is set to the difference of the fine
 estimate and the 
\emph on
extrapolated
\emph default
 estimate.
\end_layout

\begin_layout Standard
Extrapolation is a well-known technique for improving the accuracy of a
 differential equation solver.
 Suppose an algorithm has a result with a known convergence order 
\begin_inset Formula $n$
\end_inset

.
 This means that for small enough step-size, integration results 
\begin_inset Formula $R\left(dt\right)$
\end_inset

 with step-size 
\begin_inset Formula $dt$
\end_inset

 have an error of size 
\begin_inset Formula $dt^{n}$
\end_inset

, that is: 
\begin_inset Formula 
\begin{equation}
R\left(dt\right)=R_{0}+E\left(dt\right)=R_{0}+k.dt^{n}\,.
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
Hence, from two results at different values of 
\begin_inset Formula $dt,$
\end_inset

 differing by a factor of 
\begin_inset Formula $2$
\end_inset

, one would obtain 
\begin_inset Formula 
\begin{eqnarray}
R_{1} & = & R\left(dt\right)=R_{0}+k.dt^{n}\nonumber \\
R_{2} & = & R\left(2dt\right)=R_{0}+2^{n}k.dt^{n}\,.
\end{eqnarray}

\end_inset

The true result, extrapolated to the small-step size limit, is therefore
 given by giving more weight to the fine step-size result, while 
\emph on
subtracting
\emph default
 from this a correction due to the coarse step-size calculation: 
\begin_inset Formula 
\begin{equation}
R_{0}=\frac{\left[R_{1}-R_{2}2^{-n}\right]}{\left[1-2^{-n}\right]}\,.
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
Thus, for example, if we define a factor 
\begin_inset Formula $\epsilon$
\end_inset

 as 
\begin_inset Formula 
\begin{equation}
\epsilon\left(n\right)=\frac{1}{\left[2^{n}-1\right]}=\left(1,\frac{1}{3},\frac{1}{7}\ldots\right)\,,
\end{equation}

\end_inset

then the true results are obtained from extrapolation to zero step-size
 as:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
R_{0}=\left(1+\epsilon\right)R_{1}-\epsilon R_{2}\,.
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
The built-in algorithms have convergence order as ordinary differential
 equation integrators of 
\begin_inset Formula $1,2,2,4$
\end_inset

 respectively, and should converge to this order at small step-sizes.
\end_layout

\begin_layout Standard
However, the situation is not as straightforward for stochastic equations.
 First order convergence is always obtainable stochastically.
 In addition, second order convergence is generally obtainable with the
 midpoint algorithm, although this is not guaranteed: it depends on the
 precise noise term.
 However, the Runge-Kutta algorithms used do 
\series bold
not
\series default
 converge to the standard ODE order for stochastic equations.
 Hence extrapolation should be used with extreme caution in stochastic calculati
ons.
\end_layout

\begin_layout Standard
While extrapolated results are usually inside those given by the default
 error-bars, 
\series bold
extrapolation with too high an order can under-estimate the resulting error
 bars.
 
\series default
Therefore, xSPDE assumes a cautious default order of 
\begin_inset Formula $order=1$
\end_inset

.
 Note that one can set 
\begin_inset Formula $order=0$
\end_inset

 to obtain fine resolution values and error bars without extrapolation,
 but this is generally less accurate.
\end_layout

\begin_layout Section
Sampling errors
\end_layout

\begin_layout Standard
Sampling error estimation in xSPDE uses sub-ensemble averaging.
 Ensembles are specified in three levels.
 The first, 
\emph on
ensemble(1)
\emph default
, is called the number of samples for brevity.
 All computed quantities returned by the 
\series bold
observe
\series default
 functions are first averaged over the samples, which are calculated efficiently
 using a parallel vector of trajectories.
 By the central limit theorem, these sample averages are distributed as
 a normal distribution at large sample number.
\end_layout

\begin_layout Standard
Next, the sample averages are averaged 
\series bold
again
\series default
 over the two higher level ensembles, if specified.
 This time, the variance is accumulated.
 The variance of these distributions is used to estimate a standard deviation
 in the mean, since each computed quantity is now a normally distributed
 result.
 This method is applied to all the 
\emph on
graphs 
\emph default
observables.
 The two lines generated represent 
\begin_inset Formula $\bar{o}\pm\sigma$
\end_inset

, where 
\begin_inset Formula $o$
\end_inset

 is the observe function output, and 
\begin_inset Formula $\sigma$
\end_inset

 is the standard deviation in the mean.
\end_layout

\begin_layout Standard
The highest level ensemble, 
\emph on
ensemble(3), 
\emph default
is used for parallel simulations.
 This requires the Matlab parallel toolbox.
 Either type of high-level ensemble, or both together, can be used to calculate
 sampling errors.
\end_layout

\begin_layout Standard
Note that one standard deviation is not a strong bound; errors are expected
 to exceed this value in 
\begin_inset Formula $32\%$
\end_inset

 of observed measurements.
 Another point to remember is that stochastic errors are often correlated,
 so that a group of points may all have similar errors due to statistical
 sampling.
\end_layout

\begin_layout Chapter
Extensibility
\end_layout

\begin_layout Standard
This chapter will treats the extensibility of xSPDE.
\end_layout

\begin_layout Section
Open object-oriented architecture
\end_layout

\begin_layout Standard
As well as extensibility through sequences, which was described in Chapter
 3, in section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Sequential-integration"

\end_inset

, the open architecture of xSPDE allows functional extensions.
 
\end_layout

\begin_layout Standard
This further type of extensibility permits user definable functions to be
 specified in the 
\begin_inset Formula $in$
\end_inset

 metadata structures.
 These functions have default values in xSPDE, and can simply be used as
 is.
 It is also possible to have user defined functions that satisfy the interface
 definitions instead.
 This is achieved simply by including the relevant function handles and
 parameters in the input metadata.
\end_layout

\begin_layout Standard
This input metadata includes both data and methods acting on the data, in
 the tradition of object-oriented programs.
 Yet there is no strict class typing.
 Users are encouraged to adapt the xSPDE program by adding more input parameters
 and methods to the input structures.
 Internal parameters and function handles stored in the lattice structure
 
\begin_inset Formula $r$
\end_inset

 are available to all user-defined simulation functions.
 Note that use of pre-existing reserved names is not advisable - see tables
 below.
\end_layout

\begin_layout Standard

\emph on
Such unorthodox object orientation is deliberate
\emph default
.
 
\end_layout

\begin_layout Standard
The xSPDE software architecture is intended to be easily extended, and users
 are encouraged to develop their own libraries.
 Because this may require new functions and parameters, the internal data
 architecture is as open as possible.
 
\end_layout

\begin_layout Standard
For example, to define your own integration function, include in the xSPDE
 input the line:
\end_layout

\begin_layout Standard
\align center
\begin_inset Box Doublebox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
in.step=@Mystep;
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Next, include anywhere on your Matlab path, the function definition, for
 example:
\end_layout

\begin_layout Standard
\align center
\begin_inset Box Doublebox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
status open

\begin_layout Plain Layout

\family typewriter
function a = Mystep(a,xi,dt,r) 
\end_layout

\begin_layout Plain Layout

\family typewriter
% a = Mystep(a,xi,dt,r) propagates a step my way.
 
\end_layout

\begin_layout Plain Layout

\family typewriter
..
\end_layout

\begin_layout Plain Layout

\family typewriter
a = ...; 
\end_layout

\begin_layout Plain Layout

\family typewriter
end 
\end_layout

\end_inset


\end_layout

\begin_layout Section
Table of xSPDE metadata 
\end_layout

\begin_layout Standard
The input cell array, 
\begin_inset Formula $input$
\end_inset

, includes input data in structures 
\begin_inset Formula $in$
\end_inset

.
 This data is also passed to the 
\begin_inset Formula $xgraph$
\end_inset

 function.
 The inputs are numbers, vectors, strings, functions and cell arrays.
 All xSPDE metadata has preferred values, so only changes from the preferences
 need to be input.
 The resulting data is stored internally as a sequence of structures in
 a cell array, to describe the simulation sequence.
\end_layout

\begin_layout Standard
Simulation metadata, including all preferred default values that were used
 in a particular simulation, is also stored for reference in any xSPDE output
 files.
 This is done in both the 
\begin_inset Formula $.mat$
\end_inset

 and the 
\begin_inset Formula $.h5$
\end_inset

output files, so the entire simulation can be easily reconstructed or changed.
\end_layout

\begin_layout Standard
Note that inputs can be numbers, vectors, strings or cells arrays.
 To simplify the inputs, some conventions are used, as follows: 
\end_layout

\begin_layout Itemize

\series bold
All input data has default values
\end_layout

\begin_layout Itemize

\series bold
Vector inputs of numbers are enclosed in square brackets, [...].
 
\end_layout

\begin_layout Itemize

\series bold
Where multiple inputs of strings, functions or vectors are needed they should
 be enclosed in curly brackets, {...}, to create a cell array.
 
\end_layout

\begin_layout Itemize

\series bold
Vector or cell array inputs with only one member don't require brackets.
 
\end_layout

\begin_layout Itemize

\series bold
Incomplete or partial vector or cell array inputs are filled in with the
 last applicable default value.
 
\end_layout

\begin_layout Itemize

\series bold
New function definitions can be just handles pointing elsewhere.
\end_layout

\begin_layout Subsection
Table of user functions
\end_layout

\begin_layout Standard
The user-definable functions, output field dimensions and calling arguments
 are:
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="13" columns="4">
<features rotate="0" tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Label 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Output dimension 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Arguments 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Purpose
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
*da
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
d.a
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
(a,z,r)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Stochastic derivative
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
*initial
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
d.a
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
(v,r)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Function to initialize fields
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
*linear
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
d.a
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
(D,r)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Linear interaction picture function
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
rfilter
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
d.random2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
 
\emph default
(r)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Random input filter function in k-space
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
nfilter
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
d.noise2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
(r)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Noise filter function in k-space
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
transfer
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
d.a
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
(v,a0,r,r0)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Function to initialize fields in sequences
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
step
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
d.a
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
(a,z,dt,r)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Function to calculate one time-step
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
grid
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
d.r
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
 
\emph default
(r)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Grid calculator for lattice
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
prop
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
d.a
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
(a,r)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Interaction picture (IP) propagation 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
propfactor
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
d.a 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
(nc,r)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
IP propagator array calculation
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
observe
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
d.int 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
(a,r)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Observable function cell array
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
compare
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
points(1)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
(t,in) 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Comparison function cell array
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsection
Constants for 
\emph on
in
\emph default
 structure
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="24" columns="4">
<features rotate="0" tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Label 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Type 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Typical value 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Description
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
version
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
string 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
'xSPDEv1.01'
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Current version number (added automatically)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
name
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
string 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Quotes erd
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Simulation name
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
dimension
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
integer 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Space-time dimension
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
fields
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
integer 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Number of stochastic fields
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
ranges
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
vector 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
10 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Range of coordinates in [t,x,y,z]
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
origin
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
vector 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Origin of coordinates in [t,x,y,z]
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
points
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
vector 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
51 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Output lattice points in [t,x,y,z]
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
noises
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
vector 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
[1 0]
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Number of noise fields in [x,k]
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
randoms
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
vector 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
[1 0]
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Initial random fields in [x,k]
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
ensembles
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
vector 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
[1 1 1]
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ensembles used for averaging
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
steps
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
integer 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
1
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Integration steps per output point
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
iterations
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
integer 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
4
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Maximum iterations
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
order
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
integer 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
1
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Extrapolation order 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
errorchecks
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
integer 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
2
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Number of error-checking cycles
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
seed
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
integer 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
0
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Seed for random number generator
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
file
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
string 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
'f.mat' or 'f.h5' 
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
File-name for HDF5 or Matlab data file
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
ipsteps
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
integer 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
2
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
IP transforms per time-step
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
graphs
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
integer 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
1
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Number of observables
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
print
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
integer 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Print switch, 1 for medium output
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
c 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
any 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
- 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
User specified static constants or structures
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
olabels
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
string cells 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
{'a_1',..}
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Observable labels
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
transforms
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
vector cells 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
 {[0 0 0 0],..}
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Fourier transforms in [t,x,y,z]
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
raw
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
integer 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Raw trajectory switch, 1 for output
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsection
Graphics data for 
\emph on
in
\emph default
 structure
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="11" columns="4">
<features rotate="0" tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Label 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Type 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Typical value 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Description
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
minbar
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
cell 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
{0.01,..}
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Minimum relative error-bar size
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
font
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
cell 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
{18,..} 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Font size for graph labels
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
xlabels
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
cell 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
 {'t' 'x' 'y' 'z'}
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Strings for x-axis labels
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
klabels
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
cell 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
 {'
\backslash
omega' 'k_x' 'k_y' 'k_z'}
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Transformed axis labels
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
headers
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
cell 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
{0,..} 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Switch for graph headers
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
images
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
cell 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
{0,..} 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Number of movie style images 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
imagetype
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
cell 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
{0,..} 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Type of movie style images 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
transverse
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
cell 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
{0,..} 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Number of transverse plots 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
pdimension
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
cell 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
{2,..} 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Maximum plot dimensions 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
*compare
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
function cell 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
{@(t,in) t^2} 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Comparison functions
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsection
Internal xSPDE parameters in 'r' structure
\end_layout

\begin_layout Standard
Internally, xSPDE data is stored in a cell array, 
\begin_inset Formula $latt$
\end_inset

, of structures 
\begin_inset Formula $r$
\end_inset

, which is passed to functions.
 This includes all the data given above inside the 
\begin_inset Formula $in$
\end_inset

 structure.
 In adition, it includes the table of computed parameters given below.
 
\end_layout

\begin_layout Standard
User application constants and parameters should not be reserved names;
 
\emph on
'in.c'
\emph default
 and all names starting with '
\emph on
in.c
\emph default
' will always be available in all versions of xSPDE.
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="33" columns="4">
<features rotate="0" tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Label 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Type 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Typical value 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Description
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
t 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Current value of time, t
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
\begin_inset Formula $x,y,z$
\end_inset


\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
array 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
-
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Grid of 
\begin_inset Formula $x,y,z$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
\begin_inset Formula $kx,ky,kz$
\end_inset


\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
array 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
-
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Grid of 
\begin_inset Formula $[k_{x},k_{y},k_{z}$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
dx
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
vector 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
0.2
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Steps in 
\begin_inset Formula $[t,x,y,z]$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
dk
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
vector 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
0.6160
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Steps in 
\begin_inset Formula $[\omega,k_{x},k_{y},k_{z}]$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
dt
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
double 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
0.2000
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Output time-step
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
V
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
real 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
1
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Spatial lattice volume
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
K
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
real 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
1
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Momentum lattice volume
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
dV
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
real 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
1
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Spatial cell volume
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
dK
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
real 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
1
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Momentum cell volume
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
xc
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
vector cells 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
{[0,...
 10]}
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Space-time coordinate axes
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
kc
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
vector cells 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
{[0,..15,-15...]}
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Computational axes in
\begin_inset Formula $[\omega,k_{x},k_{y},k_{z}]$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
gk
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
vector cells 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
{[-15,...
 15]}
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Graphics axes in
\begin_inset Formula $[\omega,k_{x},k_{y},k_{z}]$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
kr
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
vector 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
30
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Range in
\begin_inset Formula $[\omega,k_{x},k_{y},k_{z}]$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
wtph
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
vector 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
- 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Frequency phase-factors
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
s.dx
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
double 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Initial stochastic normalization
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
s.dxt
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
double 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
3.1623
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Propagating stochastic normalization
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
s.dk
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
double 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Initial k stochastic normalization
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
s.dkt
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
double 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
3.1623
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Propagating k stochastic normalization
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
n.space
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
integer 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Number of spatial lattice points
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
n.lattice
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
integer 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Total lattice: ensembles(1) x n.space 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
n.ensemble
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
integer 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ensembles(2) x ensembles(3)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
n.random
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
integer 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Number of initial random fields
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
n.noise
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
integer 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Number of noise fields
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
d.int
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
vector 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
[1 1]
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Dimensions for lattice integration
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
d.a
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
vector 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
[1 1]
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Dimensions for 
\begin_inset Formula $a$
\end_inset

 field (flattened)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
d.r
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
vector 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
 [1 1]
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Dimensions for coordinates (flattened)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
d.ft
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
vector 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
[1 1 1]
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Dimensions for field transforms
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
d.k
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
vector 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
[0 1 1]
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Dimensions for noise transforms
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
d.obs
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
vector 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
[1 1 1 1]
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Dimensions for observations
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
d.data
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
vector 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
[1 3 51 1]
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Dimensions for average data (flattened)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
d.raw
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
vector 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\emph on
[1 1 51 1]
\emph default
 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Dimensions for raw data (flattened)
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "Gardiner"

\end_inset

C.
 W.
 Gardiner, 
\emph on
Handbook of Stochastic Methods: for Physics, Chemistry and the Natural Sciences
\emph default
 (Springer 2004).
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "xmds"

\end_inset

 G.
 R.
 Collecutt, P.
 D.
 Drummond, 
\emph on
Xmds: eXtensible multi-dimensional simulator.

\emph default
 Comput.
 Phys.
 Commun.
 
\series bold
142
\series default
, 219-223 (2001).
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "xmds2"

\end_inset

Graham R.
 Dennis, Joseph J.
 Hope, Mattias T.
 Johnsson, 
\emph on
XMDS2: Fast, scalable simulation of coupled stochastic partial differential
 equations,
\emph default
 Computer Physics Communications 
\series bold
184
\series default
, 201‚Äì208 (2013).
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "xmds-source"

\end_inset

http://sourceforge.net/projects/xmds/
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "DrummondMortimer"

\end_inset

P.
 D.
 Drummond and I.
 K.
 Mortimer, 
\emph on
Computer simulations of multiplicative stochastic differential equations.

\emph default
 J.
 Comp.
 Phys.
 
\series bold
93
\series default
, 144-170 (1991).
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "K=00003D00003D000026P"

\end_inset

P.E.
 Kloeden and E.
 Platen, 
\emph on
Numerical Solution of Stochastic Differential Equations
\emph default
 (Springer, 1995).
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "WernerDrummond"

\end_inset

M.
 J.
 Werner and P.
 D.
 Drummond, 
\emph on
Robust algorithms for solving stochastic partial differential equations.

\emph default
 J.
 Comp.
 Phys.
 
\series bold
132
\series default
, 312-326 (1997).
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "Caradoc-Davies"

\end_inset

B.
 M.
 Caradoc-Davies, 
\emph on
Vortex dynamics in Bose-Einstein condensates
\emph default
 (Doctoral dissertation, PhD thesis, University of Otago (NZ), 2000).
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "Higham"

\end_inset

 Desmond J.
 Higham, 
\emph on
An Algorithmic Introduction to Numerical Simulation of Stochastic Differential
 Equations
\emph default
, SIAM Review 
\series bold
43
\series default
, 525‚Äì546 ( 2001).
\end_layout

\end_body
\end_document
